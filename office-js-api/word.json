[
    {
        "comment": "/**\n\t * Base class\n\t * @global\n\t * @class\n\t * @name Api\n\t */",
        "description": "Base class",
        "name": "Api",
        "longname": "Api",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 36,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a container for paragraphs and tables.\n\t * @param Document\n\t * @constructor\n\t */",
        "description": "Class representing a container for paragraphs and tables.",
        "name": "ApiDocumentContent",
        "longname": "ApiDocumentContent",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 218,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a continuous region in a document. \n\t * Each Range object is determined by the position of the start and end characters.\n\t * @param oElement - The document element that may be Document, Table, Paragraph, Run or Hyperlink.\n\t * @param {Number} Start - The start element of Range in the current Element.\n\t * @param {Number} End - The end element of Range in the current Element.\n\t * @constructor\n\t */",
        "description": "Class representing a continuous region in a document. \nEach Range object is determined by the position of the start and end characters.",
        "name": "ApiRange",
        "longname": "ApiRange",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 1197,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiRange class.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"range\"}\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiRange class.",
        "memberof": "ApiRange",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"range\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"range\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiRange#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1431,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a paragraph from all the paragraphs that are in the range.\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} nPos - The paragraph position in the range.\n\t * @return {ApiParagraph | null} - returns null if position is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetParagraph.js\n\t */",
        "description": "Returns a paragraph from all the paragraphs that are in the range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nPos",
                "description": "The paragraph position in the range.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParagraph",
        "longname": "ApiRange#GetParagraph",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1443,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetParagraph.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a text to the specified position.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {String} sText - The text that will be added.\n\t * @param {string} [sPosition = \"after\"] - The position where the text will be added (\"before\" or \"after\" the range specified).\n\t * @return {boolean} - returns false if range is empty or sText isn't string value.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/AddText.js\n\t */",
        "description": "Adds a text to the specified position.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sText",
                "description": "The text that will be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sPosition",
                "description": "The position where the text will be added (\"before\" or \"after\" the range specified).",
                "optional": true,
                "defaultvalue": "\"after\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddText",
        "longname": "ApiRange#AddText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1465,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/AddText.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a bookmark to the specified range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {String} sName - The bookmark name.\n\t * @return {boolean} - returns false if range is empty.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/AddBookmark.js\n\t */",
        "description": "Adds a bookmark to the specified range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sName",
                "description": "The bookmark name.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddBookmark",
        "longname": "ApiRange#AddBookmark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1554,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/AddBookmark.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a hyperlink to the specified range. \n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLink - The link address.\n\t * @param {string} sScreenTipText - The screen tip text.\n\t * @return {ApiHyperlink | null}  - returns null if range contains more than one paragraph or sLink is invalid. \n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/AddHyperlink.js\n\t */",
        "description": "Adds a hyperlink to the specified range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLink",
                "description": "The link address.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sScreenTipText",
                "description": "The screen tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiHyperlink",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiHyperlink"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "AddHyperlink",
        "longname": "ApiRange#AddHyperlink",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1588,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/AddHyperlink.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a text from the specified range.\n\t * @memberof ApiRange\n\t * @param {object} oPr - The resulting string display properties.\n     * @param {boolean} [oPr.NewLineParagraph=false] - Defines if the resulting string will include paragraph line boundaries or not.\n     * @param {boolean} [oPr.Numbering=false] - Defines if the resulting string will include numbering or not.\n     * @param {boolean} [oPr.Math=false] - Defines if the resulting string will include mathematical expressions or not.\n\t * @param {string} [oPr.NewLineSeparator='\\r'] - Defines how the line separator will be specified in the resulting string.\n     * @param {string} [oPr.TableCellSeparator='\\t'] - Defines how the table cell separator will be specified in the resulting string.\n     * @param {string} [oPr.TableRowSeparator='\\r\\n'] - Defines how the table row separator will be specified in the resulting string.\n     * @param {string} [oPr.ParaSeparator='\\r\\n'] - Defines how the paragraph separator will be specified in the resulting string.\n\t * @param {string} [oPr.TabSymbol='\\t'] - Defines how the tab will be specified in the resulting string (does not apply to numbering)\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {String} - returns \"\" if range is empty.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetText.js\n\t */",
        "description": "Returns a text from the specified range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "object"
                    }
                },
                "name": "oPr",
                "description": "The resulting string display properties.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "oPr.NewLineParagraph",
                "description": "Defines if the resulting string will include paragraph line boundaries or not.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "oPr.Numbering",
                "description": "Defines if the resulting string will include numbering or not.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "oPr.Math",
                "description": "Defines if the resulting string will include mathematical expressions or not.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.NewLineSeparator",
                "description": "Defines how the line separator will be specified in the resulting string.",
                "optional": true,
                "defaultvalue": "'\\r'"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.TableCellSeparator",
                "description": "Defines how the table cell separator will be specified in the resulting string.",
                "optional": true,
                "defaultvalue": "'\\t'"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.TableRowSeparator",
                "description": "Defines how the table row separator will be specified in the resulting string.",
                "optional": true,
                "defaultvalue": "'\\r\\n'"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.ParaSeparator",
                "description": "Defines how the paragraph separator will be specified in the resulting string.",
                "optional": true,
                "defaultvalue": "'\\r\\n'"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.TabSymbol",
                "description": "Defines how the tab will be specified in the resulting string (does not apply to numbering)",
                "optional": true,
                "defaultvalue": "'\\t'"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiRange#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1634,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of paragraphs that represents all the paragraphs in the specified range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetAllParagraphs.js\n\t */",
        "description": "Returns a collection of paragraphs that represents all the paragraphs in the specified range.",
        "memberof": "ApiRange",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllParagraphs",
        "longname": "ApiRange#GetAllParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1679,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetAllParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the selection to the specified range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/Select.js\n\t */",
        "description": "Sets the selection to the specified range.",
        "memberof": "ApiRange",
        "params": null,
        "returns": null,
        "name": "Select",
        "longname": "ApiRange#Select",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1753,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/Select.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a new range that goes beyond the specified range in any direction and spans a different range. The current range has not changed. Throws an error if two ranges do not have a union.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiRange} oRange - The range that will be expanded.\n\t * @return {ApiRange | null} - returns null if the specified range can't be expanded. \n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/ExpandTo.js\n\t */",
        "description": "Returns a new range that goes beyond the specified range in any direction and spans a different range. The current range has not changed. Throws an error if two ranges do not have a union.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                },
                "name": "oRange",
                "description": "The range that will be expanded.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "ExpandTo",
        "longname": "ApiRange#ExpandTo",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1802,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/ExpandTo.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a new range as the intersection of the current range with another range. The current range has not changed. Throws an error if two ranges do not overlap or are not adjacent.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiRange} oRange - The range that will be intersected with the current range.\n\t * @return {ApiRange | null} - returns null if can't intersect.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/IntersectWith.js\n\t */",
        "description": "Returns a new range as the intersection of the current range with another range. The current range has not changed. Throws an error if two ranges do not overlap or are not adjacent.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                },
                "name": "oRange",
                "description": "The range that will be intersected with the current range.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "IntersectWith",
        "longname": "ApiRange#IntersectWith",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1858,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/IntersectWith.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the bold property to the text character.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isBold - Specifies if the Range contents are displayed bold or not.\n\t * @returns {ApiRange | null} - returns null if can't apply bold.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetBold.js\n\t */",
        "description": "Sets the bold property to the text character.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBold",
                "description": "Specifies if the Range contents are displayed bold or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetBold",
        "longname": "ApiRange#SetBold",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1939,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetBold.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that any lowercase characters in the current text Range are formatted for display only as their capital letter character equivalents.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isCaps - Specifies if the Range contents are displayed capitalized or not.\n\t * @returns {ApiRange | null} - returns null if can't apply caps.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetCaps.js\n\t */",
        "description": "Specifies that any lowercase characters in the current text Range are formatted for display only as their capital letter character equivalents.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isCaps",
                "description": "Specifies if the Range contents are displayed capitalized or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetCaps",
        "longname": "ApiRange#SetCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 1984,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text color to the current text Range in the RGB format.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - If this parameter is set to \"true\", then r,g,b parameters will be ignored.\n\t * @returns {ApiRange | null} - returns null if can't apply color.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetColor.js\n\t */",
        "description": "Sets the text color to the current text Range in the RGB format.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAuto",
                "description": "If this parameter is set to \"true\", then r,g,b parameters will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetColor",
        "longname": "ApiRange#SetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2031,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the current Range are displayed with two horizontal lines through each character displayed on the line.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isDoubleStrikeout - Specifies if the contents of the current Range are displayed double struck through or not.\n\t * @returns {ApiRange | null} - returns null if can't apply double strikeout.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetDoubleStrikeout.js\n\t */",
        "description": "Specifies that the contents of the current Range are displayed with two horizontal lines through each character displayed on the line.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isDoubleStrikeout",
                "description": "Specifies if the contents of the current Range are displayed double struck through or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetDoubleStrikeout",
        "longname": "ApiRange#SetDoubleStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2101,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetDoubleStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a highlighting color which is applied as a background to the contents of the current Range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {highlightColor} sColor - Available highlight color.\n\t * @returns {ApiRange | null} - returns null if can't apply highlight.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetHighlight.js\n\t */",
        "description": "Specifies a highlighting color which is applied as a background to the contents of the current Range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "highlightColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "highlightColor"
                    }
                },
                "name": "sColor",
                "description": "Available highlight color.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetHighlight",
        "longname": "ApiRange#SetHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2146,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the current text Range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type applied to the contents of the current text Range.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @returns {ApiRange | null} - returns null if can't apply shadow.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the current text Range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ShdType"
                    }
                },
                "name": "sType",
                "description": "The shading type applied to the contents of the current text Range.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetShd",
        "longname": "ApiRange#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2208,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the italic property to the text character.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isItalic - Specifies if the contents of the current Range are displayed italicized or not.\n\t * @returns {ApiRange | null} - returns null if can't apply italic.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetItalic.js\n\t */",
        "description": "Sets the italic property to the text character.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isItalic",
                "description": "Specifies if the contents of the current Range are displayed italicized or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetItalic",
        "longname": "ApiRange#SetItalic",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2253,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetItalic.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the current Range are displayed with a single horizontal line through the range center.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isStrikeout - Specifies if the contents of the current Range are displayed struck through or not.\n\t * @returns {ApiRange | null} - returns null if can't apply strikeout.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetStrikeout.js\n\t */",
        "description": "Specifies that the contents of the current Range are displayed with a single horizontal line through the range center.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isStrikeout",
                "description": "Specifies if the contents of the current Range are displayed struck through or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetStrikeout",
        "longname": "ApiRange#SetStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2298,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that all the lowercase letter characters in the current text Range are formatted for display only as their capital\n\t * letter character equivalents which are two points smaller than the actual font size specified for this text.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isSmallCaps - Specifies if the contents of the current Range are displayed capitalized two points smaller or not.\n\t * @returns {ApiRange | null} - returns null if can't apply small caps.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetSmallCaps.js\n\t */",
        "description": "Specifies that all the lowercase letter characters in the current text Range are formatted for display only as their capital\nletter character equivalents which are two points smaller than the actual font size specified for this text.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isSmallCaps",
                "description": "Specifies if the contents of the current Range are displayed capitalized two points smaller or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetSmallCaps",
        "longname": "ApiRange#SetSmallCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2347,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetSmallCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text spacing measured in twentieths of a point.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nSpacing - The value of the text spacing measured in twentieths of a point (1/1440 of an inch).\n\t * @returns {ApiRange | null} - returns null if can't apply spacing.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetSpacing.js\n\t */",
        "description": "Sets the text spacing measured in twentieths of a point.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nSpacing",
                "description": "The value of the text spacing measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetSpacing",
        "longname": "ApiRange#SetSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2395,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the current Range are displayed along with a line appearing directly below the character\n\t * (less than all the spacing above and below the characters on the line).\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isUnderline - Specifies if the contents of the current Range are displayed underlined or not.\n\t * @returns {ApiRange | null} - returns null if can't apply underline.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetUnderline.js\n\t */",
        "description": "Specifies that the contents of the current Range are displayed along with a line appearing directly below the character\n(less than all the spacing above and below the characters on the line).",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isUnderline",
                "description": "Specifies if the contents of the current Range are displayed underlined or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetUnderline",
        "longname": "ApiRange#SetUnderline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2441,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetUnderline.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the alignment which will be applied to the Range contents in relation to the default appearance of the Range text:\n\t * <b>\"baseline\"</b> - the characters in the current text Range will be aligned by the default text baseline.\n\t * <b>\"subscript\"</b> - the characters in the current text Range will be aligned below the default text baseline.\n\t * <b>\"superscript\"</b> - the characters in the current text Range will be aligned above the default text baseline.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"baseline\" | \"subscript\" | \"superscript\")} sType - The vertical alignment type applied to the text contents.\n\t * @returns {ApiRange | null} - returns null if can't apply align.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetVertAlign.js\n\t */",
        "description": "Specifies the alignment which will be applied to the Range contents in relation to the default appearance of the Range text:\n<b>\"baseline\"</b> - the characters in the current text Range will be aligned by the default text baseline.\n<b>\"subscript\"</b> - the characters in the current text Range will be aligned below the default text baseline.\n<b>\"superscript\"</b> - the characters in the current text Range will be aligned above the default text baseline.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "\"baseline\"",
                        "\"subscript\"",
                        "\"superscript\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"baseline\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"subscript\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"superscript\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The vertical alignment type applied to the text contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetVertAlign",
        "longname": "ApiRange#SetVertAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2489,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetVertAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the amount by which text is raised or lowered for the current Range in relation to the default\n\t * baseline of the surrounding non-positioned text.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {hps} nPosition - Specifies a positive (raised text) or negative (lowered text)\n\t * measurement in half-points (1/144 of an inch).\n\t * @returns {ApiRange | null} - returns null if can't set position.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetPosition.js\n\t */",
        "description": "Specifies the amount by which text is raised or lowered for the current Range in relation to the default\nbaseline of the surrounding non-positioned text.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "nPosition",
                "description": "Specifies a positive (raised text) or negative (lowered text)\nmeasurement in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetPosition",
        "longname": "ApiRange#SetPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2547,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the font size to the characters of the current text Range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {hps} FontSize - The text size value measured in half-points (1/144 of an inch).\n\t * @returns {ApiRange | null} - returns null if can't set font size.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetFontSize.js\n\t */",
        "description": "Sets the font size to the characters of the current text Range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "FontSize",
                "description": "The text size value measured in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetFontSize",
        "longname": "ApiRange#SetFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2595,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets all 4 font slots with the specified font family.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sFontFamily - The font family or families used for the current text Range.\n\t * @returns {ApiRange | null} - returns null if can't set font family.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetFontFamily.js\n\t */",
        "description": "Sets all 4 font slots with the specified font family.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sFontFamily",
                "description": "The font family or families used for the current text Range.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetFontFamily",
        "longname": "ApiRange#SetFontFamily",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2640,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetFontFamily.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the style to the current Range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStyle} oStyle - The style which must be applied to the text character.\n\t * @returns {ApiRange | null} - returns null if can't set style.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetStyle.js\n\t */",
        "description": "Sets the style to the current Range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle"
                    }
                },
                "name": "oStyle",
                "description": "The style which must be applied to the text character.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetStyle",
        "longname": "ApiRange#SetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2705,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current Range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be applied to the current range.\n\t * @returns {ApiRange | null} - returns null if can't set text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current Range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The text properties that will be applied to the current range.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiRange#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2747,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the merged text properties of entire range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTextPr}\n\t * @since 8.2.0\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetTextPr.js\n\t */",
        "description": "Returns the merged text properties of entire range.",
        "memberof": "ApiRange",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiRange#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2791,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Deletes all the contents from the current range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean} - returns false if range is empty.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/Delete.js\n\t */",
        "description": "Deletes all the contents from the current range.",
        "memberof": "ApiRange",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiRange#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2804,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiRange object into the JSON object.\n\t * @memberof ApiRange\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiRange object into the JSON object.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiRange#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2839,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to the current range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {?ApiComment} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to the current range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "ApiRange#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2896,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n     * Returns a Range object that represents the document part contained in the specified range.\n     * @typeofeditors [\"CDE\"]\n     * @param {Number} [Start=0] - Start character index in the current range.\n     * @param {Number} [End=-1] - End character index in the current range (if <= 0, then the range is taken to the end).\n     * @returns {ApiRange}\n     * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the document part contained in the specified range.",
        "memberof": "ApiRange",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character index in the current range.",
                "optional": true,
                "defaultvalue": 0
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character index in the current range (if <= 0, then the range is taken to the end).",
                "optional": true,
                "defaultvalue": -1
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiRange#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 2928,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the start page number of current range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @return {Number}\n\t * @since 8.2.0\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetStartPage.js\n\t */",
        "description": "Returns the start page number of current range.",
        "memberof": "ApiRange",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetStartPage",
        "longname": "ApiRange#GetStartPage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3068,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetStartPage.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the end page number of current range.\n\t * @memberof ApiRange\n\t * @typeofeditors [\"CDE\"]\n\t * @return {Number}\n\t * @since 8.2.0\n\t * @see office-js-api/Examples/{Editor}/ApiRange/Methods/GetEndPage.js\n\t */",
        "description": "Returns the end page number of current range.",
        "memberof": "ApiRange",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetEndPage",
        "longname": "ApiRange#GetEndPage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3084,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRange/Methods/GetEndPage.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a document.\n\t * @constructor\n\t * @typeofeditors [\"CDE\"]\n\t * @extends {ApiDocumentContent}\n\t */",
        "description": "Class representing a document.",
        "name": "ApiDocument",
        "longname": "ApiDocument",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiDocumentContent"
        ],
        "meta": {
            "lineno": 3098,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing the paragraph properties.\n\t * @constructor\n\t */",
        "description": "Class representing the paragraph properties.",
        "name": "ApiParaPr",
        "longname": "ApiParaPr",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3110,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a paragraph.\n\t * @constructor\n\t * @extends {ApiParaPr}\n\t */",
        "description": "Class representing a paragraph.",
        "name": "ApiParagraph",
        "longname": "ApiParagraph",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiParaPr"
        ],
        "meta": {
            "lineno": 3131,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing the table properties.\n\t * @constructor\n\t */",
        "description": "Class representing the table properties.",
        "name": "ApiTablePr",
        "longname": "ApiTablePr",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3143,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a table.\n\t * @constructor\n\t * @extends {ApiTablePr}\n\t */",
        "description": "Class representing a table.",
        "name": "ApiTable",
        "longname": "ApiTable",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiTablePr"
        ],
        "meta": {
            "lineno": 3154,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing the text properties.\n\t * @constructor\n\t */",
        "description": "Class representing the text properties.",
        "name": "ApiTextPr",
        "longname": "ApiTextPr",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3166,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a small text block called 'run'.\n\t * @constructor\n\t * @extends {ApiTextPr}\n\t */",
        "description": "Class representing a small text block called 'run'.",
        "name": "ApiRun",
        "longname": "ApiRun",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiTextPr"
        ],
        "meta": {
            "lineno": 3177,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a comment.\n\t * @constructor\n\t */",
        "description": "Class representing a comment.",
        "name": "ApiComment",
        "longname": "ApiComment",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3189,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a comment reply.\n\t * @typeofeditors [\"CDE\"]\n\t * @constructor\n\t */",
        "description": "Class representing a comment reply.",
        "name": "ApiCommentReply",
        "longname": "ApiCommentReply",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3199,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a Paragraph hyperlink.\n\t * @constructor\n\t */",
        "description": "Class representing a Paragraph hyperlink.",
        "name": "ApiHyperlink",
        "longname": "ApiHyperlink",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3209,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiHyperlink class.\n\t * @memberof ApiHyperlink\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"hyperlink\"}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiHyperlink class.",
        "memberof": "ApiHyperlink",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"hyperlink\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"hyperlink\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiHyperlink#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3222,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a document form base.\n\t * @constructor\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t */",
        "description": "Class representing a document form base.",
        "name": "ApiFormBase",
        "longname": "ApiFormBase",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3232,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a document text field.\n\t * @constructor\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @extends {ApiFormBase}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/constructor.js\n\t */",
        "description": "Class representing a document text field.",
        "name": "ApiTextForm",
        "longname": "ApiTextForm",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiFormBase"
        ],
        "meta": {
            "lineno": 3244,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/constructor.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a document combo box / dropdown list.\n\t * @constructor\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @extends {ApiFormBase}\n\t * @see office-js-api/Examples/{Editor}/ApiComboBoxForm/Methods/constructor.js\n\t */",
        "description": "Class representing a document combo box / dropdown list.",
        "name": "ApiComboBoxForm",
        "longname": "ApiComboBoxForm",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiFormBase"
        ],
        "meta": {
            "lineno": 3259,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Word/ApiComboBoxForm/Methods/constructor.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a document checkbox / radio button.\n\t * @constructor\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @extends {ApiFormBase}\n\t * @see office-js-api/Examples/{Editor}/ApiCheckBoxForm/Methods/constructor.js\n\t */",
        "description": "Class representing a document checkbox / radio button.",
        "name": "ApiCheckBoxForm",
        "longname": "ApiCheckBoxForm",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiFormBase"
        ],
        "meta": {
            "lineno": 3274,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Word/ApiCheckBoxForm/Methods/constructor.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a document picture form.\n\t * @constructor\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @extends {ApiFormBase}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/constructor.js\n\t */",
        "description": "Class representing a document picture form.",
        "name": "ApiPictureForm",
        "longname": "ApiPictureForm",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiFormBase"
        ],
        "meta": {
            "lineno": 3289,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/constructor.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a document date field.\n\t * @constructor\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @extends {ApiFormBase}\n\t * @see office-js-api/Examples/{Editor}/ApiDateForm/Methods/constructor.js\n\t */",
        "description": "Class representing a document date field.",
        "name": "ApiDateForm",
        "longname": "ApiDateForm",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiFormBase"
        ],
        "meta": {
            "lineno": 3304,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Word/ApiDateForm/Methods/constructor.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a complex field.\n\t * @param oSdt\n\t * @constructor\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @extends {ApiFormBase}\n\t * @see office-js-api/Examples/{Editor}/ApiComplexForm/Methods/constructor.js\n\t */",
        "description": "Class representing a complex field.",
        "name": "ApiComplexForm",
        "longname": "ApiComplexForm",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiFormBase"
        ],
        "meta": {
            "lineno": 3320,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Word/ApiComplexForm/Methods/constructor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the hyperlink address.\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLink - The hyperlink address.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/SetLink.js\n\t */",
        "description": "Sets the hyperlink address.",
        "memberof": "ApiHyperlink",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLink",
                "description": "The hyperlink address.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetLink",
        "longname": "ApiHyperlink#SetLink",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3334,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/SetLink.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the hyperlink display text.\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sDisplay - The text to display the hyperlink.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/SetDisplayedText.js\n\t */",
        "description": "Sets the hyperlink display text.",
        "memberof": "ApiHyperlink",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sDisplay",
                "description": "The text to display the hyperlink.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetDisplayedText",
        "longname": "ApiHyperlink#SetDisplayedText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3360,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/SetDisplayedText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the screen tip text of the hyperlink.\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sScreenTipText - The screen tip text of the hyperlink.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/SetScreenTipText.js\n\t */",
        "description": "Sets the screen tip text of the hyperlink.",
        "memberof": "ApiHyperlink",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sScreenTipText",
                "description": "The screen tip text of the hyperlink.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetScreenTipText",
        "longname": "ApiHyperlink#SetScreenTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3397,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/SetScreenTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the hyperlink address.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string} \n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/GetLinkedText.js\n\t */",
        "description": "Returns the hyperlink address.",
        "memberof": "ApiHyperlink",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetLinkedText",
        "longname": "ApiHyperlink#GetLinkedText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3412,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/GetLinkedText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the hyperlink display text.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string} \n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/GetDisplayedText.js\n\t */",
        "description": "Returns the hyperlink display text.",
        "memberof": "ApiHyperlink",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetDisplayedText",
        "longname": "ApiHyperlink#GetDisplayedText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3429,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/GetDisplayedText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the screen tip text of the hyperlink.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string} \n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/GetScreenTipText.js\n\t */",
        "description": "Returns the screen tip text of the hyperlink.",
        "memberof": "ApiHyperlink",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetScreenTipText",
        "longname": "ApiHyperlink#GetScreenTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3446,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/GetScreenTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the hyperlink element using the position specified.\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nPos - The position where the element which content we want to get must be located.\n\t * @returns {?ParagraphContent}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/GetElement.js\n\t */",
        "description": "Returns the hyperlink element using the position specified.",
        "memberof": "ApiHyperlink",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position where the element which content we want to get must be located.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ParagraphContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ParagraphContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetElement",
        "longname": "ApiHyperlink#GetElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3464,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/GetElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of elements in the current hyperlink.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/GetElementsCount.js\n\t */",
        "description": "Returns a number of elements in the current hyperlink.",
        "memberof": "ApiHyperlink",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetElementsCount",
        "longname": "ApiHyperlink#GetElementsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3480,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/GetElementsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the default hyperlink style.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/SetDefaultStyle.js\n\t */",
        "description": "Sets the default hyperlink style.",
        "memberof": "ApiHyperlink",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetDefaultStyle",
        "longname": "ApiHyperlink#SetDefaultStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3490,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/SetDefaultStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the document part contained in the specified hyperlink.\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character index in the current element.\n\t * @param {Number} End - End character index in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the document part contained in the specified hyperlink.",
        "memberof": "ApiHyperlink",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character index in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character index in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiHyperlink#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3517,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiHyperlink object into the JSON object.\n\t * @memberof ApiHyperlink\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiHyperlink/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiHyperlink object into the JSON object.",
        "memberof": "ApiHyperlink",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiHyperlink#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 3529,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiHyperlink/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Class representing a style.\n\t * @constructor\n\t */",
        "description": "Class representing a style.",
        "name": "ApiStyle",
        "longname": "ApiStyle",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3543,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a document section.\n\t * @constructor\n\t */",
        "description": "Class representing a document section.",
        "name": "ApiSection",
        "longname": "ApiSection",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3552,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing the table row properties.\n\t * @constructor\n\t */",
        "description": "Class representing the table row properties.",
        "name": "ApiTableRowPr",
        "longname": "ApiTableRowPr",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3561,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a table row.\n\t * @constructor\n\t * @extends {ApiTableRowPr}\n\t */",
        "description": "Class representing a table row.",
        "name": "ApiTableRow",
        "longname": "ApiTableRow",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiTableRowPr"
        ],
        "meta": {
            "lineno": 3572,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing the table cell properties.\n\t * @constructor\n\t */",
        "description": "Class representing the table cell properties.",
        "name": "ApiTableCellPr",
        "longname": "ApiTableCellPr",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3584,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a table cell.\n\t * @constructor\n\t * @extends {ApiTableCellPr}\n\t */",
        "description": "Class representing a table cell.",
        "name": "ApiTableCell",
        "longname": "ApiTableCell",
        "kind": "class",
        "scope": "global",
        "augments": [
            "ApiTableCellPr"
        ],
        "meta": {
            "lineno": 3594,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing the numbering properties.\n\t * @constructor\n\t */",
        "description": "Class representing the numbering properties.",
        "name": "ApiNumbering",
        "longname": "ApiNumbering",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3606,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a reference to a specified level of the numbering.\n\t * @constructor\n\t */",
        "description": "Class representing a reference to a specified level of the numbering.",
        "name": "ApiNumberingLevel",
        "longname": "ApiNumberingLevel",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3615,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a set of formatting properties which shall be conditionally applied to the parts of a table\n\t * which match the requirement specified on the <code>Type</code>.\n\t * @constructor\n\t */",
        "description": "Class representing a set of formatting properties which shall be conditionally applied to the parts of a table\nwhich match the requirement specified on the <code>Type</code>.",
        "name": "ApiTableStylePr",
        "longname": "ApiTableStylePr",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3626,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing an unsupported element.\n\t * @constructor\n\t */",
        "description": "Class representing an unsupported element.",
        "name": "ApiUnsupported",
        "longname": "ApiUnsupported",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3637,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a graphical object.\n\t * @constructor\n\t */",
        "description": "Class representing a graphical object.",
        "name": "ApiDrawing",
        "longname": "ApiDrawing",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3645,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing an image.\n\t * @constructor\n\t */",
        "description": "Class representing an image.",
        "name": "ApiImage",
        "longname": "ApiImage",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3654,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing an Ole object.\n\t * @constructor\n\t */",
        "description": "Class representing an Ole object.",
        "name": "ApiOleObject",
        "longname": "ApiOleObject",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3666,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a shape.\n\t * @constructor\n\t */",
        "description": "Class representing a shape.",
        "name": "ApiShape",
        "longname": "ApiShape",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3678,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a chart.\n\t * @constructor\n\t *\n\t */",
        "description": "Class representing a chart.",
        "name": "ApiChart",
        "longname": "ApiChart",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3691,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a chart series.\n\t * @constructor\n\t *\n\t */",
        "description": "Class representing a chart series.",
        "name": "ApiChartSeries",
        "longname": "ApiChartSeries",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3704,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a base class for color types.\n\t * @constructor\n\t */",
        "description": "Class representing a base class for color types.",
        "name": "ApiUniColor",
        "longname": "ApiUniColor",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3714,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing an RGB Color.\n\t * @constructor\n\t */",
        "description": "Class representing an RGB Color.",
        "name": "ApiRGBColor",
        "longname": "ApiRGBColor",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3722,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a Scheme Color.\n\t * @constructor\n\t */",
        "description": "Class representing a Scheme Color.",
        "name": "ApiSchemeColor",
        "longname": "ApiSchemeColor",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3733,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a Preset Color.\n\t * @constructor\n\t */",
        "description": "Class representing a Preset Color.",
        "name": "ApiPresetColor",
        "longname": "ApiPresetColor",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3764,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a base class for fill.\n\t * @constructor\n\t */",
        "description": "Class representing a base class for fill.",
        "name": "ApiFill",
        "longname": "ApiFill",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3778,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a stroke.\n\t * @constructor\n\t */",
        "description": "Class representing a stroke.",
        "name": "ApiStroke",
        "longname": "ApiStroke",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3788,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing gradient stop.\n\t * @constructor\n\t */",
        "description": "Class representing gradient stop.",
        "name": "ApiGradientStop",
        "longname": "ApiGradientStop",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3798,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a container for the paragraph elements.\n\t * @constructor\n\t */",
        "description": "Class representing a container for the paragraph elements.",
        "name": "ApiInlineLvlSdt",
        "longname": "ApiInlineLvlSdt",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3809,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a list of values of the combo box / dropdown list content control.\n\t * @constructor\n\t */",
        "description": "Class representing a list of values of the combo box / dropdown list content control.",
        "name": "ApiContentControlList",
        "longname": "ApiContentControlList",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3818,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing an entry of the combo box / dropdown list content control.\n\t * @constructor\n\t */",
        "description": "Class representing an entry of the combo box / dropdown list content control.",
        "name": "ApiContentControlListEntry",
        "longname": "ApiContentControlListEntry",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3828,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing a container for the document content.\n\t * @constructor\n\t */",
        "description": "Class representing a container for the document content.",
        "name": "ApiBlockLvlSdt",
        "longname": "ApiBlockLvlSdt",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3840,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Class representing the settings which are used to create a watermark.\n\t * @constructor\n\t */",
        "description": "Class representing the settings which are used to create a watermark.",
        "name": "ApiWatermarkSettings",
        "longname": "ApiWatermarkSettings",
        "kind": "class",
        "scope": "global",
        "augments": null,
        "meta": {
            "lineno": 3849,
            "columnno": 1
        },
        "properties": null,
        "see": null
    },
    {
        "comment": "/**\n\t * Twentieths of a point (equivalent to 1/1440th of an inch).\n\t * @typedef {number} twips\n\t * @see office-js-api/Examples/Enumerations/twips.js\n\t */",
        "description": "Twentieths of a point (equivalent to 1/1440th of an inch).",
        "name": "twips",
        "longname": "twips",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3855,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/twips.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n     * Any valid element which can be added to the document structure.\n\t * @typedef {(ApiParagraph | ApiTable | ApiBlockLvlSdt)} DocumentElement\n\t * @see office-js-api/Examples/Enumerations/DocumentElement.js\n\t */",
        "description": "Any valid element which can be added to the document structure.",
        "name": "DocumentElement",
        "longname": "DocumentElement",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3861,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/DocumentElement.js"
        ],
        "type": {
            "names": [
                "ApiParagraph",
                "ApiTable",
                "ApiBlockLvlSdt"
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiTable"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiBlockLvlSdt"
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * The style type used for the document element.\n\t * @typedef {(\"paragraph\" | \"table\" | \"run\" | \"numbering\")} StyleType\n\t * @see office-js-api/Examples/Enumerations/StyleType.js\n\t */",
        "description": "The style type used for the document element.",
        "name": "StyleType",
        "longname": "StyleType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3867,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/StyleType.js"
        ],
        "type": {
            "names": [
                "\"paragraph\"",
                "\"table\"",
                "\"run\"",
                "\"numbering\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"paragraph\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"table\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"run\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"numbering\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * 240ths of a line.\n\t * @typedef {number} line240\n\t * @see office-js-api/Examples/Enumerations/line240.js\n\t */",
        "description": "240ths of a line.",
        "name": "line240",
        "longname": "line240",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3873,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/line240.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * Half-points (2 half-points = 1 point).\n\t * @typedef {number} hps\n\t * @see office-js-api/Examples/Enumerations/hps.js\n\t */",
        "description": "Half-points (2 half-points = 1 point).",
        "name": "hps",
        "longname": "hps",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3879,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/hps.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * A numeric value from 0 to 255.\n\t * @typedef {number} byte\n\t * @see office-js-api/Examples/Enumerations/byte.js\n\t */",
        "description": "A numeric value from 0 to 255.",
        "name": "byte",
        "longname": "byte",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3885,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/byte.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * 60000th of a degree (5400000 = 90 degrees).\n\t * @typedef {number} PositiveFixedAngle\n\t * @see office-js-api/Examples/Enumerations/PositiveFixedAngle.js\n\t */",
        "description": "60000th of a degree (5400000 = 90 degrees).",
        "name": "PositiveFixedAngle",
        "longname": "PositiveFixedAngle",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3891,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/PositiveFixedAngle.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * A border type which will be added to the document element.\n     * <b>\"none\"</b> - no border will be added to the created element or the selected element side.\n     * <b>\"single\"</b> - a single border will be added to the created element or the selected element side.\n\t * @typedef {(\"none\" | \"single\")} BorderType\n\t * @see office-js-api/Examples/Enumerations/BorderType.js\n\t */",
        "description": "A border type which will be added to the document element.\n<b>\"none\"</b> - no border will be added to the created element or the selected element side.\n<b>\"single\"</b> - a single border will be added to the created element or the selected element side.",
        "name": "BorderType",
        "longname": "BorderType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3897,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/BorderType.js"
        ],
        "type": {
            "names": [
                "\"none\"",
                "\"single\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"none\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"single\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * A shade type which can be added to the document element.\n\t * @typedef {(\"nil\" | \"clear\")} ShdType\n\t * @see office-js-api/Examples/Enumerations/ShdType.js\n\t */",
        "description": "A shade type which can be added to the document element.",
        "name": "ShdType",
        "longname": "ShdType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3905,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ShdType.js"
        ],
        "type": {
            "names": [
                "\"nil\"",
                "\"clear\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"nil\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"clear\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Custom tab types.\n\t * @typedef {(\"clear\" | \"left\" | \"right\" | \"center\")} TabJc\n\t * @see office-js-api/Examples/Enumerations/TabJc.js\n\t */",
        "description": "Custom tab types.",
        "name": "TabJc",
        "longname": "TabJc",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3911,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TabJc.js"
        ],
        "type": {
            "names": [
                "\"clear\"",
                "\"left\"",
                "\"right\"",
                "\"center\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"clear\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"left\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"right\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"center\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Eighths of a point (24 eighths of a point = 3 points).\n\t * @typedef {number} pt_8\n\t * @see office-js-api/Examples/Enumerations/pt_8.js\n\t */",
        "description": "Eighths of a point (24 eighths of a point = 3 points).",
        "name": "pt_8",
        "longname": "pt_8",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3917,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/pt_8.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * A point.\n\t * @typedef {number} pt\n\t * @see office-js-api/Examples/Enumerations/pt.js\n\t */",
        "description": "A point.",
        "name": "pt",
        "longname": "pt",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3923,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/pt.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * Header and footer types which can be applied to the document sections.\n     * <b>\"default\"</b> - a header or footer which can be applied to any default page.\n     * <b>\"title\"</b> - a header or footer which is applied to the title page.\n     * <b>\"even\"</b> - a header or footer which can be applied to even pages to distinguish them from the odd ones (which will be considered default).\n\t * @typedef {(\"default\" | \"title\" | \"even\")} HdrFtrType\n\t * @see office-js-api/Examples/Enumerations/HdrFtrType.js\n\t */",
        "description": "Header and footer types which can be applied to the document sections.\n<b>\"default\"</b> - a header or footer which can be applied to any default page.\n<b>\"title\"</b> - a header or footer which is applied to the title page.\n<b>\"even\"</b> - a header or footer which can be applied to even pages to distinguish them from the odd ones (which will be considered default).",
        "name": "HdrFtrType",
        "longname": "HdrFtrType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3929,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/HdrFtrType.js"
        ],
        "type": {
            "names": [
                "\"default\"",
                "\"title\"",
                "\"even\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"default\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"title\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"even\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * The possible values for the units of the width property are defined by a specific table or table cell width property.\n     * <b>\"auto\"</b> - sets the table or table cell width to auto width.\n     * <b>\"twips\"</b> - sets the table or table cell width to be measured in twentieths of a point.\n     * <b>\"nul\"</b> - sets the table or table cell width to be of a zero value.\n     * <b>\"percent\"</b> - sets the table or table cell width to be measured in percent to the parent container.\n\t * @typedef {(\"auto\" | \"twips\" | \"nul\" | \"percent\")} TableWidth\n\t * @see office-js-api/Examples/Enumerations/TableWidth.js\n\t */",
        "description": "The possible values for the units of the width property are defined by a specific table or table cell width property.\n<b>\"auto\"</b> - sets the table or table cell width to auto width.\n<b>\"twips\"</b> - sets the table or table cell width to be measured in twentieths of a point.\n<b>\"nul\"</b> - sets the table or table cell width to be of a zero value.\n<b>\"percent\"</b> - sets the table or table cell width to be measured in percent to the parent container.",
        "name": "TableWidth",
        "longname": "TableWidth",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3938,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TableWidth.js"
        ],
        "type": {
            "names": [
                "\"auto\"",
                "\"twips\"",
                "\"nul\"",
                "\"percent\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"auto\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"twips\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"nul\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"percent\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * This simple type specifies possible values for the table sections to which the current conditional formatting properties will be applied when this selected table style is used.\n\t * <b>\"topLeftCell\"</b> - specifies that the table formatting is applied to the top left cell.\n\t * <b>\"topRightCell\"</b> - specifies that the table formatting is applied to the top right cell.\n\t * <b>\"bottomLeftCell\"</b> - specifies that the table formatting is applied to the bottom left cell.\n\t * <b>\"bottomRightCell\"</b> - specifies that the table formatting is applied to the bottom right cell.\n\t * <b>\"firstRow\"</b> - specifies that the table formatting is applied to the first row.\n\t * <b>\"lastRow\"</b> - specifies that the table formatting is applied to the last row.\n\t * <b>\"firstColumn\"</b> - specifies that the table formatting is applied to the first column. Any subsequent row which is in *table header* ({@link ApiTableRowPr#SetTableHeader}) will also use this conditional format.\n\t * <b>\"lastColumn\"</b> - specifies that the table formatting is applied to the last column.\n\t * <b>\"bandedColumn\"</b> - specifies that the table formatting is applied to odd numbered groupings of rows.\n\t * <b>\"bandedColumnEven\"</b> - specifies that the table formatting is applied to even numbered groupings of rows.\n\t * <b>\"bandedRow\"</b> - specifies that the table formatting is applied to odd numbered groupings of columns.\n\t * <b>\"bandedRowEven\"</b> - specifies that the table formatting is applied to even numbered groupings of columns.\n\t * <b>\"wholeTable\"</b> - specifies that the conditional formatting is applied to the whole table.\n\t * @typedef {(\"topLeftCell\" | \"topRightCell\" | \"bottomLeftCell\" | \"bottomRightCell\" | \"firstRow\" | \"lastRow\" |\n\t *     \"firstColumn\" | \"lastColumn\" | \"bandedColumn\" | \"bandedColumnEven\" | \"bandedRow\" | \"bandedRowEven\" |\n\t *     \"wholeTable\")} TableStyleOverrideType\n\t * @see office-js-api/Examples/Enumerations/TableStyleOverrideType.js\n\t */",
        "description": "This simple type specifies possible values for the table sections to which the current conditional formatting properties will be applied when this selected table style is used.\n<b>\"topLeftCell\"</b> - specifies that the table formatting is applied to the top left cell.\n<b>\"topRightCell\"</b> - specifies that the table formatting is applied to the top right cell.\n<b>\"bottomLeftCell\"</b> - specifies that the table formatting is applied to the bottom left cell.\n<b>\"bottomRightCell\"</b> - specifies that the table formatting is applied to the bottom right cell.\n<b>\"firstRow\"</b> - specifies that the table formatting is applied to the first row.\n<b>\"lastRow\"</b> - specifies that the table formatting is applied to the last row.\n<b>\"firstColumn\"</b> - specifies that the table formatting is applied to the first column. Any subsequent row which is in *table header* ({@link ApiTableRowPr#SetTableHeader}) will also use this conditional format.\n<b>\"lastColumn\"</b> - specifies that the table formatting is applied to the last column.\n<b>\"bandedColumn\"</b> - specifies that the table formatting is applied to odd numbered groupings of rows.\n<b>\"bandedColumnEven\"</b> - specifies that the table formatting is applied to even numbered groupings of rows.\n<b>\"bandedRow\"</b> - specifies that the table formatting is applied to odd numbered groupings of columns.\n<b>\"bandedRowEven\"</b> - specifies that the table formatting is applied to even numbered groupings of columns.\n<b>\"wholeTable\"</b> - specifies that the conditional formatting is applied to the whole table.",
        "name": "TableStyleOverrideType",
        "longname": "TableStyleOverrideType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3948,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TableStyleOverrideType.js"
        ],
        "type": {
            "names": [
                "\"topLeftCell\"",
                "\"topRightCell\"",
                "\"bottomLeftCell\"",
                "\"bottomRightCell\"",
                "\"firstRow\"",
                "\"lastRow\"",
                "\"firstColumn\"",
                "\"lastColumn\"",
                "\"bandedColumn\"",
                "\"bandedColumnEven\"",
                "\"bandedRow\"",
                "\"bandedRowEven\"",
                "\"wholeTable\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"topLeftCell\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"topRightCell\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bottomLeftCell\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bottomRightCell\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"firstRow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lastRow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"firstColumn\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lastColumn\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bandedColumn\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bandedColumnEven\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bandedRow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bandedRowEven\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wholeTable\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * The types of elements that can be added to the paragraph structure.\n\t * @typedef {(ApiUnsupported | ApiRun | ApiInlineLvlSdt | ApiHyperlink | ApiFormBase)} ParagraphContent\n\t * @see office-js-api/Examples/Enumerations/ParagraphContent.js\n\t */",
        "description": "The types of elements that can be added to the paragraph structure.",
        "name": "ParagraphContent",
        "longname": "ParagraphContent",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3969,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ParagraphContent.js"
        ],
        "type": {
            "names": [
                "ApiUnsupported",
                "ApiRun",
                "ApiInlineLvlSdt",
                "ApiHyperlink",
                "ApiFormBase"
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "ApiUnsupported"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiInlineLvlSdt"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiHyperlink"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiFormBase"
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * The possible values for the base which the relative horizontal positioning of an object will be calculated from.\n\t * @typedef {(\"character\" | \"column\" | \"leftMargin\" | \"rightMargin\" | \"margin\" | \"page\")} RelFromH\n\t * @see office-js-api/Examples/Enumerations/RelFromH.js\n\t */",
        "description": "The possible values for the base which the relative horizontal positioning of an object will be calculated from.",
        "name": "RelFromH",
        "longname": "RelFromH",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3975,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/RelFromH.js"
        ],
        "type": {
            "names": [
                "\"character\"",
                "\"column\"",
                "\"leftMargin\"",
                "\"rightMargin\"",
                "\"margin\"",
                "\"page\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"character\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"column\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftMargin\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rightMargin\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"margin\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"page\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * The possible values for the base which the relative vertical positioning of an object will be calculated from.\n\t * @typedef {(\"bottomMargin\" | \"topMargin\" | \"margin\" | \"page\" | \"line\" | \"paragraph\")} RelFromV\n\t * @see office-js-api/Examples/Enumerations/RelFromV.js\n\t */",
        "description": "The possible values for the base which the relative vertical positioning of an object will be calculated from.",
        "name": "RelFromV",
        "longname": "RelFromV",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3981,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/RelFromV.js"
        ],
        "type": {
            "names": [
                "\"bottomMargin\"",
                "\"topMargin\"",
                "\"margin\"",
                "\"page\"",
                "\"line\"",
                "\"paragraph\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"bottomMargin\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"topMargin\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"margin\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"page\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"line\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"paragraph\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * English measure unit. 1 mm = 36000 EMUs, 1 inch = 914400 EMUs.\n\t * @typedef {number} EMU\n\t * @see office-js-api/Examples/Enumerations/EMU.js\n\t */",
        "description": "English measure unit. 1 mm = 36000 EMUs, 1 inch = 914400 EMUs.",
        "name": "EMU",
        "longname": "EMU",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3987,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/EMU.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * This type specifies the preset shape geometry that will be used for a shape.\n\t * @typedef {(\"accentBorderCallout1\" | \"accentBorderCallout2\" | \"accentBorderCallout3\" | \"accentCallout1\" |\n\t *     \"accentCallout2\" | \"accentCallout3\" | \"actionButtonBackPrevious\" | \"actionButtonBeginning\" |\n\t *     \"actionButtonBlank\" | \"actionButtonDocument\" | \"actionButtonEnd\" | \"actionButtonForwardNext\" |\n\t *     \"actionButtonHelp\" | \"actionButtonHome\" | \"actionButtonInformation\" | \"actionButtonMovie\" |\n\t *     \"actionButtonReturn\" | \"actionButtonSound\" | \"arc\" | \"bentArrow\" | \"bentConnector2\" | \"bentConnector3\" |\n\t *     \"bentConnector4\" | \"bentConnector5\" | \"bentUpArrow\" | \"bevel\" | \"blockArc\" | \"borderCallout1\" |\n\t *     \"borderCallout2\" | \"borderCallout3\" | \"bracePair\" | \"bracketPair\" | \"callout1\" | \"callout2\" | \"callout3\" |\n\t *     \"can\" | \"chartPlus\" | \"chartStar\" | \"chartX\" | \"chevron\" | \"chord\" | \"circularArrow\" | \"cloud\" |\n\t *     \"cloudCallout\" | \"corner\" | \"cornerTabs\" | \"cube\" | \"curvedConnector2\" | \"curvedConnector3\" |\n\t *     \"curvedConnector4\" | \"curvedConnector5\" | \"curvedDownArrow\" | \"curvedLeftArrow\" | \"curvedRightArrow\" |\n\t *     \"curvedUpArrow\" | \"decagon\" | \"diagStripe\" | \"diamond\" | \"dodecagon\" | \"donut\" | \"doubleWave\" | \"downArrow\" | \"downArrowCallout\" | \"ellipse\" | \"ellipseRibbon\" | \"ellipseRibbon2\" | \"flowChartAlternateProcess\" | \"flowChartCollate\" | \"flowChartConnector\" | \"flowChartDecision\" | \"flowChartDelay\" | \"flowChartDisplay\" | \"flowChartDocument\" | \"flowChartExtract\" | \"flowChartInputOutput\" | \"flowChartInternalStorage\" | \"flowChartMagneticDisk\" | \"flowChartMagneticDrum\" | \"flowChartMagneticTape\" | \"flowChartManualInput\" | \"flowChartManualOperation\" | \"flowChartMerge\" | \"flowChartMultidocument\" | \"flowChartOfflineStorage\" | \"flowChartOffpageConnector\" | \"flowChartOnlineStorage\" | \"flowChartOr\" | \"flowChartPredefinedProcess\" | \"flowChartPreparation\" | \"flowChartProcess\" | \"flowChartPunchedCard\" | \"flowChartPunchedTape\" | \"flowChartSort\" | \"flowChartSummingJunction\" | \"flowChartTerminator\" | \"foldedCorner\" | \"frame\" | \"funnel\" | \"gear6\" | \"gear9\" | \"halfFrame\" | \"heart\" | \"heptagon\" | \"hexagon\" | \"homePlate\" | \"horizontalScroll\" | \"irregularSeal1\" | \"irregularSeal2\" | \"leftArrow\" | \"leftArrowCallout\" | \"leftBrace\" | \"leftBracket\" | \"leftCircularArrow\" | \"leftRightArrow\" | \"leftRightArrowCallout\" | \"leftRightCircularArrow\" | \"leftRightRibbon\" | \"leftRightUpArrow\" | \"leftUpArrow\" | \"lightningBolt\" | \"line\" | \"lineInv\" | \"mathDivide\" | \"mathEqual\" | \"mathMinus\" | \"mathMultiply\" | \"mathNotEqual\" | \"mathPlus\" | \"moon\" | \"nonIsoscelesTrapezoid\" | \"noSmoking\" | \"notchedRightArrow\" | \"octagon\" | \"parallelogram\" | \"pentagon\" | \"pie\" | \"pieWedge\" | \"plaque\" | \"plaqueTabs\" | \"plus\" | \"quadArrow\" | \"quadArrowCallout\" | \"rect\" | \"ribbon\" | \"ribbon2\" | \"rightArrow\" | \"rightArrowCallout\" | \"rightBrace\" | \"rightBracket\" | \"round1Rect\" | \"round2DiagRect\" | \"round2SameRect\" | \"roundRect\" | \"rtTriangle\" | \"smileyFace\" | \"snip1Rect\" | \"snip2DiagRect\" | \"snip2SameRect\" | \"snipRoundRect\" | \"squareTabs\" | \"star10\" | \"star12\" | \"star16\" | \"star24\" | \"star32\" | \"star4\" | \"star5\" | \"star6\" | \"star7\" | \"star8\" | \"straightConnector1\" | \"stripedRightArrow\" | \"sun\" | \"swooshArrow\" | \"teardrop\" | \"trapezoid\" | \"triangle\" | \"upArrowCallout\" | \"upDownArrow\" | \"upDownArrow\" | \"upDownArrowCallout\" | \"uturnArrow\" | \"verticalScroll\" | \"wave\" | \"wedgeEllipseCallout\" | \"wedgeRectCallout\" | \"wedgeRoundRectCallout\")} ShapeType\n\t * @see office-js-api/Examples/Enumerations/ShapeType.js\n\t */",
        "description": "This type specifies the preset shape geometry that will be used for a shape.",
        "name": "ShapeType",
        "longname": "ShapeType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 3993,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ShapeType.js"
        ],
        "type": {
            "names": [
                "\"accentBorderCallout1\"",
                "\"accentBorderCallout2\"",
                "\"accentBorderCallout3\"",
                "\"accentCallout1\"",
                "\"accentCallout2\"",
                "\"accentCallout3\"",
                "\"actionButtonBackPrevious\"",
                "\"actionButtonBeginning\"",
                "\"actionButtonBlank\"",
                "\"actionButtonDocument\"",
                "\"actionButtonEnd\"",
                "\"actionButtonForwardNext\"",
                "\"actionButtonHelp\"",
                "\"actionButtonHome\"",
                "\"actionButtonInformation\"",
                "\"actionButtonMovie\"",
                "\"actionButtonReturn\"",
                "\"actionButtonSound\"",
                "\"arc\"",
                "\"bentArrow\"",
                "\"bentConnector2\"",
                "\"bentConnector3\"",
                "\"bentConnector4\"",
                "\"bentConnector5\"",
                "\"bentUpArrow\"",
                "\"bevel\"",
                "\"blockArc\"",
                "\"borderCallout1\"",
                "\"borderCallout2\"",
                "\"borderCallout3\"",
                "\"bracePair\"",
                "\"bracketPair\"",
                "\"callout1\"",
                "\"callout2\"",
                "\"callout3\"",
                "\"can\"",
                "\"chartPlus\"",
                "\"chartStar\"",
                "\"chartX\"",
                "\"chevron\"",
                "\"chord\"",
                "\"circularArrow\"",
                "\"cloud\"",
                "\"cloudCallout\"",
                "\"corner\"",
                "\"cornerTabs\"",
                "\"cube\"",
                "\"curvedConnector2\"",
                "\"curvedConnector3\"",
                "\"curvedConnector4\"",
                "\"curvedConnector5\"",
                "\"curvedDownArrow\"",
                "\"curvedLeftArrow\"",
                "\"curvedRightArrow\"",
                "\"curvedUpArrow\"",
                "\"decagon\"",
                "\"diagStripe\"",
                "\"diamond\"",
                "\"dodecagon\"",
                "\"donut\"",
                "\"doubleWave\"",
                "\"downArrow\"",
                "\"downArrowCallout\"",
                "\"ellipse\"",
                "\"ellipseRibbon\"",
                "\"ellipseRibbon2\"",
                "\"flowChartAlternateProcess\"",
                "\"flowChartCollate\"",
                "\"flowChartConnector\"",
                "\"flowChartDecision\"",
                "\"flowChartDelay\"",
                "\"flowChartDisplay\"",
                "\"flowChartDocument\"",
                "\"flowChartExtract\"",
                "\"flowChartInputOutput\"",
                "\"flowChartInternalStorage\"",
                "\"flowChartMagneticDisk\"",
                "\"flowChartMagneticDrum\"",
                "\"flowChartMagneticTape\"",
                "\"flowChartManualInput\"",
                "\"flowChartManualOperation\"",
                "\"flowChartMerge\"",
                "\"flowChartMultidocument\"",
                "\"flowChartOfflineStorage\"",
                "\"flowChartOffpageConnector\"",
                "\"flowChartOnlineStorage\"",
                "\"flowChartOr\"",
                "\"flowChartPredefinedProcess\"",
                "\"flowChartPreparation\"",
                "\"flowChartProcess\"",
                "\"flowChartPunchedCard\"",
                "\"flowChartPunchedTape\"",
                "\"flowChartSort\"",
                "\"flowChartSummingJunction\"",
                "\"flowChartTerminator\"",
                "\"foldedCorner\"",
                "\"frame\"",
                "\"funnel\"",
                "\"gear6\"",
                "\"gear9\"",
                "\"halfFrame\"",
                "\"heart\"",
                "\"heptagon\"",
                "\"hexagon\"",
                "\"homePlate\"",
                "\"horizontalScroll\"",
                "\"irregularSeal1\"",
                "\"irregularSeal2\"",
                "\"leftArrow\"",
                "\"leftArrowCallout\"",
                "\"leftBrace\"",
                "\"leftBracket\"",
                "\"leftCircularArrow\"",
                "\"leftRightArrow\"",
                "\"leftRightArrowCallout\"",
                "\"leftRightCircularArrow\"",
                "\"leftRightRibbon\"",
                "\"leftRightUpArrow\"",
                "\"leftUpArrow\"",
                "\"lightningBolt\"",
                "\"line\"",
                "\"lineInv\"",
                "\"mathDivide\"",
                "\"mathEqual\"",
                "\"mathMinus\"",
                "\"mathMultiply\"",
                "\"mathNotEqual\"",
                "\"mathPlus\"",
                "\"moon\"",
                "\"nonIsoscelesTrapezoid\"",
                "\"noSmoking\"",
                "\"notchedRightArrow\"",
                "\"octagon\"",
                "\"parallelogram\"",
                "\"pentagon\"",
                "\"pie\"",
                "\"pieWedge\"",
                "\"plaque\"",
                "\"plaqueTabs\"",
                "\"plus\"",
                "\"quadArrow\"",
                "\"quadArrowCallout\"",
                "\"rect\"",
                "\"ribbon\"",
                "\"ribbon2\"",
                "\"rightArrow\"",
                "\"rightArrowCallout\"",
                "\"rightBrace\"",
                "\"rightBracket\"",
                "\"round1Rect\"",
                "\"round2DiagRect\"",
                "\"round2SameRect\"",
                "\"roundRect\"",
                "\"rtTriangle\"",
                "\"smileyFace\"",
                "\"snip1Rect\"",
                "\"snip2DiagRect\"",
                "\"snip2SameRect\"",
                "\"snipRoundRect\"",
                "\"squareTabs\"",
                "\"star10\"",
                "\"star12\"",
                "\"star16\"",
                "\"star24\"",
                "\"star32\"",
                "\"star4\"",
                "\"star5\"",
                "\"star6\"",
                "\"star7\"",
                "\"star8\"",
                "\"straightConnector1\"",
                "\"stripedRightArrow\"",
                "\"sun\"",
                "\"swooshArrow\"",
                "\"teardrop\"",
                "\"trapezoid\"",
                "\"triangle\"",
                "\"upArrowCallout\"",
                "\"upDownArrow\"",
                "\"upDownArrow\"",
                "\"upDownArrowCallout\"",
                "\"uturnArrow\"",
                "\"verticalScroll\"",
                "\"wave\"",
                "\"wedgeEllipseCallout\"",
                "\"wedgeRectCallout\"",
                "\"wedgeRoundRectCallout\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"accentBorderCallout1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accentBorderCallout2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accentBorderCallout3\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accentCallout1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accentCallout2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accentCallout3\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonBackPrevious\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonBeginning\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonBlank\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonDocument\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonEnd\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonForwardNext\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonHelp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonHome\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonInformation\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonMovie\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonReturn\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"actionButtonSound\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"arc\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bentArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bentConnector2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bentConnector3\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bentConnector4\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bentConnector5\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bentUpArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bevel\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"blockArc\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"borderCallout1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"borderCallout2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"borderCallout3\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bracePair\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bracketPair\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"callout1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"callout2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"callout3\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"can\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"chartPlus\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"chartStar\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"chartX\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"chevron\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"chord\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"circularArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cloud\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cloudCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"corner\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cornerTabs\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cube\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedConnector2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedConnector3\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedConnector4\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedConnector5\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedDownArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedLeftArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedRightArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"curvedUpArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"decagon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"diagStripe\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"diamond\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dodecagon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"donut\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"doubleWave\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"downArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"downArrowCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ellipse\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ellipseRibbon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ellipseRibbon2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartAlternateProcess\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartCollate\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartConnector\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartDecision\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartDelay\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartDisplay\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartDocument\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartExtract\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartInputOutput\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartInternalStorage\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartMagneticDisk\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartMagneticDrum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartMagneticTape\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartManualInput\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartManualOperation\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartMerge\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartMultidocument\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartOfflineStorage\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartOffpageConnector\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartOnlineStorage\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartOr\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartPredefinedProcess\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartPreparation\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartProcess\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartPunchedCard\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartPunchedTape\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartSort\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartSummingJunction\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"flowChartTerminator\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"foldedCorner\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"frame\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"funnel\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"gear6\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"gear9\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"halfFrame\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"heart\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"heptagon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"hexagon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"homePlate\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horizontalScroll\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"irregularSeal1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"irregularSeal2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftArrowCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftBrace\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftBracket\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftCircularArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftRightArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftRightArrowCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftRightCircularArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftRightRibbon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftRightUpArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"leftUpArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightningBolt\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"line\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lineInv\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mathDivide\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mathEqual\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mathMinus\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mathMultiply\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mathNotEqual\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mathPlus\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"moon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"nonIsoscelesTrapezoid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noSmoking\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"notchedRightArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"octagon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"parallelogram\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pentagon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pie\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pieWedge\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"plaque\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"plaqueTabs\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"plus\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"quadArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"quadArrowCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ribbon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ribbon2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rightArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rightArrowCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rightBrace\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rightBracket\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"round1Rect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"round2DiagRect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"round2SameRect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"roundRect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rtTriangle\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"smileyFace\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"snip1Rect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"snip2DiagRect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"snip2SameRect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"snipRoundRect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"squareTabs\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star10\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star12\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star16\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star24\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star32\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star4\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star5\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star6\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star7\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"star8\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"straightConnector1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"stripedRightArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"sun\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"swooshArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"teardrop\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"trapezoid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"triangle\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"upArrowCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"upDownArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"upDownArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"upDownArrowCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"uturnArrow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"verticalScroll\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wave\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wedgeEllipseCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wedgeRectCallout\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wedgeRoundRectCallout\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * This type specifies the available chart types which can be used to create a new chart.\n\t * @typedef {(\"bar\" | \"barStacked\" | \"barStackedPercent\" | \"bar3D\" | \"barStacked3D\" | \"barStackedPercent3D\" |\n\t *     \"barStackedPercent3DPerspective\" | \"horizontalBar\" | \"horizontalBarStacked\" | \"horizontalBarStackedPercent\"\n\t *     | \"horizontalBar3D\" | \"horizontalBarStacked3D\" | \"horizontalBarStackedPercent3D\" | \"lineNormal\" |\n\t *     \"lineStacked\" | \"lineStackedPercent\" | \"line3D\" | \"pie\" | \"pie3D\" | \"doughnut\" | \"scatter\" | \"stock\" |\n\t *     \"area\" | \"areaStacked\" | \"areaStackedPercent\" | \"comboBarLine\" | \"comboBarLineSecondary\" | \"comboCustom\" | \"unknown\")} ChartType\n\t * @see office-js-api/Examples/Enumerations/ChartType.js\n\t */",
        "description": "This type specifies the available chart types which can be used to create a new chart.",
        "name": "ChartType",
        "longname": "ChartType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4009,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ChartType.js"
        ],
        "type": {
            "names": [
                "\"bar\"",
                "\"barStacked\"",
                "\"barStackedPercent\"",
                "\"bar3D\"",
                "\"barStacked3D\"",
                "\"barStackedPercent3D\"",
                "\"barStackedPercent3DPerspective\"",
                "\"horizontalBar\"",
                "\"horizontalBarStacked\"",
                "\"horizontalBarStackedPercent\"",
                "\"horizontalBar3D\"",
                "\"horizontalBarStacked3D\"",
                "\"horizontalBarStackedPercent3D\"",
                "\"lineNormal\"",
                "\"lineStacked\"",
                "\"lineStackedPercent\"",
                "\"line3D\"",
                "\"pie\"",
                "\"pie3D\"",
                "\"doughnut\"",
                "\"scatter\"",
                "\"stock\"",
                "\"area\"",
                "\"areaStacked\"",
                "\"areaStackedPercent\"",
                "\"comboBarLine\"",
                "\"comboBarLineSecondary\"",
                "\"comboCustom\"",
                "\"unknown\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"bar\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"barStacked\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"barStackedPercent\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bar3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"barStacked3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"barStackedPercent3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"barStackedPercent3DPerspective\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horizontalBar\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horizontalBarStacked\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horizontalBarStackedPercent\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horizontalBar3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horizontalBarStacked3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horizontalBarStackedPercent3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lineNormal\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lineStacked\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lineStackedPercent\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"line3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pie\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pie3D\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"doughnut\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"scatter\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"stock\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"area\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"areaStacked\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"areaStackedPercent\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"comboBarLine\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"comboBarLineSecondary\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"comboCustom\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"unknown\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * This type specifies the type of drawing lock.\n\t * @typedef {(\"noGrp\" | \"noUngrp\" | \"noSelect\" | \"noRot\" | \"noChangeAspect\" | \"noMove\" | \"noResize\" | \"noEditPoints\" | \"noAdjustHandles\"\n\t * \t| \"noChangeArrowheads\" | \"noChangeShapeType\" | \"noDrilldown\" | \"noTextEdit\" | \"noCrop\" | \"txBox\")} DrawingLockType\n\t * @see office-js-api/Examples/Enumerations/DrawingLockType.js\n\t */",
        "description": "This type specifies the type of drawing lock.",
        "name": "DrawingLockType",
        "longname": "DrawingLockType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4019,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/DrawingLockType.js"
        ],
        "type": {
            "names": [
                "\"noGrp\"",
                "\"noUngrp\"",
                "\"noSelect\"",
                "\"noRot\"",
                "\"noChangeAspect\"",
                "\"noMove\"",
                "\"noResize\"",
                "\"noEditPoints\"",
                "\"noAdjustHandles\"",
                "\"noChangeArrowheads\"",
                "\"noChangeShapeType\"",
                "\"noDrilldown\"",
                "\"noTextEdit\"",
                "\"noCrop\"",
                "\"txBox\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"noGrp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noUngrp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noSelect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noRot\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noChangeAspect\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noMove\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noResize\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noEditPoints\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noAdjustHandles\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noChangeArrowheads\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noChangeShapeType\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noDrilldown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noTextEdit\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noCrop\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"txBox\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * The available text vertical alignment (used to align text in a shape with a placement for text inside it).\n\t * @typedef {(\"top\" | \"center\" | \"bottom\")} VerticalTextAlign\n\t * @see office-js-api/Examples/Enumerations/VerticalTextAlign.js\n\t */",
        "description": "The available text vertical alignment (used to align text in a shape with a placement for text inside it).",
        "name": "VerticalTextAlign",
        "longname": "VerticalTextAlign",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4028,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/VerticalTextAlign.js"
        ],
        "type": {
            "names": [
                "\"top\"",
                "\"center\"",
                "\"bottom\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"top\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"center\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bottom\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * The available color scheme identifiers.\n\t * @typedef {(\"accent1\" | \"accent2\" | \"accent3\" | \"accent4\" | \"accent5\" | \"accent6\" | \"bg1\" | \"bg2\" | \"dk1\" | \"dk2\"\n\t *     | \"lt1\" | \"lt2\" | \"tx1\" | \"tx2\")} SchemeColorId\n\t * @see office-js-api/Examples/Enumerations/SchemeColorId.js\n\t */",
        "description": "The available color scheme identifiers.",
        "name": "SchemeColorId",
        "longname": "SchemeColorId",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4034,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/SchemeColorId.js"
        ],
        "type": {
            "names": [
                "\"accent1\"",
                "\"accent2\"",
                "\"accent3\"",
                "\"accent4\"",
                "\"accent5\"",
                "\"accent6\"",
                "\"bg1\"",
                "\"bg2\"",
                "\"dk1\"",
                "\"dk2\"",
                "\"lt1\"",
                "\"lt2\"",
                "\"tx1\"",
                "\"tx2\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"accent1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accent2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accent3\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accent4\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accent5\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"accent6\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bg1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bg2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dk1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dk2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lt1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lt2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"tx1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"tx2\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * The available preset color names.\n\t * @typedef {(\"aliceBlue\" | \"antiqueWhite\" | \"aqua\" | \"aquamarine\" | \"azure\" | \"beige\" | \"bisque\" | \"black\" |\n\t *     \"blanchedAlmond\" | \"blue\" | \"blueViolet\" | \"brown\" | \"burlyWood\" | \"cadetBlue\" | \"chartreuse\" | \"chocolate\"\n\t *     | \"coral\" | \"cornflowerBlue\" | \"cornsilk\" | \"crimson\" | \"cyan\" | \"darkBlue\" | \"darkCyan\" | \"darkGoldenrod\" |\n\t *     \"darkGray\" | \"darkGreen\" | \"darkGrey\" | \"darkKhaki\" | \"darkMagenta\" | \"darkOliveGreen\" | \"darkOrange\" |\n\t *     \"darkOrchid\" | \"darkRed\" | \"darkSalmon\" | \"darkSeaGreen\" | \"darkSlateBlue\" | \"darkSlateGray\" |\n\t *     \"darkSlateGrey\" | \"darkTurquoise\" | \"darkViolet\" | \"deepPink\" | \"deepSkyBlue\" | \"dimGray\" | \"dimGrey\" |\n\t *     \"dkBlue\" | \"dkCyan\" | \"dkGoldenrod\" | \"dkGray\" | \"dkGreen\" | \"dkGrey\" | \"dkKhaki\" | \"dkMagenta\" |\n\t *     \"dkOliveGreen\" | \"dkOrange\" | \"dkOrchid\" | \"dkRed\" | \"dkSalmon\" | \"dkSeaGreen\" | \"dkSlateBlue\" |\n\t *     \"dkSlateGray\" | \"dkSlateGrey\" | \"dkTurquoise\" | \"dkViolet\" | \"dodgerBlue\" | \"firebrick\" | \"floralWhite\" |\n\t *     \"forestGreen\" | \"fuchsia\" | \"gainsboro\" | \"ghostWhite\" | \"gold\" | \"goldenrod\" | \"gray\" | \"green\" |\n\t *     \"greenYellow\" | \"grey\" | \"honeydew\" | \"hotPink\" | \"indianRed\" | \"indigo\" | \"ivory\" | \"khaki\" | \"lavender\" | \"lavenderBlush\" | \"lawnGreen\" | \"lemonChiffon\" | \"lightBlue\" | \"lightCoral\" | \"lightCyan\" | \"lightGoldenrodYellow\" | \"lightGray\" | \"lightGreen\" | \"lightGrey\" | \"lightPink\" | \"lightSalmon\" | \"lightSeaGreen\" | \"lightSkyBlue\" | \"lightSlateGray\" | \"lightSlateGrey\" | \"lightSteelBlue\" | \"lightYellow\" | \"lime\" | \"limeGreen\" | \"linen\" | \"ltBlue\" | \"ltCoral\" | \"ltCyan\" | \"ltGoldenrodYellow\" | \"ltGray\" | \"ltGreen\" | \"ltGrey\" | \"ltPink\" | \"ltSalmon\" | \"ltSeaGreen\" | \"ltSkyBlue\" | \"ltSlateGray\" | \"ltSlateGrey\" | \"ltSteelBlue\" | \"ltYellow\" | \"magenta\" | \"maroon\" | \"medAquamarine\" | \"medBlue\" | \"mediumAquamarine\" | \"mediumBlue\" | \"mediumOrchid\" | \"mediumPurple\" | \"mediumSeaGreen\" | \"mediumSlateBlue\" | \"mediumSpringGreen\" | \"mediumTurquoise\" | \"mediumVioletRed\" | \"medOrchid\" | \"medPurple\" | \"medSeaGreen\" | \"medSlateBlue\" | \"medSpringGreen\" | \"medTurquoise\" | \"medVioletRed\" | \"midnightBlue\" | \"mintCream\" | \"mistyRose\" | \"moccasin\" | \"navajoWhite\" | \"navy\" | \"oldLace\" | \"olive\" | \"oliveDrab\" | \"orange\" | \"orangeRed\" | \"orchid\" | \"paleGoldenrod\" | \"paleGreen\" | \"paleTurquoise\" | \"paleVioletRed\" | \"papayaWhip\" | \"peachPuff\" | \"peru\" | \"pink\" | \"plum\" | \"powderBlue\" | \"purple\" | \"red\" | \"rosyBrown\" | \"royalBlue\" | \"saddleBrown\" | \"salmon\" | \"sandyBrown\" | \"seaGreen\" | \"seaShell\" | \"sienna\" | \"silver\" | \"skyBlue\" | \"slateBlue\" | \"slateGray\" | \"slateGrey\" | \"snow\" | \"springGreen\" | \"steelBlue\" | \"tan\" | \"teal\" | \"thistle\" | \"tomato\" | \"turquoise\" | \"violet\" | \"wheat\" | \"white\" | \"whiteSmoke\" | \"yellow\" | \"yellowGreen\")} PresetColor\n\t * @see office-js-api/Examples/Enumerations/PresetColor.js\n\t */",
        "description": "The available preset color names.",
        "name": "PresetColor",
        "longname": "PresetColor",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4041,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/PresetColor.js"
        ],
        "type": {
            "names": [
                "\"aliceBlue\"",
                "\"antiqueWhite\"",
                "\"aqua\"",
                "\"aquamarine\"",
                "\"azure\"",
                "\"beige\"",
                "\"bisque\"",
                "\"black\"",
                "\"blanchedAlmond\"",
                "\"blue\"",
                "\"blueViolet\"",
                "\"brown\"",
                "\"burlyWood\"",
                "\"cadetBlue\"",
                "\"chartreuse\"",
                "\"chocolate\"",
                "\"coral\"",
                "\"cornflowerBlue\"",
                "\"cornsilk\"",
                "\"crimson\"",
                "\"cyan\"",
                "\"darkBlue\"",
                "\"darkCyan\"",
                "\"darkGoldenrod\"",
                "\"darkGray\"",
                "\"darkGreen\"",
                "\"darkGrey\"",
                "\"darkKhaki\"",
                "\"darkMagenta\"",
                "\"darkOliveGreen\"",
                "\"darkOrange\"",
                "\"darkOrchid\"",
                "\"darkRed\"",
                "\"darkSalmon\"",
                "\"darkSeaGreen\"",
                "\"darkSlateBlue\"",
                "\"darkSlateGray\"",
                "\"darkSlateGrey\"",
                "\"darkTurquoise\"",
                "\"darkViolet\"",
                "\"deepPink\"",
                "\"deepSkyBlue\"",
                "\"dimGray\"",
                "\"dimGrey\"",
                "\"dkBlue\"",
                "\"dkCyan\"",
                "\"dkGoldenrod\"",
                "\"dkGray\"",
                "\"dkGreen\"",
                "\"dkGrey\"",
                "\"dkKhaki\"",
                "\"dkMagenta\"",
                "\"dkOliveGreen\"",
                "\"dkOrange\"",
                "\"dkOrchid\"",
                "\"dkRed\"",
                "\"dkSalmon\"",
                "\"dkSeaGreen\"",
                "\"dkSlateBlue\"",
                "\"dkSlateGray\"",
                "\"dkSlateGrey\"",
                "\"dkTurquoise\"",
                "\"dkViolet\"",
                "\"dodgerBlue\"",
                "\"firebrick\"",
                "\"floralWhite\"",
                "\"forestGreen\"",
                "\"fuchsia\"",
                "\"gainsboro\"",
                "\"ghostWhite\"",
                "\"gold\"",
                "\"goldenrod\"",
                "\"gray\"",
                "\"green\"",
                "\"greenYellow\"",
                "\"grey\"",
                "\"honeydew\"",
                "\"hotPink\"",
                "\"indianRed\"",
                "\"indigo\"",
                "\"ivory\"",
                "\"khaki\"",
                "\"lavender\"",
                "\"lavenderBlush\"",
                "\"lawnGreen\"",
                "\"lemonChiffon\"",
                "\"lightBlue\"",
                "\"lightCoral\"",
                "\"lightCyan\"",
                "\"lightGoldenrodYellow\"",
                "\"lightGray\"",
                "\"lightGreen\"",
                "\"lightGrey\"",
                "\"lightPink\"",
                "\"lightSalmon\"",
                "\"lightSeaGreen\"",
                "\"lightSkyBlue\"",
                "\"lightSlateGray\"",
                "\"lightSlateGrey\"",
                "\"lightSteelBlue\"",
                "\"lightYellow\"",
                "\"lime\"",
                "\"limeGreen\"",
                "\"linen\"",
                "\"ltBlue\"",
                "\"ltCoral\"",
                "\"ltCyan\"",
                "\"ltGoldenrodYellow\"",
                "\"ltGray\"",
                "\"ltGreen\"",
                "\"ltGrey\"",
                "\"ltPink\"",
                "\"ltSalmon\"",
                "\"ltSeaGreen\"",
                "\"ltSkyBlue\"",
                "\"ltSlateGray\"",
                "\"ltSlateGrey\"",
                "\"ltSteelBlue\"",
                "\"ltYellow\"",
                "\"magenta\"",
                "\"maroon\"",
                "\"medAquamarine\"",
                "\"medBlue\"",
                "\"mediumAquamarine\"",
                "\"mediumBlue\"",
                "\"mediumOrchid\"",
                "\"mediumPurple\"",
                "\"mediumSeaGreen\"",
                "\"mediumSlateBlue\"",
                "\"mediumSpringGreen\"",
                "\"mediumTurquoise\"",
                "\"mediumVioletRed\"",
                "\"medOrchid\"",
                "\"medPurple\"",
                "\"medSeaGreen\"",
                "\"medSlateBlue\"",
                "\"medSpringGreen\"",
                "\"medTurquoise\"",
                "\"medVioletRed\"",
                "\"midnightBlue\"",
                "\"mintCream\"",
                "\"mistyRose\"",
                "\"moccasin\"",
                "\"navajoWhite\"",
                "\"navy\"",
                "\"oldLace\"",
                "\"olive\"",
                "\"oliveDrab\"",
                "\"orange\"",
                "\"orangeRed\"",
                "\"orchid\"",
                "\"paleGoldenrod\"",
                "\"paleGreen\"",
                "\"paleTurquoise\"",
                "\"paleVioletRed\"",
                "\"papayaWhip\"",
                "\"peachPuff\"",
                "\"peru\"",
                "\"pink\"",
                "\"plum\"",
                "\"powderBlue\"",
                "\"purple\"",
                "\"red\"",
                "\"rosyBrown\"",
                "\"royalBlue\"",
                "\"saddleBrown\"",
                "\"salmon\"",
                "\"sandyBrown\"",
                "\"seaGreen\"",
                "\"seaShell\"",
                "\"sienna\"",
                "\"silver\"",
                "\"skyBlue\"",
                "\"slateBlue\"",
                "\"slateGray\"",
                "\"slateGrey\"",
                "\"snow\"",
                "\"springGreen\"",
                "\"steelBlue\"",
                "\"tan\"",
                "\"teal\"",
                "\"thistle\"",
                "\"tomato\"",
                "\"turquoise\"",
                "\"violet\"",
                "\"wheat\"",
                "\"white\"",
                "\"whiteSmoke\"",
                "\"yellow\"",
                "\"yellowGreen\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"aliceBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"antiqueWhite\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aqua\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aquamarine\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"azure\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"beige\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bisque\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"black\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"blanchedAlmond\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"blue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"blueViolet\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"brown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"burlyWood\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cadetBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"chartreuse\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"chocolate\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"coral\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cornflowerBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cornsilk\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"crimson\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cyan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkCyan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkGoldenrod\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkKhaki\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkMagenta\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkOliveGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkOrange\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkOrchid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkSalmon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkSeaGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkSlateBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkSlateGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkSlateGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkTurquoise\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkViolet\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"deepPink\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"deepSkyBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dimGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dimGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkCyan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkGoldenrod\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkKhaki\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkMagenta\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkOliveGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkOrange\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkOrchid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkSalmon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkSeaGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkSlateBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkSlateGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkSlateGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkTurquoise\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkViolet\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dodgerBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"firebrick\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"floralWhite\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"forestGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"fuchsia\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"gainsboro\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ghostWhite\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"gold\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"goldenrod\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"gray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"green\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"greenYellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"grey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"honeydew\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"hotPink\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"indianRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"indigo\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ivory\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"khaki\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lavender\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lavenderBlush\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lawnGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lemonChiffon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightCoral\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightCyan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightGoldenrodYellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightPink\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightSalmon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightSeaGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightSkyBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightSlateGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightSlateGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightSteelBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightYellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lime\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"limeGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"linen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltCoral\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltCyan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltGoldenrodYellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltPink\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltSalmon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltSeaGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltSkyBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltSlateGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltSlateGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltSteelBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltYellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"magenta\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"maroon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medAquamarine\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumAquamarine\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumOrchid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumPurple\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumSeaGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumSlateBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumSpringGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumTurquoise\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mediumVioletRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medOrchid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medPurple\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medSeaGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medSlateBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medSpringGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medTurquoise\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"medVioletRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"midnightBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mintCream\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mistyRose\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"moccasin\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"navajoWhite\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"navy\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"oldLace\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"olive\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"oliveDrab\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"orange\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"orangeRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"orchid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"paleGoldenrod\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"paleGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"paleTurquoise\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"paleVioletRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"papayaWhip\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"peachPuff\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"peru\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pink\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"plum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"powderBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"purple\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"red\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"rosyBrown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"royalBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"saddleBrown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"salmon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"sandyBrown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"seaGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"seaShell\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"sienna\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"silver\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"skyBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"slateBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"slateGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"slateGrey\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"snow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"springGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"steelBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"tan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"teal\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"thistle\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"tomato\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"turquoise\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"violet\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wheat\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"white\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"whiteSmoke\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"yellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"yellowGreen\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * Possible values for the position of chart tick labels (either horizontal or vertical).\n     * <b>\"none\"</b> - not display the selected tick labels.\n     * <b>\"nextTo\"</b> - sets the position of the selected tick labels next to the main label.\n     * <b>\"low\"</b> - sets the position of the selected tick labels in the part of the chart with lower values.\n     * <b>\"high\"</b> - sets the position of the selected tick labels in the part of the chart with higher values.\n\t * @typedef {(\"none\" | \"nextTo\" | \"low\" | \"high\")} TickLabelPosition\n\t * @see office-js-api/Examples/Enumerations/TickLabelPosition.js\n\t */",
        "description": "Possible values for the position of chart tick labels (either horizontal or vertical).\n<b>\"none\"</b> - not display the selected tick labels.\n<b>\"nextTo\"</b> - sets the position of the selected tick labels next to the main label.\n<b>\"low\"</b> - sets the position of the selected tick labels in the part of the chart with lower values.\n<b>\"high\"</b> - sets the position of the selected tick labels in the part of the chart with higher values.",
        "name": "TickLabelPosition",
        "longname": "TickLabelPosition",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4058,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TickLabelPosition.js"
        ],
        "type": {
            "names": [
                "\"none\"",
                "\"nextTo\"",
                "\"low\"",
                "\"high\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"none\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"nextTo\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"low\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"high\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * The type of a fill which uses an image as a background.\n     * <b>\"tile\"</b> - if the image is smaller than the shape which is filled, the image will be tiled all over the created shape surface.\n     * <b>\"stretch\"</b> - if the image is smaller than the shape which is filled, the image will be stretched to fit the created shape surface.\n\t * @typedef {\"tile\" | \"stretch\"} BlipFillType\n\t * @see office-js-api/Examples/Enumerations/BlipFillType.js\n\t */",
        "description": "The type of a fill which uses an image as a background.\n<b>\"tile\"</b> - if the image is smaller than the shape which is filled, the image will be tiled all over the created shape surface.\n<b>\"stretch\"</b> - if the image is smaller than the shape which is filled, the image will be stretched to fit the created shape surface.",
        "name": "BlipFillType",
        "longname": "BlipFillType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4068,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/BlipFillType.js"
        ],
        "type": {
            "names": [
                "\"tile\"",
                "\"stretch\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"tile\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"stretch\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * The available preset patterns which can be used for the fill.\n\t * @typedef {\"cross\" | \"dashDnDiag\" | \"dashHorz\" | \"dashUpDiag\" | \"dashVert\" | \"diagBrick\" | \"diagCross\" | \"divot\"\n\t *     | \"dkDnDiag\" | \"dkHorz\" | \"dkUpDiag\" | \"dkVert\" | \"dnDiag\" | \"dotDmnd\" | \"dotGrid\" | \"horz\" | \"horzBrick\" |\n\t *     \"lgCheck\" | \"lgConfetti\" | \"lgGrid\" | \"ltDnDiag\" | \"ltHorz\" | \"ltUpDiag\" | \"ltVert\" | \"narHorz\" | \"narVert\"\n\t *     | \"openDmnd\" | \"pct10\" | \"pct20\" | \"pct25\" | \"pct30\" | \"pct40\" | \"pct5\" | \"pct50\" | \"pct60\" | \"pct70\" |\n\t *     \"pct75\" | \"pct80\" | \"pct90\" | \"plaid\" | \"shingle\" | \"smCheck\" | \"smConfetti\" | \"smGrid\" | \"solidDmnd\" |\n\t *     \"sphere\" | \"trellis\" | \"upDiag\" | \"vert\" | \"wave\" | \"wdDnDiag\" | \"wdUpDiag\" | \"weave\" | \"zigZag\"}\n\t *     PatternType\n\t * @see office-js-api/Examples/Enumerations/PatternType.js\n\t */",
        "description": "The available preset patterns which can be used for the fill.",
        "name": "PatternType",
        "longname": "PatternType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4076,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/PatternType.js"
        ],
        "type": {
            "names": [
                "\"cross\"",
                "\"dashDnDiag\"",
                "\"dashHorz\"",
                "\"dashUpDiag\"",
                "\"dashVert\"",
                "\"diagBrick\"",
                "\"diagCross\"",
                "\"divot\"",
                "\"dkDnDiag\"",
                "\"dkHorz\"",
                "\"dkUpDiag\"",
                "\"dkVert\"",
                "\"dnDiag\"",
                "\"dotDmnd\"",
                "\"dotGrid\"",
                "\"horz\"",
                "\"horzBrick\"",
                "\"lgCheck\"",
                "\"lgConfetti\"",
                "\"lgGrid\"",
                "\"ltDnDiag\"",
                "\"ltHorz\"",
                "\"ltUpDiag\"",
                "\"ltVert\"",
                "\"narHorz\"",
                "\"narVert\"",
                "\"openDmnd\"",
                "\"pct10\"",
                "\"pct20\"",
                "\"pct25\"",
                "\"pct30\"",
                "\"pct40\"",
                "\"pct5\"",
                "\"pct50\"",
                "\"pct60\"",
                "\"pct70\"",
                "\"pct75\"",
                "\"pct80\"",
                "\"pct90\"",
                "\"plaid\"",
                "\"shingle\"",
                "\"smCheck\"",
                "\"smConfetti\"",
                "\"smGrid\"",
                "\"solidDmnd\"",
                "\"sphere\"",
                "\"trellis\"",
                "\"upDiag\"",
                "\"vert\"",
                "\"wave\"",
                "\"wdDnDiag\"",
                "\"wdUpDiag\"",
                "\"weave\"",
                "\"zigZag\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"cross\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dashDnDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dashHorz\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dashUpDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dashVert\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"diagBrick\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"diagCross\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"divot\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkDnDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkHorz\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkUpDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dkVert\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dnDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dotDmnd\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dotGrid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horz\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"horzBrick\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lgCheck\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lgConfetti\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lgGrid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltDnDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltHorz\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltUpDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ltVert\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"narHorz\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"narVert\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"openDmnd\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct10\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct20\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct25\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct30\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct40\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct5\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct50\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct60\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct70\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct75\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct80\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pct90\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"plaid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"shingle\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"smCheck\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"smConfetti\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"smGrid\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"solidDmnd\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"sphere\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"trellis\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"upDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"vert\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wave\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wdDnDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"wdUpDiag\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"weave\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"zigZag\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t *\n\t * The lock type of the content control.\n\t * @typedef {\"unlocked\" | \"contentLocked\" | \"sdtContentLocked\" | \"sdtLocked\"} SdtLock\n\t * @see office-js-api/Examples/Enumerations/SdtLock.js\n\t */",
        "description": "The lock type of the content control.",
        "name": "SdtLock",
        "longname": "SdtLock",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4088,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/SdtLock.js"
        ],
        "type": {
            "names": [
                "\"unlocked\"",
                "\"contentLocked\"",
                "\"sdtContentLocked\"",
                "\"sdtLocked\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"unlocked\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"contentLocked\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"sdtContentLocked\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"sdtLocked\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * Text transform type.\n\t * @typedef {(\"textArchDown\" | \"textArchDownPour\" | \"textArchUp\" | \"textArchUpPour\" | \"textButton\" | \"textButtonPour\" | \"textCanDown\"\n\t * | \"textCanUp\" | \"textCascadeDown\" | \"textCascadeUp\" | \"textChevron\" | \"textChevronInverted\" | \"textCircle\" | \"textCirclePour\"\n\t * | \"textCurveDown\" | \"textCurveUp\" | \"textDeflate\" | \"textDeflateBottom\" | \"textDeflateInflate\" | \"textDeflateInflateDeflate\" | \"textDeflateTop\"\n\t * | \"textDoubleWave1\" | \"textFadeDown\" | \"textFadeLeft\" | \"textFadeRight\" | \"textFadeUp\" | \"textInflate\" | \"textInflateBottom\" | \"textInflateTop\"\n\t * | \"textPlain\" | \"textRingInside\" | \"textRingOutside\" | \"textSlantDown\" | \"textSlantUp\" | \"textStop\" | \"textTriangle\" | \"textTriangleInverted\"\n\t * | \"textWave1\" | \"textWave2\" | \"textWave4\" | \"textNoShape\")} TextTransform\n\t * @see office-js-api/Examples/Enumerations/TextTransform.js\n\t */",
        "description": "Text transform type.",
        "name": "TextTransform",
        "longname": "TextTransform",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4095,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TextTransform.js"
        ],
        "type": {
            "names": [
                "\"textArchDown\"",
                "\"textArchDownPour\"",
                "\"textArchUp\"",
                "\"textArchUpPour\"",
                "\"textButton\"",
                "\"textButtonPour\"",
                "\"textCanDown\"",
                "\"textCanUp\"",
                "\"textCascadeDown\"",
                "\"textCascadeUp\"",
                "\"textChevron\"",
                "\"textChevronInverted\"",
                "\"textCircle\"",
                "\"textCirclePour\"",
                "\"textCurveDown\"",
                "\"textCurveUp\"",
                "\"textDeflate\"",
                "\"textDeflateBottom\"",
                "\"textDeflateInflate\"",
                "\"textDeflateInflateDeflate\"",
                "\"textDeflateTop\"",
                "\"textDoubleWave1\"",
                "\"textFadeDown\"",
                "\"textFadeLeft\"",
                "\"textFadeRight\"",
                "\"textFadeUp\"",
                "\"textInflate\"",
                "\"textInflateBottom\"",
                "\"textInflateTop\"",
                "\"textPlain\"",
                "\"textRingInside\"",
                "\"textRingOutside\"",
                "\"textSlantDown\"",
                "\"textSlantUp\"",
                "\"textStop\"",
                "\"textTriangle\"",
                "\"textTriangleInverted\"",
                "\"textWave1\"",
                "\"textWave2\"",
                "\"textWave4\"",
                "\"textNoShape\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"textArchDown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textArchDownPour\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textArchUp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textArchUpPour\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textButton\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textButtonPour\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCanDown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCanUp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCascadeDown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCascadeUp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textChevron\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textChevronInverted\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCircle\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCirclePour\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCurveDown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textCurveUp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textDeflate\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textDeflateBottom\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textDeflateInflate\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textDeflateInflateDeflate\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textDeflateTop\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textDoubleWave1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textFadeDown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textFadeLeft\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textFadeRight\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textFadeUp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textInflate\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textInflateBottom\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textInflateTop\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textPlain\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textRingInside\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textRingOutside\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textSlantDown\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textSlantUp\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textStop\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textTriangle\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textTriangleInverted\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textWave1\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textWave2\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textWave4\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"textNoShape\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Form type.\n\t * The available form types.\n\t * @typedef {\"textForm\" | \"comboBoxForm\" | \"dropDownForm\" | \"checkBoxForm\" | \"radioButtonForm\" | \"pictureForm\"} FormType\n\t * @see office-js-api/Examples/Enumerations/FormType.js\n\t */",
        "description": "Form type.\nThe available form types.",
        "name": "FormType",
        "longname": "FormType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4106,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/FormType.js"
        ],
        "type": {
            "names": [
                "\"textForm\"",
                "\"comboBoxForm\"",
                "\"dropDownForm\"",
                "\"checkBoxForm\"",
                "\"radioButtonForm\"",
                "\"pictureForm\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"textForm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"comboBoxForm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dropDownForm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"checkBoxForm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"radioButtonForm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pictureForm\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * 1 millimetre equals 1/10th of a centimetre.\n\t * @typedef {number} mm\n\t * @see office-js-api/Examples/Enumerations/mm.js\n\t */",
        "description": "1 millimetre equals 1/10th of a centimetre.",
        "name": "mm",
        "longname": "mm",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4113,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/mm.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * The condition to scale an image in the picture form.\n\t * @typedef {\"always\" | \"never\" | \"tooBig\" | \"tooSmall\"} ScaleFlag\n\t * @see office-js-api/Examples/Enumerations/ScaleFlag.js\n\t */",
        "description": "The condition to scale an image in the picture form.",
        "name": "ScaleFlag",
        "longname": "ScaleFlag",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4119,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ScaleFlag.js"
        ],
        "type": {
            "names": [
                "\"always\"",
                "\"never\"",
                "\"tooBig\"",
                "\"tooSmall\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"always\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"never\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"tooBig\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"tooSmall\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Value from 0 to 100.\n\t * @typedef {number} percentage\n\t * @see office-js-api/Examples/Enumerations/percentage.js\n\t */",
        "description": "Value from 0 to 100.",
        "name": "percentage",
        "longname": "percentage",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4125,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/percentage.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * Available highlight colors.\n\t * @typedef {\"black\" | \"blue\" | \"cyan\" | \"green\" | \"magenta\" | \"red\" | \"yellow\" | \"white\" | \"darkBlue\" |\n\t * \"darkCyan\" | \"darkGreen\" | \"darkMagenta\" | \"darkRed\" | \"darkYellow\" | \"darkGray\" | \"lightGray\" | \"none\"} highlightColor\n\t * @see office-js-api/Examples/Enumerations/highlightColor.js\n\t */",
        "description": "Available highlight colors.",
        "name": "highlightColor",
        "longname": "highlightColor",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4131,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/highlightColor.js"
        ],
        "type": {
            "names": [
                "\"black\"",
                "\"blue\"",
                "\"cyan\"",
                "\"green\"",
                "\"magenta\"",
                "\"red\"",
                "\"yellow\"",
                "\"white\"",
                "\"darkBlue\"",
                "\"darkCyan\"",
                "\"darkGreen\"",
                "\"darkMagenta\"",
                "\"darkRed\"",
                "\"darkYellow\"",
                "\"darkGray\"",
                "\"lightGray\"",
                "\"none\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"black\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"blue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"cyan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"green\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"magenta\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"red\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"yellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"white\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkBlue\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkCyan\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkGreen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkMagenta\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkRed\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkYellow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"darkGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"lightGray\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"none\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Available values of the \"numbered\" reference type:\n\t * <b>\"pageNum\"</b> - the numbered item page number;\n     * <b>\"paraNum\"</b> - the numbered item paragraph number;\n\t * <b>\"noCtxParaNum\"</b> - the abbreviated paragraph number (the specific item only, e.g. instead of \"4.1.1\" you refer to \"1\" only);\n     * <b>\"fullCtxParaNum\"</b> - the full paragraph number, e.g. \"4.1.1\";\n\t * <b>\"text\"</b> - the paragraph text value, e.g. if you have \"4.1.1. Terms and Conditions\", you refer to \"Terms and Conditions\" only;\n     * <b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.\n\t * @typedef {\"pageNum\" | \"paraNum\" | \"noCtxParaNum\" | \"fullCtxParaNum\" | \"text\" | \"aboveBelow\"} numberedRefTo\n\t * @see office-js-api/Examples/Enumerations/numberedRefTo.js\n\t */",
        "description": "Available values of the \"numbered\" reference type:\n<b>\"pageNum\"</b> - the numbered item page number;\n<b>\"paraNum\"</b> - the numbered item paragraph number;\n<b>\"noCtxParaNum\"</b> - the abbreviated paragraph number (the specific item only, e.g. instead of \"4.1.1\" you refer to \"1\" only);\n<b>\"fullCtxParaNum\"</b> - the full paragraph number, e.g. \"4.1.1\";\n<b>\"text\"</b> - the paragraph text value, e.g. if you have \"4.1.1. Terms and Conditions\", you refer to \"Terms and Conditions\" only;\n<b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.",
        "name": "numberedRefTo",
        "longname": "numberedRefTo",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4144,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/numberedRefTo.js"
        ],
        "type": {
            "names": [
                "\"pageNum\"",
                "\"paraNum\"",
                "\"noCtxParaNum\"",
                "\"fullCtxParaNum\"",
                "\"text\"",
                "\"aboveBelow\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"pageNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"paraNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noCtxParaNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"fullCtxParaNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"text\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aboveBelow\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Available values of the \"heading\" reference type:\n\t * <b>\"text\"</b> - the entire heading text;\n\t * <b>\"pageNum\"</b> - the heading page number;\n     * <b>\"headingNum\"</b> - the heading sequence number;\n\t * <b>\"noCtxHeadingNum\"</b> - the abbreviated heading number. Make sure the cursor pointer is in the section you are referencing to, e.g. you are in section 4 and you wish to refer to heading 4.B, so instead of \"4.B\" you receive \"B\" only;\n     * <b>\"fullCtxHeadingNum\"</b> - the full heading number even if the cursor pointer is in the same section;\n     * <b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.\n\t * @typedef {\"text\" | \"pageNum\" | \"headingNum\" | \"noCtxHeadingNum\" | \"fullCtxHeadingNum\" | \"aboveBelow\"} headingRefTo\n\t * @see office-js-api/Examples/Enumerations/headingRefTo.js\n\t */",
        "description": "Available values of the \"heading\" reference type:\n<b>\"text\"</b> - the entire heading text;\n<b>\"pageNum\"</b> - the heading page number;\n<b>\"headingNum\"</b> - the heading sequence number;\n<b>\"noCtxHeadingNum\"</b> - the abbreviated heading number. Make sure the cursor pointer is in the section you are referencing to, e.g. you are in section 4 and you wish to refer to heading 4.B, so instead of \"4.B\" you receive \"B\" only;\n<b>\"fullCtxHeadingNum\"</b> - the full heading number even if the cursor pointer is in the same section;\n<b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.",
        "name": "headingRefTo",
        "longname": "headingRefTo",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4156,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/headingRefTo.js"
        ],
        "type": {
            "names": [
                "\"text\"",
                "\"pageNum\"",
                "\"headingNum\"",
                "\"noCtxHeadingNum\"",
                "\"fullCtxHeadingNum\"",
                "\"aboveBelow\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"text\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pageNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"headingNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noCtxHeadingNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"fullCtxHeadingNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aboveBelow\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Available values of the \"bookmark\" reference type:\n\t * <b>\"text\"</b> - the entire bookmark text;\n\t * <b>\"pageNum\"</b> - the bookmark page number;\n     * <b>\"paraNum\"</b> - the bookmark paragraph number;\n\t * <b>\"noCtxParaNum\"</b> - the abbreviated paragraph number (the specific item only, e.g. instead of \"4.1.1\" you refer to \"1\" only);\n     * <b>\"fullCtxParaNum</b> - the full paragraph number, e.g. \"4.1.1\";\n     * <b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.\n\t * @typedef {\"text\" | \"pageNum\" | \"paraNum\" | \"noCtxParaNum\" | \"fullCtxParaNum\" | \"aboveBelow\"} bookmarkRefTo\n\t * @see office-js-api/Examples/Enumerations/bookmarkRefTo.js\n\t */",
        "description": "Available values of the \"bookmark\" reference type:\n<b>\"text\"</b> - the entire bookmark text;\n<b>\"pageNum\"</b> - the bookmark page number;\n<b>\"paraNum\"</b> - the bookmark paragraph number;\n<b>\"noCtxParaNum\"</b> - the abbreviated paragraph number (the specific item only, e.g. instead of \"4.1.1\" you refer to \"1\" only);\n<b>\"fullCtxParaNum</b> - the full paragraph number, e.g. \"4.1.1\";\n<b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.",
        "name": "bookmarkRefTo",
        "longname": "bookmarkRefTo",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4168,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/bookmarkRefTo.js"
        ],
        "type": {
            "names": [
                "\"text\"",
                "\"pageNum\"",
                "\"paraNum\"",
                "\"noCtxParaNum\"",
                "\"fullCtxParaNum\"",
                "\"aboveBelow\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"text\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pageNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"paraNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"noCtxParaNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"fullCtxParaNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aboveBelow\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Available values of the \"footnote\" reference type:\n\t * <b>\"footnoteNum\"</b> - the footnote number;\n\t * <b>\"pageNum\"</b> - the page number of the footnote;\n     * <b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the position of the item;\n\t * <b>\"formFootnoteNum\"</b> - the form number formatted as a footnote. The numbering of the actual footnotes is not affected.\n\t * @typedef {\"footnoteNum\" | \"pageNum\" | \"aboveBelow\" | \"formFootnoteNum\"} footnoteRefTo\n\t * @see office-js-api/Examples/Enumerations/footnoteRefTo.js\n\t */",
        "description": "Available values of the \"footnote\" reference type:\n<b>\"footnoteNum\"</b> - the footnote number;\n<b>\"pageNum\"</b> - the page number of the footnote;\n<b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the position of the item;\n<b>\"formFootnoteNum\"</b> - the form number formatted as a footnote. The numbering of the actual footnotes is not affected.",
        "name": "footnoteRefTo",
        "longname": "footnoteRefTo",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4180,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/footnoteRefTo.js"
        ],
        "type": {
            "names": [
                "\"footnoteNum\"",
                "\"pageNum\"",
                "\"aboveBelow\"",
                "\"formFootnoteNum\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"footnoteNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pageNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aboveBelow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"formFootnoteNum\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Available values of the \"endnote\" reference type:\n\t * <b>\"endnoteNum\"</b> - the endnote number;\n\t * <b>\"pageNum\"</b> - the endnote page number;\n     * <b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position;\n\t * <b>\"formEndnoteNum\"</b> - the form number formatted as an endnote. The numbering of the actual endnotes is not affected.\n\t * @typedef {\"endnoteNum\" | \"pageNum\" | \"aboveBelow\" | \"formEndnoteNum\"} endnoteRefTo\n\t * @see office-js-api/Examples/Enumerations/endnoteRefTo.js\n\t */",
        "description": "Available values of the \"endnote\" reference type:\n<b>\"endnoteNum\"</b> - the endnote number;\n<b>\"pageNum\"</b> - the endnote page number;\n<b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position;\n<b>\"formEndnoteNum\"</b> - the form number formatted as an endnote. The numbering of the actual endnotes is not affected.",
        "name": "endnoteRefTo",
        "longname": "endnoteRefTo",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4190,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/endnoteRefTo.js"
        ],
        "type": {
            "names": [
                "\"endnoteNum\"",
                "\"pageNum\"",
                "\"aboveBelow\"",
                "\"formEndnoteNum\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"endnoteNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pageNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aboveBelow\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"formEndnoteNum\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Available values of the \"equation\"/\"figure\"/\"table\" reference type:\n\t * <b>\"entireCaption\"</b>- the entire caption text;\n\t * <b>\"labelNumber\"</b> - the label and object number only, e.g. \"Table 1.1\";\n     * <b>\"captionText\"</b> - the caption text only;\n\t * <b>\"pageNum\"</b> - the page number containing the referenced object;\n\t * <b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.\n\t * @typedef {\"entireCaption\" | \"labelNumber\" | \"captionText\" | \"pageNum\" | \"aboveBelow\"} captionRefTo\n\t * @see office-js-api/Examples/Enumerations/captionRefTo.js\n\t */",
        "description": "Available values of the \"equation\"/\"figure\"/\"table\" reference type:\n<b>\"entireCaption\"</b>- the entire caption text;\n<b>\"labelNumber\"</b> - the label and object number only, e.g. \"Table 1.1\";\n<b>\"captionText\"</b> - the caption text only;\n<b>\"pageNum\"</b> - the page number containing the referenced object;\n<b>\"aboveBelow\"</b> - the words \"above\" or \"below\" depending on the item position.",
        "name": "captionRefTo",
        "longname": "captionRefTo",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4200,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/captionRefTo.js"
        ],
        "type": {
            "names": [
                "\"entireCaption\"",
                "\"labelNumber\"",
                "\"captionText\"",
                "\"pageNum\"",
                "\"aboveBelow\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"entireCaption\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"labelNumber\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"captionText\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"pageNum\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"aboveBelow\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Axis position in the chart.\n\t * @typedef {(\"top\" | \"bottom\" | \"right\" | \"left\")} AxisPos\n\t * @see office-js-api/Examples/Enumerations/AxisPos.js\n\t */",
        "description": "Axis position in the chart.",
        "name": "AxisPos",
        "longname": "AxisPos",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4213,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/AxisPos.js"
        ],
        "type": {
            "names": [
                "\"top\"",
                "\"bottom\"",
                "\"right\"",
                "\"left\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"top\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"bottom\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"right\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"left\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Standard numeric format.\n\t * @typedef {(\"General\" | \"0\" | \"0.00\" | \"#,##0\" | \"#,##0.00\" | \"0%\" | \"0.00%\" |\n\t * \"0.00E+00\" | \"# ?/?\" | \"# ??/??\" | \"m/d/yyyy\" | \"d-mmm-yy\" | \"d-mmm\" | \"mmm-yy\" | \"h:mm AM/PM\" |\n\t * \"h:mm:ss AM/PM\" | \"h:mm\" | \"h:mm:ss\" | \"m/d/yyyy h:mm\" | \"#,##0_);(#,##0)\" | \"#,##0_);[Red](#,##0)\" | \n\t * \"#,##0.00_);(#,##0.00)\" | \"#,##0.00_);[Red](#,##0.00)\" | \"mm:ss\" | \"[h]:mm:ss\" | \"mm:ss.0\" | \"##0.0E+0\" | \"@\")} NumFormat\n\t * @see office-js-api/Examples/Enumerations/NumFormat.js\n\t */",
        "description": "Standard numeric format.",
        "name": "NumFormat",
        "longname": "NumFormat",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4219,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/NumFormat.js"
        ],
        "type": {
            "names": [
                "\"General\"",
                "\"0\"",
                "\"0.00\"",
                "\"#,##0\"",
                "\"#,##0.00\"",
                "\"0%\"",
                "\"0.00%\"",
                "\"0.00E+00\"",
                "\"# ?/?\"",
                "\"# ??/??\"",
                "\"m/d/yyyy\"",
                "\"d-mmm-yy\"",
                "\"d-mmm\"",
                "\"mmm-yy\"",
                "\"h:mm AM/PM\"",
                "\"h:mm:ss AM/PM\"",
                "\"h:mm\"",
                "\"h:mm:ss\"",
                "\"m/d/yyyy h:mm\"",
                "\"#,##0_);(#,##0)\"",
                "\"#,##0_);[Red](#,##0)\"",
                "\"#,##0.00_);(#,##0.00)\"",
                "\"#,##0.00_);[Red](#,##0.00)\"",
                "\"mm:ss\"",
                "\"[h]:mm:ss\"",
                "\"mm:ss.0\"",
                "\"##0.0E+0\"",
                "\"@\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"General\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"0\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"0.00\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"#,##0\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"#,##0.00\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"0%\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"0.00%\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"0.00E+00\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"# ?/?\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"# ??/??\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"m/d/yyyy\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"d-mmm-yy\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"d-mmm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mmm-yy\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"h:mm AM/PM\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"h:mm:ss AM/PM\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"h:mm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"h:mm:ss\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"m/d/yyyy h:mm\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"#,##0_);(#,##0)\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"#,##0_);[Red](#,##0)\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"#,##0.00_);(#,##0.00)\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"#,##0.00_);[Red](#,##0.00)\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mm:ss\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"[h]:mm:ss\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"mm:ss.0\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"##0.0E+0\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"@\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Types of all supported forms.\n\t * @typedef {ApiTextForm | ApiComboBoxForm | ApiCheckBoxForm | ApiPictureForm | ApiDateForm | ApiComplexForm} ApiForm\n\t * @see office-js-api/Examples/Enumerations/ApiForm.js\n\t */",
        "description": "Types of all supported forms.",
        "name": "ApiForm",
        "longname": "ApiForm",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4228,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ApiForm.js"
        ],
        "type": {
            "names": [
                "ApiTextForm",
                "ApiComboBoxForm",
                "ApiCheckBoxForm",
                "ApiPictureForm",
                "ApiDateForm",
                "ApiComplexForm"
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "ApiTextForm"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiComboBoxForm"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiCheckBoxForm"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiPictureForm"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiDateForm"
                    },
                    {
                        "type": "NameExpression",
                        "name": "ApiComplexForm"
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * Possible values for the caption numbering format.\n     * <b>\"ALPHABETIC\"</b> - upper letter.\n     * <b>\"alphabetic\"</b> - lower letter.\n     * <b>\"Roman\"</b> - upper Roman.\n     * <b>\"roman\"</b> - lower Roman.\n\t * <b>\"Arabic\"</b> - arabic.\n\t * @typedef {(\"ALPHABETIC\" | \"alphabetic\" | \"Roman\" | \"roman\" | \"Arabic\")} CaptionNumberingFormat\n\t * @see office-js-api/Examples/Enumerations/CaptionNumberingFormat.js\n\t */",
        "description": "Possible values for the caption numbering format.\n<b>\"ALPHABETIC\"</b> - upper letter.\n<b>\"alphabetic\"</b> - lower letter.\n<b>\"Roman\"</b> - upper Roman.\n<b>\"roman\"</b> - lower Roman.\n<b>\"Arabic\"</b> - arabic.",
        "name": "CaptionNumberingFormat",
        "longname": "CaptionNumberingFormat",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4234,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/CaptionNumberingFormat.js"
        ],
        "type": {
            "names": [
                "\"ALPHABETIC\"",
                "\"alphabetic\"",
                "\"Roman\"",
                "\"roman\"",
                "\"Arabic\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"ALPHABETIC\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"alphabetic\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"Roman\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"roman\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"Arabic\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * Possible values for the caption separator.\n     * <b>\"hyphen\"</b> - the \"-\" punctuation mark.\n     * <b>\"period\"</b> - the \".\" punctuation mark.\n     * <b>\"colon\"</b> - the \":\" punctuation mark.\n     * <b>\"longDash\"</b> - the \"—\" punctuation mark.\n\t * <b>\"dash\"</b> - the \"-\" punctuation mark.\n\t * @typedef {(\"hyphen\" | \"period\" | \"colon\" | \"longDash\" | \"dash\")} CaptionSep\n\t * @see office-js-api/Examples/Enumerations/CaptionSep.js\n\t */",
        "description": "Possible values for the caption separator.\n<b>\"hyphen\"</b> - the \"-\" punctuation mark.\n<b>\"period\"</b> - the \".\" punctuation mark.\n<b>\"colon\"</b> - the \":\" punctuation mark.\n<b>\"longDash\"</b> - the \"—\" punctuation mark.\n<b>\"dash\"</b> - the \"-\" punctuation mark.",
        "name": "CaptionSep",
        "longname": "CaptionSep",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4245,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/CaptionSep.js"
        ],
        "type": {
            "names": [
                "\"hyphen\"",
                "\"period\"",
                "\"colon\"",
                "\"longDash\"",
                "\"dash\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"hyphen\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"period\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"colon\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"longDash\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dash\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * Possible values for the caption label.\n     * @typedef {(\"Table\" | \"Equation\" | \"Figure\")} CaptionLabel\n\t * @see office-js-api/Examples/Enumerations/CaptionLabel.js\n\t */",
        "description": "Possible values for the caption label.",
        "name": "CaptionLabel",
        "longname": "CaptionLabel",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4256,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/CaptionLabel.js"
        ],
        "type": {
            "names": [
                "\"Table\"",
                "\"Equation\"",
                "\"Figure\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"Table\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"Equation\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"Figure\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Table of contents properties.\n\t * @typedef {Object} TocPr\n\t * @property {boolean} [ShowPageNums=true] - Specifies whether to show page numbers in the table of contents.\n\t * @property {boolean} [RightAlgn=true] - Specifies whether to right-align page numbers in the table of contents.\n\t * @property {TocLeader} [LeaderType=\"dot\"] - The leader type in the table of contents.\n\t * @property {boolean} [FormatAsLinks=true] - Specifies whether to format the table of contents as links.\n\t * @property {TocBuildFromPr} [BuildFrom={OutlineLvls=9}] - Specifies whether to generate the table of contents from the outline levels or the specified styles.\n\t * @property {TocStyle} [TocStyle=\"standard\"] - The table of contents style type.\n\t * @see office-js-api/Examples/Enumerations/TocPr.js\n\t */",
        "description": "Table of contents properties.",
        "name": "TocPr",
        "longname": "TocPr",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4262,
            "columnno": 1
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "ShowPageNums",
                "description": "Specifies whether to show page numbers in the table of contents.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "RightAlgn",
                "description": "Specifies whether to right-align page numbers in the table of contents.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "TocLeader"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TocLeader"
                    }
                },
                "name": "LeaderType",
                "description": "The leader type in the table of contents.",
                "optional": true,
                "defaultvalue": "\"dot\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "FormatAsLinks",
                "description": "Specifies whether to format the table of contents as links.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "TocBuildFromPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TocBuildFromPr"
                    }
                },
                "name": "BuildFrom",
                "description": "Specifies whether to generate the table of contents from the outline levels or the specified styles.",
                "optional": true,
                "defaultvalue": "{OutlineLvls=9}"
            },
            {
                "type": {
                    "names": [
                        "TocStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TocStyle"
                    }
                },
                "name": "TocStyle",
                "description": "The table of contents style type.",
                "optional": true,
                "defaultvalue": "\"standard\""
            }
        ],
        "see": [
            "office-js-api/Examples/Enumerations/TocPr.js"
        ],
        "type": {
            "names": [
                "Object"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "Object"
            }
        }
    },
    {
        "comment": "/**\n\t * Table of figures properties.\n\t * @typedef {Object} TofPr\n\t * @property {boolean} [ShowPageNums=true] - Specifies whether to show page numbers in the table of figures.\n\t * @property {boolean} [RightAlgn=true] - Specifies whether to right-align page numbers in the table of figures.\n\t * @property {TocLeader} [LeaderType=\"dot\"] - The leader type in the table of figures.\n\t * @property {boolean} [FormatAsLinks=true] - Specifies whether to format the table of figures as links.\n\t * @property {CaptionLabel | string} [BuildFrom=\"Figure\"] - Specifies whether to generate the table of figures based on the specified caption label or the paragraph style name used (for example, \"Heading 1\").\n\t * @property {boolean} [LabelNumber=true] - Specifies whether to include the label and number in the table of figures.\n\t * @property {TofStyle} [TofStyle=\"distinctive\"] - The table of figures style type.\n\t * @see office-js-api/Examples/Enumerations/TofPr.js\n\t */",
        "description": "Table of figures properties.",
        "name": "TofPr",
        "longname": "TofPr",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4274,
            "columnno": 1
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "ShowPageNums",
                "description": "Specifies whether to show page numbers in the table of figures.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "RightAlgn",
                "description": "Specifies whether to right-align page numbers in the table of figures.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "TocLeader"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TocLeader"
                    }
                },
                "name": "LeaderType",
                "description": "The leader type in the table of figures.",
                "optional": true,
                "defaultvalue": "\"dot\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "FormatAsLinks",
                "description": "Specifies whether to format the table of figures as links.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "CaptionLabel",
                        "string"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "CaptionLabel"
                            },
                            {
                                "type": "NameExpression",
                                "name": "string"
                            }
                        ]
                    }
                },
                "name": "BuildFrom",
                "description": "Specifies whether to generate the table of figures based on the specified caption label or the paragraph style name used (for example, \"Heading 1\").",
                "optional": true,
                "defaultvalue": "\"Figure\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "LabelNumber",
                "description": "Specifies whether to include the label and number in the table of figures.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "TofStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TofStyle"
                    }
                },
                "name": "TofStyle",
                "description": "The table of figures style type.",
                "optional": true,
                "defaultvalue": "\"distinctive\""
            }
        ],
        "see": [
            "office-js-api/Examples/Enumerations/TofPr.js"
        ],
        "type": {
            "names": [
                "Object"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "Object"
            }
        }
    },
    {
        "comment": "/**\n\t * Table of contents properties which specify whether to generate the table of contents from the outline levels or the specified styles.\n\t * @typedef {Object} TocBuildFromPr\n\t * @property {number} [OutlineLvls=9] - Maximum number of levels in the table of contents.\n\t * @property {TocStyleLvl[]} StylesLvls - Style levels (for example, [{Name: \"Heading 1\", Lvl: 2}, {Name: \"Heading 2\", Lvl: 3}]).\n\t * <note>If StylesLvls.length > 0, then the OutlineLvls property will be ignored.</note>\n\t * @see office-js-api/Examples/Enumerations/TocBuildFromPr.js\n\t */",
        "description": "Table of contents properties which specify whether to generate the table of contents from the outline levels or the specified styles.",
        "name": "TocBuildFromPr",
        "longname": "TocBuildFromPr",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4287,
            "columnno": 1
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "OutlineLvls",
                "description": "Maximum number of levels in the table of contents.",
                "optional": true,
                "defaultvalue": 9
            },
            {
                "type": {
                    "names": [
                        "Array.<TocStyleLvl>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "TocStyleLvl",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "StylesLvls",
                "description": "Style levels (for example, [{Name: \"Heading 1\", Lvl: 2}, {Name: \"Heading 2\", Lvl: 3}]).\n<note>If StylesLvls.length > 0, then the OutlineLvls property will be ignored.</note>",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "see": [
            "office-js-api/Examples/Enumerations/TocBuildFromPr.js"
        ],
        "type": {
            "names": [
                "Object"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "Object"
            }
        }
    },
    {
        "comment": "/**\n\t * Table of contents style levels.\n\t * @typedef {Object} TocStyleLvl\n\t * @property {string} Name - Style name (for example, \"Heading 1\").\n\t * @property {number} Lvl - Level which will be applied to the specified style in the table of contents.\n\t * @see office-js-api/Examples/Enumerations/TocStyleLvl.js\n\t */",
        "description": "Table of contents style levels.",
        "name": "TocStyleLvl",
        "longname": "TocStyleLvl",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4296,
            "columnno": 1
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "Name",
                "description": "Style name (for example, \"Heading 1\").",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "Lvl",
                "description": "Level which will be applied to the specified style in the table of contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "see": [
            "office-js-api/Examples/Enumerations/TocStyleLvl.js"
        ],
        "type": {
            "names": [
                "Object"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "Object"
            }
        }
    },
    {
        "comment": "/**\n\t * Possible values for the table of contents leader:\n\t * <b>\"dot\"</b> - \".......\"\n\t * <b>\"dash\"</b> - \"-------\"\n\t * <b>\"underline\"</b> - \"_______\"\n     * @typedef {(\"dot\" | \"dash\" | \"underline\" | \"none\")} TocLeader\n\t * @see office-js-api/Examples/Enumerations/TocLeader.js\n\t */",
        "description": "Possible values for the table of contents leader:\n<b>\"dot\"</b> - \".......\"\n<b>\"dash\"</b> - \"-------\"\n<b>\"underline\"</b> - \"_______\"",
        "name": "TocLeader",
        "longname": "TocLeader",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4304,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TocLeader.js"
        ],
        "type": {
            "names": [
                "\"dot\"",
                "\"dash\"",
                "\"underline\"",
                "\"none\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"dot\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dash\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"underline\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"none\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * Possible values for the table of contents style.\n     * @typedef {(\"simple\" | \"online\" | \"standard\" | \"modern\" | \"classic\")} TocStyle\n\t * @see office-js-api/Examples/Enumerations/TocStyle.js\n\t */",
        "description": "Possible values for the table of contents style.",
        "name": "TocStyle",
        "longname": "TocStyle",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4313,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TocStyle.js"
        ],
        "type": {
            "names": [
                "\"simple\"",
                "\"online\"",
                "\"standard\"",
                "\"modern\"",
                "\"classic\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"simple\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"online\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"standard\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"modern\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"classic\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * Possible values for the table of figures style.\n     * @typedef {(\"simple\" | \"online\" | \"classic\" | \"distinctive\" | \"centered\" | \"formal\")} TofStyle\n\t * @see office-js-api/Examples/Enumerations/TofStyle.js\n\t */",
        "description": "Possible values for the table of figures style.",
        "name": "TofStyle",
        "longname": "TofStyle",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4319,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TofStyle.js"
        ],
        "type": {
            "names": [
                "\"simple\"",
                "\"online\"",
                "\"classic\"",
                "\"distinctive\"",
                "\"centered\"",
                "\"formal\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"simple\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"online\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"classic\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"distinctive\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"centered\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"formal\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n     * The 1000th of a percent (100000 = 100%).\n\t * @typedef {number} PositivePercentage\n\t * @see office-js-api/Examples/Enumerations/PositivePercentage.js\n\t */",
        "description": "The 1000th of a percent (100000 = 100%).",
        "name": "PositivePercentage",
        "longname": "PositivePercentage",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4331,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/PositivePercentage.js"
        ],
        "type": {
            "names": [
                "number"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "number"
            }
        }
    },
    {
        "comment": "/**\n\t * The type of tick mark appearance.\n\t * @typedef {(\"cross\" | \"in\" | \"none\" | \"out\")} TickMark\n\t * @see office-js-api/Examples/Enumerations/TickMark.js\n\t */",
        "description": "The type of tick mark appearance.",
        "name": "TickMark",
        "longname": "TickMark",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4337,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/TickMark.js"
        ],
        "type": {
            "names": [
                "\"cross\"",
                "\"in\"",
                "\"none\"",
                "\"out\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"cross\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"in\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"none\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"out\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * The watermark type.\n\t * @typedef {(\"none\" | \"text\" | \"image\")} WatermarkType\n\t * @see office-js-api/Examples/Enumerations/WatermarkType.js\n\t */",
        "description": "The watermark type.",
        "name": "WatermarkType",
        "longname": "WatermarkType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4343,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/WatermarkType.js"
        ],
        "type": {
            "names": [
                "\"none\"",
                "\"text\"",
                "\"image\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"none\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"text\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"image\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * The watermark direction.\n\t * @typedef {(\"horizontal\" | \"clockwise45\" | \"counterclockwise45\")} WatermarkDirection\n\t * @see office-js-api/Examples/Enumerations/WatermarkDirection.js\n\t */",
        "description": "The watermark direction.",
        "name": "WatermarkDirection",
        "longname": "WatermarkDirection",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 4349,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/WatermarkDirection.js"
        ],
        "type": {
            "names": [
                "\"horizontal\"",
                "\"clockwise45\"",
                "\"counterclockwise45\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"horizontal\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"clockwise45\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"counterclockwise45\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Returns the main document.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiDocument}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/GetDocument.js\n\t */",
        "description": "Returns the main document.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocument"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocument"
                    }
                }
            }
        ],
        "name": "GetDocument",
        "longname": "Api#GetDocument",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4363,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/GetDocument.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new paragraph.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\"]\n\t * @returns {ApiParagraph}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateParagraph.js\n\t */",
        "description": "Creates a new paragraph.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "CreateParagraph",
        "longname": "Api#CreateParagraph",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4374,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateParagraph.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates an element range.\n\t * If you do not specify the start and end positions, the range will be taken from the entire element.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param oElement - The element from which the range will be taken.\n\t * @param nStart - Start range position.\n\t * @param nEnd - End range position.\n\t * @returns {ApiRange | null} - returns null if oElement isn't supported.\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateRange.js\n\t */",
        "description": "Creates an element range.\nIf you do not specify the start and end positions, the range will be taken from the entire element.",
        "memberof": "Api",
        "params": [
            {
                "type": null,
                "name": "oElement",
                "description": "The element from which the range will be taken.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": null,
                "name": "nStart",
                "description": "Start range position.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": null,
                "name": "nEnd",
                "description": "End range position.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "CreateRange",
        "longname": "Api#CreateRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4389,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new table with a specified number of rows and columns.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nCols - Number of columns.\n\t * @param {number} nRows - Number of rows.\n\t * @returns {ApiTable}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateTable.js\n\t */",
        "description": "Creates a new table with a specified number of rows and columns.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nCols",
                "description": "Number of columns.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nRows",
                "description": "Number of rows.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTable"
                    }
                }
            }
        ],
        "name": "CreateTable",
        "longname": "Api#CreateTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4419,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new smaller text block to be inserted to the current paragraph or table.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateRun.js\n\t */",
        "description": "Creates a new smaller text block to be inserted to the current paragraph or table.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "CreateRun",
        "longname": "Api#CreateRun",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4437,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateRun.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new hyperlink text block to be inserted to the current paragraph or table.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLink - The hyperlink address. \n\t * @param {string} sDisplay - The text to display the hyperlink.\n\t * @param {string} sScreenTipText - The screen tip text.\n\t * @returns {ApiHyperlink}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateHyperlink.js\n\t */",
        "description": "Creates a new hyperlink text block to be inserted to the current paragraph or table.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLink",
                "description": "The hyperlink address.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sDisplay",
                "description": "The text to display the hyperlink.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sScreenTipText",
                "description": "The screen tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiHyperlink"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiHyperlink"
                    }
                }
            }
        ],
        "name": "CreateHyperlink",
        "longname": "Api#CreateHyperlink",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4451,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateHyperlink.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates an image with the parameters specified.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sImageSrc - The image source where the image to be inserted should be taken from (currently only internet URL or Base64 encoded images are supported).\n\t * @param {EMU} nWidth - The image width in English measure units.\n\t * @param {EMU} nHeight - The image height in English measure units.\n\t * @returns {ApiImage}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateImage.js\n\t */",
        "description": "Creates an image with the parameters specified.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sImageSrc",
                "description": "The image source where the image to be inserted should be taken from (currently only internet URL or Base64 encoded images are supported).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The image width in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The image height in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiImage"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiImage"
                    }
                }
            }
        ],
        "name": "CreateImage",
        "longname": "Api#CreateImage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4474,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateImage.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a shape with the parameters specified.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShapeType} [sType=\"rect\"] - The shape type which specifies the preset shape geometry.\n\t * @param {EMU} [nWidth = 914400] - The shape width in English measure units.\n\t * @param {EMU} [nHeight = 914400] - The shape height in English measure units.\n\t * @param {ApiFill} [oFill = Api.CreateNoFill()] - The color or pattern used to fill the shape.\n\t * @param {ApiStroke} [oStroke = Api.CreateStroke(0, Api.CreateNoFill())] - The stroke used to create the element shadow.\n\t * @returns {ApiShape}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateShape.js\n\t */",
        "description": "Creates a shape with the parameters specified.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "ShapeType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ShapeType"
                    }
                },
                "name": "sType",
                "description": "The shape type which specifies the preset shape geometry.",
                "optional": true,
                "defaultvalue": "\"rect\""
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The shape width in English measure units.",
                "optional": true,
                "defaultvalue": 914400
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The shape height in English measure units.",
                "optional": true,
                "defaultvalue": 914400
            },
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The color or pattern used to fill the shape.",
                "optional": true,
                "defaultvalue": "Api.CreateNoFill()"
            },
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the element shadow.",
                "optional": true,
                "defaultvalue": "Api.CreateStroke(0, Api.CreateNoFill())"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiShape"
                    }
                }
            }
        ],
        "name": "CreateShape",
        "longname": "Api#CreateShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4498,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a chart with the parameters specified.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ChartType} [sType=\"bar\"] - The chart type used for the chart display.\n\t * @param {Array} aSeries - The array of the data used to build the chart from.\n\t * @param {Array} aSeriesNames - The array of the names (the source table column names) used for the data which the chart will be build from.\n\t * @param {Array} aCatNames - The array of the names (the source table row names) used for the data which the chart will be build from.\n\t * @param {EMU} nWidth - The chart width in English measure units.\n\t * @param {EMU} nHeight - The chart height in English measure units.\n\t * @param {number} nStyleIndex - The chart color style index (can be 1 - 48, as described in OOXML specification).\n\t * @param {NumFormat[] | String[]} aNumFormats - Numeric formats which will be applied to the series (can be custom formats).\n     * The default numeric format is \"General\".\n\t * @returns {ApiChart}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateChart.js\n\t */",
        "description": "Creates a chart with the parameters specified.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "ChartType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ChartType"
                    }
                },
                "name": "sType",
                "description": "The chart type used for the chart display.",
                "optional": true,
                "defaultvalue": "\"bar\""
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Array"
                    }
                },
                "name": "aSeries",
                "description": "The array of the data used to build the chart from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Array"
                    }
                },
                "name": "aSeriesNames",
                "description": "The array of the names (the source table column names) used for the data which the chart will be build from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Array"
                    }
                },
                "name": "aCatNames",
                "description": "The array of the names (the source table row names) used for the data which the chart will be build from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The chart width in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The chart height in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nStyleIndex",
                "description": "The chart color style index (can be 1 - 48, as described in OOXML specification).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Array.<NumFormat>",
                        "Array.<String>"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "NumFormat",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "String",
                                        "type": "NameExpression"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "name": "aNumFormats",
                "description": "Numeric formats which will be applied to the series (can be custom formats).\nThe default numeric format is \"General\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiChart"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiChart"
                    }
                }
            }
        ],
        "name": "CreateChart",
        "longname": "Api#CreateChart",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4537,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateChart.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates an OLE object with the parameters specified.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sImageSrc - The image source where the image to be inserted should be taken from (currently, only internet URL or Base64 encoded images are supported).\n\t * @param {EMU} nWidth - The OLE object width in English measure units.\n\t * @param {EMU} nHeight - The OLE object height in English measure units.\n\t * @param {string} sData - The OLE object string data.\n\t * @param {string} sAppId - The application ID associated with the current OLE object.\n\t * @returns {ApiOleObject}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateOleObject.js\n\t */",
        "description": "Creates an OLE object with the parameters specified.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sImageSrc",
                "description": "The image source where the image to be inserted should be taken from (currently, only internet URL or Base64 encoded images are supported).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The OLE object width in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The OLE object height in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sData",
                "description": "The OLE object string data.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAppId",
                "description": "The application ID associated with the current OLE object.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiOleObject"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiOleObject"
                    }
                }
            }
        ],
        "name": "CreateOleObject",
        "longname": "Api#CreateOleObject",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4566,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateOleObject.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates an RGB color setting the appropriate values for the red, green and blue color components.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @returns {ApiRGBColor}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateRGBColor.js\n\t */",
        "description": "Creates an RGB color setting the appropriate values for the red, green and blue color components.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRGBColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRGBColor"
                    }
                }
            }
        ],
        "name": "CreateRGBColor",
        "longname": "Api#CreateRGBColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4593,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateRGBColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a complex color scheme selecting from one of the available schemes.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {SchemeColorId} sSchemeColorId - The color scheme identifier.\n\t * @returns {ApiSchemeColor}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateSchemeColor.js\n\t */",
        "description": "Creates a complex color scheme selecting from one of the available schemes.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "SchemeColorId"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "SchemeColorId"
                    }
                },
                "name": "sSchemeColorId",
                "description": "The color scheme identifier.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiSchemeColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiSchemeColor"
                    }
                }
            }
        ],
        "name": "CreateSchemeColor",
        "longname": "Api#CreateSchemeColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4606,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateSchemeColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a color selecting it from one of the available color presets.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {PresetColor} sPresetColor - A preset selected from the list of the available color preset names.\n\t * @returns {ApiPresetColor};\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreatePresetColor.js\n\t */",
        "description": "Creates a color selecting it from one of the available color presets.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "PresetColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "PresetColor"
                    }
                },
                "name": "sPresetColor",
                "description": "A preset selected from the list of the available color preset names.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiPresetColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiPresetColor"
                    }
                }
            }
        ],
        "name": "CreatePresetColor",
        "longname": "Api#CreatePresetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4619,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreatePresetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a solid fill to apply to the object using a selected solid color as the object background.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {ApiUniColor} oUniColor - The color used for the element fill.\n\t * @returns {ApiFill}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateSolidFill.js\n\t */",
        "description": "Creates a solid fill to apply to the object using a selected solid color as the object background.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiUniColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiUniColor"
                    }
                },
                "name": "oUniColor",
                "description": "The color used for the element fill.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                }
            }
        ],
        "name": "CreateSolidFill",
        "longname": "Api#CreateSolidFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4632,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateSolidFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a linear gradient fill to apply to the object using the selected linear gradient as the object background.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {Array} aGradientStop - The array of gradient color stops measured in 1000th of percent.\n\t * @param {PositiveFixedAngle} Angle - The angle measured in 60000th of a degree that will define the gradient direction.\n\t * @returns {ApiFill}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateLinearGradientFill.js\n\t */",
        "description": "Creates a linear gradient fill to apply to the object using the selected linear gradient as the object background.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Array"
                    }
                },
                "name": "aGradientStop",
                "description": "The array of gradient color stops measured in 1000th of percent.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "PositiveFixedAngle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "PositiveFixedAngle"
                    }
                },
                "name": "Angle",
                "description": "The angle measured in 60000th of a degree that will define the gradient direction.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                }
            }
        ],
        "name": "CreateLinearGradientFill",
        "longname": "Api#CreateLinearGradientFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4646,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateLinearGradientFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a radial gradient fill to apply to the object using the selected radial gradient as the object background.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {Array} aGradientStop - The array of gradient color stops measured in 1000th of percent.\n\t * @returns {ApiFill}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateRadialGradientFill.js\n\t */",
        "description": "Creates a radial gradient fill to apply to the object using the selected radial gradient as the object background.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Array"
                    }
                },
                "name": "aGradientStop",
                "description": "The array of gradient color stops measured in 1000th of percent.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                }
            }
        ],
        "name": "CreateRadialGradientFill",
        "longname": "Api#CreateRadialGradientFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4660,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateRadialGradientFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a pattern fill to apply to the object using the selected pattern as the object background.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {PatternType} sPatternType - The pattern type used for the fill selected from one of the available pattern types.\n\t * @param {ApiUniColor} BgColor - The background color used for the pattern creation.\n\t * @param {ApiUniColor} FgColor - The foreground color used for the pattern creation.\n\t * @returns {ApiFill}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreatePatternFill.js\n\t */",
        "description": "Creates a pattern fill to apply to the object using the selected pattern as the object background.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "PatternType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "PatternType"
                    }
                },
                "name": "sPatternType",
                "description": "The pattern type used for the fill selected from one of the available pattern types.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiUniColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiUniColor"
                    }
                },
                "name": "BgColor",
                "description": "The background color used for the pattern creation.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiUniColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiUniColor"
                    }
                },
                "name": "FgColor",
                "description": "The foreground color used for the pattern creation.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                }
            }
        ],
        "name": "CreatePatternFill",
        "longname": "Api#CreatePatternFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4674,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreatePatternFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a blip fill to apply to the object using the selected image as the object background.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {string} sImageUrl - The path to the image used for the blip fill (currently only internet URL or Base64 encoded images are supported).\n\t * @param {BlipFillType} sBlipFillType - The type of the fill used for the blip fill (tile or stretch).\n\t * @returns {ApiFill}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateBlipFill.js\n\t */",
        "description": "Creates a blip fill to apply to the object using the selected image as the object background.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sImageUrl",
                "description": "The path to the image used for the blip fill (currently only internet URL or Base64 encoded images are supported).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "BlipFillType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BlipFillType"
                    }
                },
                "name": "sBlipFillType",
                "description": "The type of the fill used for the blip fill (tile or stretch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                }
            }
        ],
        "name": "CreateBlipFill",
        "longname": "Api#CreateBlipFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4688,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateBlipFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates no fill and removes the fill from the element.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiFill}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateNoFill.js\n\t */",
        "description": "Creates no fill and removes the fill from the element.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                }
            }
        ],
        "name": "CreateNoFill",
        "longname": "Api#CreateNoFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4700,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateNoFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a stroke adding shadows to the element.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {EMU} nWidth - The width of the shadow measured in English measure units.\n\t * @param {ApiFill} oFill - The fill type used to create the shadow.\n\t * @returns {ApiStroke}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateStroke.js\n\t */",
        "description": "Creates a stroke adding shadows to the element.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The width of the shadow measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to create the shadow.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                }
            }
        ],
        "name": "CreateStroke",
        "longname": "Api#CreateStroke",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4714,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateStroke.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a gradient stop used for different types of gradients.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {ApiUniColor} oUniColor - The color used for the gradient stop.\n\t * @param {PositivePercentage} nPos - The position of the gradient stop measured in 1000th of percent.\n\t * @returns {ApiGradientStop}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateGradientStop.js\n\t */",
        "description": "Creates a gradient stop used for different types of gradients.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiUniColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiUniColor"
                    }
                },
                "name": "oUniColor",
                "description": "The color used for the gradient stop.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "PositivePercentage"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "PositivePercentage"
                    }
                },
                "name": "nPos",
                "description": "The position of the gradient stop measured in 1000th of percent.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiGradientStop"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiGradientStop"
                    }
                }
            }
        ],
        "name": "CreateGradientStop",
        "longname": "Api#CreateGradientStop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4728,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateGradientStop.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a bullet for a paragraph with the numbering character or symbol specified with the sType parameter.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BulletType} sType - The numbering type the paragraphs will be numbered with.\n\t * @param {number} nStartAt - The number the first numbered paragraph will start with.\n\t * @returns {ApiBullet}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateNumbering.js\n\t */",
        "description": "Creates a bullet for a paragraph with the numbering character or symbol specified with the sType parameter.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "BulletType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BulletType"
                    }
                },
                "name": "sType",
                "description": "The numbering type the paragraphs will be numbered with.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nStartAt",
                "description": "The number the first numbered paragraph will start with.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBullet"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiBullet"
                    }
                }
            }
        ],
        "name": "CreateNumbering",
        "longname": "Api#CreateNumbering",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4764,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateNumbering.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new inline container.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiInlineLvlSdt}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateInlineLvlSdt.js\n\t */",
        "description": "Creates a new inline container.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiInlineLvlSdt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiInlineLvlSdt"
                    }
                }
            }
        ],
        "name": "CreateInlineLvlSdt",
        "longname": "Api#CreateInlineLvlSdt",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4821,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateInlineLvlSdt.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new block level container.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiBlockLvlSdt}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateBlockLvlSdt.js\n\t */",
        "description": "Creates a new block level container.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBlockLvlSdt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiBlockLvlSdt"
                    }
                }
            }
        ],
        "name": "CreateBlockLvlSdt",
        "longname": "Api#CreateBlockLvlSdt",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4835,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateBlockLvlSdt.js"
        ]
    },
    {
        "comment": "/**\n\t * Saves changes to the specified document.\n\t * @typeofeditors [\"CDE\"]\n\t * @memberof Api\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/Save.js\n\t */",
        "description": "Saves changes to the specified document.",
        "memberof": "Api",
        "params": null,
        "returns": null,
        "name": "Save",
        "longname": "Api#Save",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4846,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/Save.js"
        ]
    },
    {
        "comment": "/**\n\t * Loads data for the mail merge. \n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {String[][]} aList - Mail merge data. The first element of the array is the array with names of the merge fields.\n\t * The rest of the array elements are arrays with values for the merge fields.\n\t * @typeofeditors [\"CDE\"]\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/LoadMailMergeData.js\n\t */",
        "description": "Loads data for the mail merge.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Array.<String>>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "String",
                                        "type": "NameExpression"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "name": "aList",
                "description": "Mail merge data. The first element of the array is the array with names of the merge fields.\nThe rest of the array elements are arrays with values for the merge fields.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "LoadMailMergeData",
        "longname": "Api#LoadMailMergeData",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4860,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/LoadMailMergeData.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the mail merge template document.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiDocumentContent}  \n\t * @see office-js-api/Examples/{Editor}/Api/Methods/GetMailMergeTemplateDocContent.js\n\t */",
        "description": "Returns the mail merge template document.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent"
                    }
                }
            }
        ],
        "name": "GetMailMergeTemplateDocContent",
        "longname": "Api#GetMailMergeTemplateDocContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4877,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/GetMailMergeTemplateDocContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the mail merge receptions count.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @return {number}  \n\t * @see office-js-api/Examples/{Editor}/Api/Methods/GetMailMergeReceptionsCount.js\n\t */",
        "description": "Returns the mail merge receptions count.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetMailMergeReceptionsCount",
        "longname": "Api#GetMailMergeReceptionsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4961,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/GetMailMergeReceptionsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Replaces the main document content with another document content.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiDocumentContent} oApiDocumentContent - The document content which the main document content will be replaced with.\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/ReplaceDocumentContent.js\n\t */",
        "description": "Replaces the main document content with another document content.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent"
                    }
                },
                "name": "oApiDocumentContent",
                "description": "The document content which the main document content will be replaced with.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "ReplaceDocumentContent",
        "longname": "Api#ReplaceDocumentContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4975,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/ReplaceDocumentContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Starts the mail merge process.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} [nStartIndex=0] - The start index of the document for mail merge process.\n\t * @param {number} [nEndIndex=Api.GetMailMergeReceptionsCount() - 1] - The end index of the document for mail merge process.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/MailMerge.js\n\t */",
        "description": "Starts the mail merge process.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nStartIndex",
                "description": "The start index of the document for mail merge process.",
                "optional": true,
                "defaultvalue": 0
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nEndIndex",
                "description": "The end index of the document for mail merge process.",
                "optional": true,
                "defaultvalue": "Api.GetMailMergeReceptionsCount() - 1"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "MailMerge",
        "longname": "Api#MailMerge",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 4996,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/MailMerge.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the specified JSON object into the Document Builder object of the corresponding type.\n\t * @memberof Api\n\t * @param {JSON} sMessage - The JSON object to convert.\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/FromJSON.js\n\t */",
        "description": "Converts the specified JSON object into the Document Builder object of the corresponding type.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                },
                "name": "sMessage",
                "description": "The JSON object to convert.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "FromJSON",
        "longname": "Api#FromJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/FromJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiUnsupported class.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"unsupported\"}\n\t * @see office-js-api/Examples/{Editor}/ApiUnsupported/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiUnsupported class.",
        "memberof": "ApiUnsupported",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"unsupported\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"unsupported\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiUnsupported#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5260,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiUnsupported/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to the specifed document element or array of Runs.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiRun[] | DocumentElement} oElement - The element where the comment will be added. It may be applied to any element which has the *AddComment* method.\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {ApiComment?} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to the specifed document element or array of Runs.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<ApiRun>",
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiRun",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "NameExpression",
                                "name": "DocumentElement"
                            }
                        ]
                    }
                },
                "name": "oElement",
                "description": "The element where the comment will be added. It may be applied to any element which has the *AddComment* method.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "Api#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5275,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n\t * Subscribes to the specified event and calls the callback function when the event fires.\n\t * @function\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} eventName - The event name.\n\t * @param {function} callback - Function to be called when the event fires.\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/attachEvent.js\n\t */",
        "description": "Subscribes to the specified event and calls the callback function when the event fires.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "eventName",
                "description": "The event name.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "function"
                    ],
                    "parsedType": {
                        "type": "FunctionType",
                        "params": []
                    }
                },
                "name": "callback",
                "description": "Function to be called when the event fires.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "attachEvent",
        "longname": "Api#attachEvent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5372,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/attachEvent.js"
        ]
    },
    {
        "comment": "/**\n\t * Unsubscribes from the specified event.\n\t * @function\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} eventName - The event name.\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/detachEvent.js\n\t */",
        "description": "Unsubscribes from the specified event.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "eventName",
                "description": "The event name.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "detachEvent",
        "longname": "Api#detachEvent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5382,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/detachEvent.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiDocumentContent class. \n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"documentContent\"}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiDocumentContent class.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"documentContent\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"documentContent\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiDocumentContent#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5397,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of elements in the current document.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetElementsCount.js\n\t */",
        "description": "Returns a number of elements in the current document.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetElementsCount",
        "longname": "ApiDocumentContent#GetElementsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5408,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetElementsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an element by its position in the document.\n\t * @memberof ApiDocumentContent\n\t * @param {number} nPos - The element position that will be taken from the document.\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {?DocumentElement}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetElement.js\n\t */",
        "description": "Returns an element by its position in the document.",
        "memberof": "ApiDocumentContent",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The element position that will be taken from the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetElement",
        "longname": "ApiDocumentContent#GetElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5420,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a paragraph or a table or a blockLvl content control using its position in the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {number} nPos - The position where the current element will be added.\n\t * @param {DocumentElement} oElement - The document element which will be added at the current position.\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/AddElement.js\n\t */",
        "description": "Adds a paragraph or a table or a blockLvl content control using its position in the document content.",
        "memberof": "ApiDocumentContent",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position where the current element will be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The document element which will be added at the current position.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "AddElement",
        "longname": "ApiDocumentContent#AddElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5443,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/AddElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Pushes a paragraph or a table to actually add it to the document.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {DocumentElement} oElement - The element type which will be pushed to the document.\n\t * @returns {boolean} - returns false if oElement is unsupported.\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/Push.js\n\t */",
        "description": "Pushes a paragraph or a table to actually add it to the document.",
        "memberof": "ApiDocumentContent",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The element type which will be pushed to the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Push",
        "longname": "ApiDocumentContent#Push",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5461,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/Push.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes all the elements from the current document or from the current document element.\n\t * <note>When all elements are removed, a new empty paragraph is automatically created. If you want to add\n\t * content to this paragraph, use the {@link ApiDocumentContent#GetElement} method.</note>\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/RemoveAllElements.js\n\t */",
        "description": "Removes all the elements from the current document or from the current document element.\n<note>When all elements are removed, a new empty paragraph is automatically created. If you want to add\ncontent to this paragraph, use the {@link ApiDocumentContent#GetElement} method.</note>",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": null,
        "name": "RemoveAllElements",
        "longname": "ApiDocumentContent#RemoveAllElements",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5483,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/RemoveAllElements.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes an element using the position specified.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {number} nPos - The element number (position) in the document or inside other element.\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/RemoveElement.js\n\t */",
        "description": "Removes an element using the position specified.",
        "memberof": "ApiDocumentContent",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The element number (position) in the document or inside other element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "RemoveElement",
        "longname": "ApiDocumentContent#RemoveElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5494,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/RemoveElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the document content.",
        "memberof": "ApiDocumentContent",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiDocumentContent#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5510,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiDocumentContent object into the JSON object.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiDocumentContent object into the JSON object.",
        "memberof": "ApiDocumentContent",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiDocumentContent#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5523,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an array of document elements from the current ApiDocumentContent object.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bGetCopies - Specifies if the copies of the document elements will be returned or not.\n\t * @returns {Array}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetContent.js\n\t */",
        "description": "Returns an array of document elements from the current ApiDocumentContent object.",
        "memberof": "ApiDocumentContent",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bGetCopies",
                "description": "Specifies if the copies of the document elements will be returned or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Array"
                    }
                }
            }
        ],
        "name": "GetContent",
        "longname": "ApiDocumentContent#GetContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5542,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of drawing objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiDrawing[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllDrawingObjects.js\n\t */",
        "description": "Returns a collection of drawing objects from the document content.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiDrawing>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiDrawing",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllDrawingObjects",
        "longname": "ApiDocumentContent#GetAllDrawingObjects",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5571,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllDrawingObjects.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of shape objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiShape[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllShapes.js\n\t */",
        "description": "Returns a collection of shape objects from the document content.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiShape>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiShape",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllShapes",
        "longname": "ApiDocumentContent#GetAllShapes",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5588,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllShapes.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of image objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiImage[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllImages.js\n\t */",
        "description": "Returns a collection of image objects from the document content.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiImage>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiImage",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllImages",
        "longname": "ApiDocumentContent#GetAllImages",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5601,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllImages.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of chart objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiChart[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllCharts.js\n\t */",
        "description": "Returns a collection of chart objects from the document content.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiChart>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiChart",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllCharts",
        "longname": "ApiDocumentContent#GetAllCharts",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5614,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllCharts.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of OLE objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiOleObject[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllOleObjects.js\n\t */",
        "description": "Returns a collection of OLE objects from the document content.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiOleObject>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiOleObject",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllOleObjects",
        "longname": "ApiDocumentContent#GetAllOleObjects",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5627,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllOleObjects.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an array of all paragraphs from the current document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllParagraphs.js\n\t */",
        "description": "Returns an array of all paragraphs from the current document content.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllParagraphs",
        "longname": "ApiDocumentContent#GetAllParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5640,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an array of all tables from the current document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllTables.js\n\t */",
        "description": "Returns an array of all tables from the current document content.",
        "memberof": "ApiDocumentContent",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllTables",
        "longname": "ApiDocumentContent#GetAllTables",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5656,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllTables.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiDocument class.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"document\"}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiDocument class.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"document\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"document\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiDocument#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5678,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new history point.\n\t * @typeofeditors [\"CDE\"]\n\t * @memberof ApiDocument\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/CreateNewHistoryPoint.js\n\t */",
        "description": "Creates a new history point.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": null,
        "name": "CreateNewHistoryPoint",
        "longname": "ApiDocument#CreateNewHistoryPoint",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5688,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/CreateNewHistoryPoint.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a style by its name.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sStyleName - The style name.\n\t * @returns {?ApiStyle}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetStyle.js\n\t */",
        "description": "Returns a style by its name.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sStyleName",
                "description": "The style name.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetStyle",
        "longname": "ApiDocument#GetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5700,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new style with the specified type and name. If there is a style with the same name it will be replaced with a new one.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sStyleName - The name of the style which will be created.\n\t * @param {StyleType} [sType=\"paragraph\"] - The document element which the style will be applied to.\n\t * @returns {ApiStyle}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/CreateStyle.js\n\t */",
        "description": "Creates a new style with the specified type and name. If there is a style with the same name it will be replaced with a new one.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sStyleName",
                "description": "The name of the style which will be created.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "StyleType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "StyleType"
                    }
                },
                "name": "sType",
                "description": "The document element which the style will be applied to.",
                "optional": true,
                "defaultvalue": "\"paragraph\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle"
                    }
                }
            }
        ],
        "name": "CreateStyle",
        "longname": "ApiDocument#CreateStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5715,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/CreateStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the default style parameters for the specified document element.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {StyleType} sStyleType - The document element which we want to get the style for.\n\t * @returns {?ApiStyle}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetDefaultStyle.js\n\t */",
        "description": "Returns the default style parameters for the specified document element.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "StyleType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "StyleType"
                    }
                },
                "name": "sStyleType",
                "description": "The document element which we want to get the style for.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetDefaultStyle",
        "longname": "ApiDocument#GetDefaultStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5754,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetDefaultStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of default properties for the text run in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetDefaultTextPr.js\n\t */",
        "description": "Returns a set of default properties for the text run in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetDefaultTextPr",
        "longname": "ApiDocument#GetDefaultTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5776,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetDefaultTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of default paragraph properties in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParaPr}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetDefaultParaPr.js\n\t */",
        "description": "Returns a set of default paragraph properties in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParaPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParaPr"
                    }
                }
            }
        ],
        "name": "GetDefaultParaPr",
        "longname": "ApiDocument#GetDefaultParaPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5788,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetDefaultParaPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the document final section.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiSection}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetFinalSection.js\n\t */",
        "description": "Returns the document final section.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiSection"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiSection"
                    }
                }
            }
        ],
        "name": "GetFinalSection",
        "longname": "ApiDocument#GetFinalSection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5800,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetFinalSection.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a new document section which ends at the specified paragraph. Allows to set local parameters to the current\n\t * section - page size, footer, header, columns, etc.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiParagraph} oParagraph - The paragraph after which a new document section will be inserted.\n\t * Paragraph must be in a document.\n\t * @returns {ApiSection | null} Returns null if parametr is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/CreateSection.js\n\t */",
        "description": "Creates a new document section which ends at the specified paragraph. Allows to set local parameters to the current\nsection - page size, footer, header, columns, etc.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                },
                "name": "oParagraph",
                "description": "The paragraph after which a new document section will be inserted.\nParagraph must be in a document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiSection",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiSection"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "CreateSection",
        "longname": "ApiDocument#CreateSection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5814,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/CreateSection.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether sections in this document will have different headers and footers for even and\n\t * odd pages (one header/footer for odd pages and another header/footer for even pages).\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isEvenAndOdd - If true the header/footer will be different for odd and even pages, if false they will be the same.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/SetEvenAndOddHdrFtr.js\n\t */",
        "description": "Specifies whether sections in this document will have different headers and footers for even and\nodd pages (one header/footer for odd pages and another header/footer for even pages).",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isEvenAndOdd",
                "description": "If true the header/footer will be different for odd and even pages, if false they will be the same.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetEvenAndOddHdrFtr",
        "longname": "ApiDocument#SetEvenAndOddHdrFtr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5847,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/SetEvenAndOddHdrFtr.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates an abstract multilevel numbering with a specified type.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"bullet\" | \"numbered\")} [sType=\"bullet\"] - The type of the numbering which will be created.\n\t * @returns {ApiNumbering}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/CreateNumbering.js\n\t */",
        "description": "Creates an abstract multilevel numbering with a specified type.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "\"bullet\"",
                        "\"numbered\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"bullet\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"numbered\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The type of the numbering which will be created.",
                "optional": true,
                "defaultvalue": "\"bullet\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiNumbering"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiNumbering"
                    }
                }
            }
        ],
        "name": "CreateNumbering",
        "longname": "ApiDocument#CreateNumbering",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5859,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/CreateNumbering.js"
        ]
    },
    {
        "comment": "/**\n\t * Inserts an array of elements into the current position of the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {DocumentElement[]} arrContent - An array of elements to insert.\n\t * @param {boolean} [isInline=false] - Inline insert or not (works only for the last and the first element and only if it's a paragraph).\n\t * @param {object} [oPr=undefined] - Specifies that text and paragraph document properties are preserved for the inserted elements. \n\t * The object should look like this: {\"KeepTextOnly\": true}. \n\t * @returns {boolean} Success?\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/InsertContent.js\n\t */",
        "description": "Inserts an array of elements into the current position of the document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<DocumentElement>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "DocumentElement",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "arrContent",
                "description": "An array of elements to insert.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isInline",
                "description": "Inline insert or not (works only for the last and the first element and only if it's a paragraph).",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "object"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "object"
                    }
                },
                "name": "oPr",
                "description": "Specifies that text and paragraph document properties are preserved for the inserted elements. \nThe object should look like this: {\"KeepTextOnly\": true}.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "InsertContent",
        "longname": "ApiDocument#InsertContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5883,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/InsertContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Record of one comment.\n\t * @typedef {Object} CommentReportRecord\n\t * @property {boolean} [IsAnswer=false] - Specifies whether this is an initial comment or a reply to another comment.\n\t * @property {string} CommentMessage - The text of the current comment.\n\t * @property {number} Date - The time when this change was made in local time.\n\t * @property {number} DateUTC - The time when this change was made in UTC.\n\t * @property {string} [QuoteText=undefined] - The text to which this comment is related.\n\t * @see office-js-api/Examples/Enumerations/CommentReportRecord.js\n\t */",
        "description": "Record of one comment.",
        "name": "CommentReportRecord",
        "longname": "CommentReportRecord",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 5952,
            "columnno": 1
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "IsAnswer",
                "description": "Specifies whether this is an initial comment or a reply to another comment.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "CommentMessage",
                "description": "The text of the current comment.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "Date",
                "description": "The time when this change was made in local time.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "DateUTC",
                "description": "The time when this change was made in UTC.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "QuoteText",
                "description": "The text to which this comment is related.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "see": [
            "office-js-api/Examples/Enumerations/CommentReportRecord.js"
        ],
        "type": {
            "names": [
                "Object"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "Object"
            }
        }
    },
    {
        "comment": "/**\n\t * Report on all comments.\n\t * This is a dictionary where the keys are usernames.\n\t * @typedef {Object.<string, Array.<CommentReportRecord>>} CommentReport\n\t * @example\n\t *  {\n\t *    \"John Smith\" : [{IsAnswer: false, CommentMessage: 'Good text', Date: 1688588002698, DateUTC: 1688570002698, QuoteText: 'Some text'},\n\t *      {IsAnswer: true, CommentMessage: \"I don't think so\", Date: 1688588012661, DateUTC: 1688570012661}],\n\t *\n\t *    \"Mark Pottato\" : [{IsAnswer: false, CommentMessage: 'Need to change this part', Date: 1688587967245, DateUTC: 1688569967245, QuoteText: 'The quick brown fox jumps over the lazy dog'},\n\t *      {IsAnswer: false, CommentMessage: 'We need to add a link', Date: 1688587967245, DateUTC: 1688569967245, QuoteText: 'OnlyOffice'}]\n\t *  }\n\t * @see office-js-api/Examples/Enumerations/CommentReport.js\n\t */",
        "description": "Report on all comments.\nThis is a dictionary where the keys are usernames.",
        "name": "CommentReport",
        "longname": "CommentReport",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 5963,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/CommentReport.js"
        ],
        "type": {
            "names": [
                "Object.<string, Array.<CommentReportRecord>>"
            ],
            "parsedType": {
                "type": "TypeApplication",
                "expression": {
                    "type": "NameExpression",
                    "name": "Object"
                },
                "applications": [
                    {
                        "type": "NameExpression",
                        "name": "string"
                    },
                    {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "type": "NameExpression",
                                "name": "CommentReportRecord"
                            }
                        ]
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Returns a report about all the comments added to the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {CommentReport}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetCommentsReport.js\n\t */",
        "description": "Returns a report about all the comments added to the document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "CommentReport"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "CommentReport"
                    }
                }
            }
        ],
        "name": "GetCommentsReport",
        "longname": "ApiDocument#GetCommentsReport",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5986,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetCommentsReport.js"
        ]
    },
    {
        "comment": "/**\n\t * Review record type.\n\t * @typedef {(\"TextAdd\" | \"TextRem\" | \"ParaAdd\" | \"ParaRem\" | \"TextPr\" | \"ParaPr\" | \"Unknown\")} ReviewReportRecordType\n\t * @see office-js-api/Examples/Enumerations/ReviewReportRecordType.js\n\t */",
        "description": "Review record type.",
        "name": "ReviewReportRecordType",
        "longname": "ReviewReportRecordType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 6030,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ReviewReportRecordType.js"
        ],
        "type": {
            "names": [
                "\"TextAdd\"",
                "\"TextRem\"",
                "\"ParaAdd\"",
                "\"ParaRem\"",
                "\"TextPr\"",
                "\"ParaPr\"",
                "\"Unknown\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"TextAdd\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"TextRem\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ParaAdd\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ParaRem\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"TextPr\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"ParaPr\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"Unknown\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Record of one review change.\n\t * @typedef {Object} ReviewReportRecord\n\t * @property {ReviewReportRecordType} Type - Review record type.\n\t * @property {string} [Value=undefined] - Review change value that is set for the \"TextAdd\" and \"TextRem\" types only.\n\t * @property {number} Date - The time when this change was made.\n\t * @property {ApiParagraph | ApiTable} ReviewedElement - Element that has been reviewed\n\t * @see office-js-api/Examples/Enumerations/ReviewReportRecord.js\n\t */",
        "description": "Record of one review change.",
        "name": "ReviewReportRecord",
        "longname": "ReviewReportRecord",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 6036,
            "columnno": 1
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "ReviewReportRecordType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ReviewReportRecordType"
                    }
                },
                "name": "Type",
                "description": "Review record type.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "Value",
                "description": "Review change value that is set for the \"TextAdd\" and \"TextRem\" types only.",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "Date",
                "description": "The time when this change was made.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "ApiTable"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            }
                        ]
                    }
                },
                "name": "ReviewedElement",
                "description": "Element that has been reviewed",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "see": [
            "office-js-api/Examples/Enumerations/ReviewReportRecord.js"
        ],
        "type": {
            "names": [
                "Object"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "Object"
            }
        }
    },
    {
        "comment": "/**\n\t * Report on all review changes.\n\t * This is a dictionary where the keys are usernames.\n\t * @typedef {Object.<string, Array.<ReviewReportRecord>>} ReviewReport\n\t * @example\n\t * \t{\n\t * \t  \"John Smith\" : [{Type: 'TextRem', Value: 'Hello, Mark!', Date: 1679941734161, Element: ApiParagraph},\n\t * \t                {Type: 'TextAdd', Value: 'Dear Mr. Pottato.', Date: 1679941736189, Element: ApiParagraph}],\n\t * \t  \"Mark Pottato\" : [{Type: 'ParaRem', Date: 1679941755942, ReviewedElement: ApiParagraph},\n\t * \t                  {Type: 'TextPr', Date: 1679941757832, ReviewedElement: ApiParagraph}]\n\t * \t}\n\t * @see office-js-api/Examples/Enumerations/ReviewReport.js\n\t */",
        "description": "Report on all review changes.\nThis is a dictionary where the keys are usernames.",
        "name": "ReviewReport",
        "longname": "ReviewReport",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 6046,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/ReviewReport.js"
        ],
        "type": {
            "names": [
                "Object.<string, Array.<ReviewReportRecord>>"
            ],
            "parsedType": {
                "type": "TypeApplication",
                "expression": {
                    "type": "NameExpression",
                    "name": "Object"
                },
                "applications": [
                    {
                        "type": "NameExpression",
                        "name": "string"
                    },
                    {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "type": "NameExpression",
                                "name": "ReviewReportRecord"
                            }
                        ]
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Returns a report about every change which was made to the document in the review mode.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ReviewReport}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetReviewReport.js\n\t */",
        "description": "Returns a report about every change which was made to the document in the review mode.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ReviewReport"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ReviewReport"
                    }
                }
            }
        ],
        "name": "GetReviewReport",
        "longname": "ApiDocument#GetReviewReport",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetReviewReport.js"
        ]
    },
    {
        "comment": "/**\n\t * Finds and replaces the text.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Object} oProperties - The properties to find and replace.\n\t * @param {string} oProperties.searchString - Search string.\n\t * @param {string} oProperties.replaceString - Replacement string.\n\t * @param {string} [oProperties.matchCase=true] - Case sensitive or not.\n\t *\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/SearchAndReplace.js\n\t */",
        "description": "Finds and replaces the text.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Object"
                    }
                },
                "name": "oProperties",
                "description": "The properties to find and replace.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oProperties.searchString",
                "description": "Search string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oProperties.replaceString",
                "description": "Replacement string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oProperties.matchCase",
                "description": "Case sensitive or not.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "SearchAndReplace",
        "longname": "ApiDocument#SearchAndReplace",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6164,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/SearchAndReplace.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a list of all the content controls from the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiBlockLvlSdt[] | ApiInlineLvlSdt[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllContentControls.js\n\t */",
        "description": "Returns a list of all the content controls from the document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiBlockLvlSdt>",
                        "Array.<ApiInlineLvlSdt>"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiBlockLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiInlineLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllContentControls",
        "longname": "ApiDocument#GetAllContentControls",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6195,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllContentControls.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a list of all tags that are used for all content controls in the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {String[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetTagsOfAllContentControls.js\n\t */",
        "description": "Returns a list of all tags that are used for all content controls in the document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<String>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "String",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetTagsOfAllContentControls",
        "longname": "ApiDocument#GetTagsOfAllContentControls",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6215,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetTagsOfAllContentControls.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a list of all tags that are used for all forms in the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {String[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetTagsOfAllForms.js\n\t */",
        "description": "Returns a list of all tags that are used for all forms in the document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<String>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "String",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetTagsOfAllForms",
        "longname": "ApiDocument#GetTagsOfAllForms",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6241,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetTagsOfAllForms.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a list of all content controls in the document with the specified tag name.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param sTag {string} - Content control tag.\n\t * @returns {ApiBlockLvlSdt[] | ApiInlineLvlSdt[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetContentControlsByTag.js\n\t */",
        "description": "Returns a list of all content controls in the document with the specified tag name.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTag",
                "description": "Content control tag.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiBlockLvlSdt>",
                        "Array.<ApiInlineLvlSdt>"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiBlockLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiInlineLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetContentControlsByTag",
        "longname": "ApiDocument#GetContentControlsByTag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6268,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetContentControlsByTag.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a list of all forms in the document with the specified tag name.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param sTag {string} - Form tag.\n\t * @returns {ApiBlockLvlSdt[] | ApiInlineLvlSdt[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetFormsByTag.js\n\t */",
        "description": "Returns a list of all forms in the document with the specified tag name.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTag",
                "description": "Form tag.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiBlockLvlSdt>",
                        "Array.<ApiInlineLvlSdt>"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiBlockLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiInlineLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetFormsByTag",
        "longname": "ApiDocument#GetFormsByTag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6294,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetFormsByTag.js"
        ]
    },
    {
        "comment": "/**\n\t * The specific form type.\n\t * @typedef {(\"text\" | \"checkBox\" | \"picture\" | \"comboBox\" | \"dropDownList\" | \"dateTime\" | \"radio\")} FormSpecificType\n\t * @see office-js-api/Examples/Enumerations/FormSpecificType.js\n\t */",
        "description": "The specific form type.",
        "name": "FormSpecificType",
        "longname": "FormSpecificType",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 6312,
            "columnno": 1
        },
        "properties": null,
        "see": [
            "office-js-api/Examples/Enumerations/FormSpecificType.js"
        ],
        "type": {
            "names": [
                "\"text\"",
                "\"checkBox\"",
                "\"picture\"",
                "\"comboBox\"",
                "\"dropDownList\"",
                "\"dateTime\"",
                "\"radio\""
            ],
            "parsedType": {
                "type": "TypeUnion",
                "elements": [
                    {
                        "type": "NameExpression",
                        "name": "\"text\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"checkBox\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"picture\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"comboBox\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dropDownList\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"dateTime\""
                    },
                    {
                        "type": "NameExpression",
                        "name": "\"radio\""
                    }
                ]
            }
        }
    },
    {
        "comment": "/**\n\t * Form data.\n\t * @typedef {Object} FormData\n\t * @property {string} key - The form key. If the current form is a radio button, then this field contains the group key.\n\t * @property {string | boolean} value - The current field value.\n\t * @property {string} tag - The form tag.\n\t * @property {FormSpecificType} type - The form type.\n\t * @example\n\t * \t{\n\t * \t  \"key\" : \"CompanyName\",\n\t * \t  \"tag\" : \"companyName\",\n\t * \t  \"value\" : \"ONLYOFFICE\",\n\t * \t  \"type\" : \"text\"\n\t * \t}\n\t * @see office-js-api/Examples/Enumerations/FormData.js\n\t */",
        "description": "Form data.",
        "name": "FormData",
        "longname": "FormData",
        "kind": "typedef",
        "scope": "global",
        "meta": {
            "lineno": 6317,
            "columnno": 1
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "key",
                "description": "The form key. If the current form is a radio button, then this field contains the group key.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string",
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "string"
                            },
                            {
                                "type": "NameExpression",
                                "name": "boolean"
                            }
                        ]
                    }
                },
                "name": "value",
                "description": "The current field value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "tag",
                "description": "The form tag.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "FormSpecificType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "FormSpecificType"
                    }
                },
                "name": "type",
                "description": "The form type.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "see": [
            "office-js-api/Examples/Enumerations/FormData.js"
        ],
        "type": {
            "names": [
                "Object"
            ],
            "parsedType": {
                "type": "NameExpression",
                "name": "Object"
            }
        }
    },
    {
        "comment": "/**\n\t * Returns the data from all forms present in the current document.\n\t * If a form was created and not assigned to any part of the document, it won't appear in this list.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {Array.<FormData>}\n\t * @since 8.0.0\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetFormsData.js\n\t */",
        "description": "Returns the data from all forms present in the current document.\nIf a form was created and not assigned to any part of the document, it won't appear in this list.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<FormData>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "type": "NameExpression",
                                "name": "FormData"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetFormsData",
        "longname": "ApiDocument#GetFormsData",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6342,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetFormsData.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the data to the specified forms.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Array.<FormData>} arrData - An array of form data to set to the specified forms.\n\t * @since 8.0.0\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/SetFormsData.js\n\t */",
        "description": "Sets the data to the specified forms.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<FormData>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "type": "NameExpression",
                                "name": "FormData"
                            }
                        ]
                    }
                },
                "name": "arrData",
                "description": "An array of form data to set to the specified forms.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetFormsData",
        "longname": "ApiDocument#SetFormsData",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6354,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/SetFormsData.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the change tracking mode.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param isTrack {boolean} - Specifies if the change tracking mode is set or not.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/SetTrackRevisions.js\n\t */",
        "description": "Sets the change tracking mode.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isTrack",
                "description": "Specifies if the change tracking mode is set or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTrackRevisions",
        "longname": "ApiDocument#SetTrackRevisions",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6368,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/SetTrackRevisions.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if change tracking mode is enabled or not.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/IsTrackRevisions.js\n\t */",
        "description": "Checks if change tracking mode is enabled or not.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsTrackRevisions",
        "longname": "ApiDocument#IsTrackRevisions",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6379,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/IsTrackRevisions.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the specified document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the specified document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiDocument#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6392,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a range object by the current selection.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiRange | null} - returns null if selection doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetRangeBySelect.js\n\t */",
        "description": "Returns a range object by the current selection.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetRangeBySelect",
        "longname": "ApiDocument#GetRangeBySelect",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6403,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetRangeBySelect.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the last document element. \n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?DocumentElement}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/Last.js\n\t */",
        "description": "Returns the last document element.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "Last",
        "longname": "ApiDocument#Last",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6439,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/Last.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a bookmark from the document, if one exists.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sName - The bookmark name.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/DeleteBookmark.js\n\t */",
        "description": "Removes a bookmark from the document, if one exists.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sName",
                "description": "The bookmark name.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "DeleteBookmark",
        "longname": "ApiDocument#DeleteBookmark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6452,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/DeleteBookmark.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {ApiComment?} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to the document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "ApiDocument#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6471,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a bookmark range.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sName - The bookmark name.\n\t * @return {ApiRange | null} - returns null if sName is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetBookmarkRange.js\n\t */",
        "description": "Returns a bookmark range.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sName",
                "description": "The bookmark name.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiRange"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetBookmarkRange",
        "longname": "ApiDocument#GetBookmarkRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6495,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetBookmarkRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of section objects in the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiSection[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetSections.js\n\t */",
        "description": "Returns a collection of section objects in the document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiSection>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiSection",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetSections",
        "longname": "ApiDocument#GetSections",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6522,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetSections.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of tables on a given absolute page.\n\t * <note>This method can be a little bit slow, because it runs the document calculation\n\t * process to arrange tables on the specified page.</note>\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nPage - The page number.\n\t * @return {ApiTable[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllTablesOnPage.js\n\t */",
        "description": "Returns a collection of tables on a given absolute page.\n<note>This method can be a little bit slow, because it runs the document calculation\nprocess to arrange tables on the specified page.</note>",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPage",
                "description": "The page number.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiTable>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiTable",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllTablesOnPage",
        "longname": "ApiDocument#GetAllTablesOnPage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6541,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllTablesOnPage.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a shape to the specified page.\n\t * <note>This method can be a little bit slow, because it runs the document calculation\n\t * process to arrange tables on the specified page.</note>\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param oDrawing {ApiDrawing} - A shape to add to the page.\n\t * @param nPage {number} - The page number.\n\t * @param x {EMU} - The X coordinate in English measure units.\n\t * @param y {EMU} - The Y coordinate in English measure units.\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/AddDrawingToPage.js\n\t */",
        "description": "Adds a shape to the specified page.\n<note>This method can be a little bit slow, because it runs the document calculation\nprocess to arrange tables on the specified page.</note>",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                },
                "name": "oDrawing",
                "description": "A shape to add to the page.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPage",
                "description": "The page number.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "x",
                "description": "The X coordinate in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "y",
                "description": "The Y coordinate in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddDrawingToPage",
        "longname": "ApiDocument#AddDrawingToPage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6568,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/AddDrawingToPage.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes the current selection.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/RemoveSelection.js\n\t */",
        "description": "Removes the current selection.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": null,
        "name": "RemoveSelection",
        "longname": "ApiDocument#RemoveSelection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6599,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/RemoveSelection.js"
        ]
    },
    {
        "comment": "/**\n\t * Searches for a scope of a document object. The search results are a collection of ApiRange objects.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - Search string.\n\t * @param {boolean} isMatchCase - Case sensitive or not.\n\t * @return {ApiRange[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/Search.js\n\t */",
        "description": "Searches for a scope of a document object. The search results are a collection of ApiRange objects.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "Search string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isMatchCase",
                "description": "Case sensitive or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiRange>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiRange",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Search",
        "longname": "ApiDocument#Search",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6612,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/Search.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts a document to Markdown.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} [bHtmlHeadings=false] - Defines if the HTML headings and IDs will be generated when the Markdown renderer of your target platform does not handle Markdown-style IDs.\n\t * @param {boolean} [bBase64img=false] - Defines if the images will be created in the base64 format.\n\t * @param {boolean} [bDemoteHeadings=false] - Defines if all heading levels in your document will be demoted to conform with the following standard: single H1 as title, H2 as top-level heading in the text body.\n\t * @param {boolean} [bRenderHTMLTags=false] - Defines if HTML tags will be preserved in your Markdown. If you just want to use an occasional HTML tag, you can avoid using the opening angle bracket\n\t * in the following way: \\<tag&gt;text\\</tag&gt;. By default, the opening angle brackets will be replaced with the special characters.\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/ToMarkdown.js\n\t */",
        "description": "Converts a document to Markdown.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bHtmlHeadings",
                "description": "Defines if the HTML headings and IDs will be generated when the Markdown renderer of your target platform does not handle Markdown-style IDs.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bBase64img",
                "description": "Defines if the images will be created in the base64 format.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bDemoteHeadings",
                "description": "Defines if all heading levels in your document will be demoted to conform with the following standard: single H1 as title, H2 as top-level heading in the text body.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bRenderHTMLTags",
                "description": "Defines if HTML tags will be preserved in your Markdown. If you just want to use an occasional HTML tag, you can avoid using the opening angle bracket\nin the following way: \\<tag&gt;text\\</tag&gt;. By default, the opening angle brackets will be replaced with the special characters.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "ToMarkdown",
        "longname": "ApiDocument#ToMarkdown",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6645,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/ToMarkdown.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts a document to HTML.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} [bHtmlHeadings=false] - Defines if the HTML headings and IDs will be generated when the Markdown renderer of your target platform does not handle Markdown-style IDs.\n\t * @param {boolean} [bBase64img=false] - Defines if the images will be created in the base64 format.\n\t * @param {boolean} [bDemoteHeadings=false] - Defines if all heading levels in your document will be demoted to conform with the following standard: single H1 as title, H2 as top-level heading in the text body.\n\t * @param {boolean} [bRenderHTMLTags=false] - Defines if HTML tags will be preserved in your Markdown. If you just want to use an occasional HTML tag, you can avoid using the opening angle bracket\n\t * in the following way: \\<tag&gt;text\\</tag&gt;. By default, the opening angle brackets will be replaced with the special characters.\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/ToHtml.js\n\t */",
        "description": "Converts a document to HTML.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bHtmlHeadings",
                "description": "Defines if the HTML headings and IDs will be generated when the Markdown renderer of your target platform does not handle Markdown-style IDs.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bBase64img",
                "description": "Defines if the images will be created in the base64 format.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bDemoteHeadings",
                "description": "Defines if all heading levels in your document will be demoted to conform with the following standard: single H1 as title, H2 as top-level heading in the text body.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bRenderHTMLTags",
                "description": "Defines if HTML tags will be preserved in your Markdown. If you just want to use an occasional HTML tag, you can avoid using the opening angle bracket\nin the following way: \\<tag&gt;text\\</tag&gt;. By default, the opening angle brackets will be replaced with the special characters.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "ToHtml",
        "longname": "ApiDocument#ToHtml",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6670,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/ToHtml.js"
        ]
    },
    {
        "comment": "/**\n\t * Inserts a watermark on each document page.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?string} [sText=\"WATERMARK\"] - Watermark text.\n\t * @param {?boolean} [bIsDiagonal=false] - Specifies if the watermark is placed diagonally (true) or horizontally (false).\n\t * @returns {?ApiDrawing} - The object which represents the inserted watermark. Returns null if the watermark type is \"none\".\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/InsertWatermark.js\n\t */",
        "description": "Inserts a watermark on each document page.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string",
                        "nullable": true
                    }
                },
                "name": "sText",
                "description": "Watermark text.",
                "optional": true,
                "defaultvalue": "\"WATERMARK\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                },
                "name": "bIsDiagonal",
                "description": "Specifies if the watermark is placed diagonally (true) or horizontally (false).",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "InsertWatermark",
        "longname": "ApiDocument#InsertWatermark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6693,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/InsertWatermark.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the watermark settings in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiWatermarkSettings} - The object which represents the watermark settings.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetWatermarkSettings.js\n\t */",
        "description": "Returns the watermark settings in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiWatermarkSettings"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiWatermarkSettings"
                    }
                }
            }
        ],
        "name": "GetWatermarkSettings",
        "longname": "ApiDocument#GetWatermarkSettings",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6741,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetWatermarkSettings.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the watermark settings in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiWatermarkSettings} Settings - The object which represents the watermark settings.\n\t * @returns {?ApiDrawing} - The object which represents the watermark drawing if the watermark type in Settings is not \"none\".\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/SetWatermarkSettings.js\n\t */",
        "description": "Sets the watermark settings in the current document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiWatermarkSettings"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiWatermarkSettings"
                    }
                },
                "name": "Settings",
                "description": "The object which represents the watermark settings.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "SetWatermarkSettings",
        "longname": "ApiDocument#SetWatermarkSettings",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6755,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/SetWatermarkSettings.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a watermark from the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/RemoveWatermark.js\n\t */",
        "description": "Removes a watermark from the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": null,
        "name": "RemoveWatermark",
        "longname": "ApiDocument#RemoveWatermark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6780,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/RemoveWatermark.js"
        ]
    },
    {
        "comment": "/**\n\t * Updates all tables of contents in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} [bOnlyPageNumbers=false] - Specifies that only page numbers will be updated.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/UpdateAllTOC.js\n\t */",
        "description": "Updates all tables of contents in the current document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bOnlyPageNumbers",
                "description": "Specifies that only page numbers will be updated.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "UpdateAllTOC",
        "longname": "ApiDocument#UpdateAllTOC",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6794,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/UpdateAllTOC.js"
        ]
    },
    {
        "comment": "/**\n\t * Updates all tables of figures in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} [bOnlyPageNumbers=false] - Specifies that only page numbers will be updated.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/UpdateAllTOF.js\n\t */",
        "description": "Updates all tables of figures in the current document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bOnlyPageNumbers",
                "description": "Specifies that only page numbers will be updated.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "UpdateAllTOF",
        "longname": "ApiDocument#UpdateAllTOF",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6852,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/UpdateAllTOF.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiDocument object into the JSON object.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteDefaultTextPr - Specifies if the default text properties will be written to the JSON object or not.\n\t * @param {boolean} bWriteDefaultParaPr - Specifies if the default paragraph properties will be written to the JSON object or not.\n\t * @param {boolean} bWriteTheme - Specifies if the document theme will be written to the JSON object or not.\n\t * @param {boolean} bWriteSectionPr - Specifies if the document section properties will be written to the JSON object or not.\n\t * @param {boolean} bWriteNumberings - Specifies if the document numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the document styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiDocument object into the JSON object.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteDefaultTextPr",
                "description": "Specifies if the default text properties will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteDefaultParaPr",
                "description": "Specifies if the default paragraph properties will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteTheme",
                "description": "Specifies if the document theme will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteSectionPr",
                "description": "Specifies if the document section properties will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the document numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the document styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiDocument#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6915,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all existing forms in the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiForm[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllForms.js\n\t */",
        "description": "Returns all existing forms in the document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiForm>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiForm",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllForms",
        "longname": "ApiDocument#GetAllForms",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6939,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllForms.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears all forms in the document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/ClearAllFields.js\n\t */",
        "description": "Clears all forms in the document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": null,
        "name": "ClearAllFields",
        "longname": "ApiDocument#ClearAllFields",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6960,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/ClearAllFields.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the highlight to the forms in the document.\n\t * @memberof ApiDocument\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [bNone=false] - Defines that highlight will not be set.\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/SetFormsHighlight.js\n\t */",
        "description": "Sets the highlight to the forms in the document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that highlight will not be set.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetFormsHighlight",
        "longname": "ApiDocument#SetFormsHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6975,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/SetFormsHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all comments from the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiComment[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllComments.js\n\t */",
        "description": "Returns all comments from the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiComment>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiComment",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllComments",
        "longname": "ApiDocument#GetAllComments",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 6990,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllComments.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a comment from the current document by its ID.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sId - The comment ID.\n\t * @returns {?ApiComment}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetCommentById.js\n\t */",
        "description": "Returns a comment from the current document by its ID.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sId",
                "description": "The comment ID.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetCommentById",
        "longname": "ApiDocument#GetCommentById",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7010,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetCommentById.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all numbered paragraphs from the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllNumberedParagraphs.js\n\t */",
        "description": "Returns all numbered paragraphs from the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllNumberedParagraphs",
        "longname": "ApiDocument#GetAllNumberedParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7027,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllNumberedParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all heading paragraphs from the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllHeadingParagraphs.js\n\t */",
        "description": "Returns all heading paragraphs from the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllHeadingParagraphs",
        "longname": "ApiDocument#GetAllHeadingParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7044,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllHeadingParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the first paragraphs from all footnotes in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetFootnotesFirstParagraphs.js\n\t */",
        "description": "Returns the first paragraphs from all footnotes in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetFootnotesFirstParagraphs",
        "longname": "ApiDocument#GetFootnotesFirstParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7061,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetFootnotesFirstParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the first paragraphs from all endnotes in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetEndNotesFirstParagraphs.js\n\t */",
        "description": "Returns the first paragraphs from all endnotes in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetEndNotesFirstParagraphs",
        "longname": "ApiDocument#GetEndNotesFirstParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7078,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetEndNotesFirstParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all caption paragraphs of the specified type from the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {CaptionLabel | string} sCaption - The caption label (\"Equation\", \"Figure\", \"Table\", or another caption label).\n\t * @returns {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllCaptionParagraphs.js\n\t */",
        "description": "Returns all caption paragraphs of the specified type from the current document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "CaptionLabel",
                        "string"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "CaptionLabel"
                            },
                            {
                                "type": "NameExpression",
                                "name": "string"
                            }
                        ]
                    }
                },
                "name": "sCaption",
                "description": "The caption label (\"Equation\", \"Figure\", \"Table\", or another caption label).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllCaptionParagraphs",
        "longname": "ApiDocument#GetAllCaptionParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7096,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllCaptionParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Accepts all changes made in review mode.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/AcceptAllRevisionChanges.js\n\t */",
        "description": "Accepts all changes made in review mode.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": null,
        "name": "AcceptAllRevisionChanges",
        "longname": "ApiDocument#AcceptAllRevisionChanges",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7115,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/AcceptAllRevisionChanges.js"
        ]
    },
    {
        "comment": "/**\n\t * Rejects all changes made in review mode.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/RejectAllRevisionChanges.js\n\t */",
        "description": "Rejects all changes made in review mode.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": null,
        "name": "RejectAllRevisionChanges",
        "longname": "ApiDocument#RejectAllRevisionChanges",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7126,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/RejectAllRevisionChanges.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an array with names of all bookmarks in the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllBookmarksNames.js\n\t */",
        "description": "Returns an array with names of all bookmarks in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "string",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllBookmarksNames",
        "longname": "ApiDocument#GetAllBookmarksNames",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllBookmarksNames.js"
        ]
    },
    {
        "comment": "/**\n     * Returns all the selected drawings in the current document.\n     * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n     * @returns {ApiShape[] | ApiImage[] | ApiChart[] | ApiDrawing[]}\n     * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetSelectedDrawings.js\n\t */",
        "description": "Returns all the selected drawings in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiShape>",
                        "Array.<ApiImage>",
                        "Array.<ApiChart>",
                        "Array.<ApiDrawing>"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiShape",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiImage",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiChart",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiDrawing",
                                        "type": "NameExpression"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetSelectedDrawings",
        "longname": "ApiDocument#GetSelectedDrawings",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7161,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetSelectedDrawings.js"
        ]
    },
    {
        "comment": "/**\n\t * Replaces the current image with an image specified.\n\t * @typeofeditors [\"CDE\"]\n\t * @memberof ApiDocument\n\t * @param {string} sImageUrl - The image source where the image to be inserted should be taken from (currently, only internet URL or Base64 encoded images are supported).\n\t * @param {EMU} Width - The image width in English measure units.\n\t * @param {EMU} Height - The image height in English measure units.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/ReplaceCurrentImage.js\n\t */",
        "description": "Replaces the current image with an image specified.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sImageUrl",
                "description": "The image source where the image to be inserted should be taken from (currently, only internet URL or Base64 encoded images are supported).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "Width",
                "description": "The image width in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "Height",
                "description": "The image height in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "ReplaceCurrentImage",
        "longname": "ApiDocument#ReplaceCurrentImage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7202,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/ReplaceCurrentImage.js"
        ]
    },
    {
        "comment": "/**\n\t * Replaces a drawing with a new drawing.\n\t * @memberof ApiDocument\n\t * @param {ApiDrawing} oOldDrawing - A drawing which will be replaced.\n\t * @param {ApiDrawing} oNewDrawing - A drawing to replace the old drawing.\n\t * @param {boolean} [bSaveOldDrawingPr=false] - Specifies if the old drawing settings will be saved.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/ReplaceDrawing.js\n\t */",
        "description": "Replaces a drawing with a new drawing.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                },
                "name": "oOldDrawing",
                "description": "A drawing which will be replaced.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                },
                "name": "oNewDrawing",
                "description": "A drawing to replace the old drawing.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bSaveOldDrawingPr",
                "description": "Specifies if the old drawing settings will be saved.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ReplaceDrawing",
        "longname": "ApiDocument#ReplaceDrawing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7221,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/ReplaceDrawing.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a footnote for the selected text (or the current position if the selection doesn't exist).\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/AddFootnote.js\n\t */",
        "description": "Adds a footnote for the selected text (or the current position if the selection doesn't exist).",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddFootnote",
        "longname": "ApiDocument#AddFootnote",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7266,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/AddFootnote.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds an endnote for the selected text (or the current position if the selection doesn't exist).\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/AddEndnote.js\n\t */",
        "description": "Adds an endnote for the selected text (or the current position if the selection doesn't exist).",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddEndnote",
        "longname": "ApiDocument#AddEndnote",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7282,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/AddEndnote.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the highlight to the content controls from the current document.\n\t * @memberof ApiDocument\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [bNone=false] - Defines that highlight will not be set.\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/SetControlsHighlight.js\n\t */",
        "description": "Sets the highlight to the content controls from the current document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that highlight will not be set.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetControlsHighlight",
        "longname": "ApiDocument#SetControlsHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7301,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/SetControlsHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a table of content to the current document.\n\t * <note>Please note that the new table of contents replaces the existing table of contents.</note>\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {TocPr} [oTocPr={}] - Table of contents properties.\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/AddTableOfContents.js\n\t */",
        "description": "Adds a table of content to the current document.\n<note>Please note that the new table of contents replaces the existing table of contents.</note>",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "TocPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TocPr"
                    }
                },
                "name": "oTocPr",
                "description": "Table of contents properties.",
                "optional": true,
                "defaultvalue": "{}"
            }
        ],
        "returns": null,
        "name": "AddTableOfContents",
        "longname": "ApiDocument#AddTableOfContents",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7320,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/AddTableOfContents.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a table of figures to the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @param {TofPr} [oTofPr={}] - Table of figures properties.\n\t * <note>Please note that the table of figures properties will be filled with the default properties if they are undefined.</note>\n\t * @param {boolean} [bReplace=true] - Specifies whether to replace the selected table of figures instead of adding a new one.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/AddTableOfFigures.js\n\t */",
        "description": "Adds a table of figures to the current document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "TofPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TofPr"
                    }
                },
                "name": "oTofPr",
                "description": "Table of figures properties.\n<note>Please note that the table of figures properties will be filled with the default properties if they are undefined.</note>",
                "optional": true,
                "defaultvalue": "{}"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bReplace",
                "description": "Specifies whether to replace the selected table of figures instead of adding a new one.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddTableOfFigures",
        "longname": "ApiDocument#AddTableOfFigures",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7417,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/AddTableOfFigures.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the document statistics represented as an object with the following parameters:\n\t * <b>PageCount</b> - number of pages;\n\t * <b>WordsCount</b> - number of words;\n\t * <b>ParagraphCount</b> - number of paragraphs;\n\t * <b>SymbolsCount</b> - number of symbols;\n\t * <b>SymbolsWSCount</b> - number of symbols with spaces.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {object}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetStatistics.js\n\t */",
        "description": "Returns the document statistics represented as an object with the following parameters:\n<b>PageCount</b> - number of pages;\n<b>WordsCount</b> - number of words;\n<b>ParagraphCount</b> - number of paragraphs;\n<b>SymbolsCount</b> - number of symbols;\n<b>SymbolsWSCount</b> - number of symbols with spaces.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "object"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "object"
                    }
                }
            }
        ],
        "name": "GetStatistics",
        "longname": "ApiDocument#GetStatistics",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7536,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetStatistics.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of pages in the current document.\n\t * <note>This method can be slow for large documents because it runs the document calculation\n\t * process before the full recalculation.</note>\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @return {number}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetPageCount.js\n\t */",
        "description": "Returns a number of pages in the current document.\n<note>This method can be slow for large documents because it runs the document calculation\nprocess before the full recalculation.</note>",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetPageCount",
        "longname": "ApiDocument#GetPageCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7579,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetPageCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all styles of the current document.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiStyle[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetAllStyles.js\n\t */",
        "description": "Returns all styles of the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiStyle>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiStyle",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllStyles",
        "longname": "ApiDocument#GetAllStyles",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7591,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetAllStyles.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the document information:\n\t * <b>Application</b> - the application the document has been created with.\n\t * <b>CreatedRaw</b> - the date and time when the file was created.\n\t * <b>Created</b> - the parsed date and time when the file was created.\n\t * <b>LastModifiedRaw</b> - the date and time when the file was last modified.\n\t * <b>LastModified</b> - the parsed date and time when the file was last modified.\n\t * <b>LastModifiedBy</b> - the name of the user who has made the latest change to the document.\n\t * <b>Authors</b> - the persons who has created the file.\n\t * <b>Title</b> - this property allows you to simplify your documents classification.\n\t * <b>Tags</b> - this property allows you to simplify your documents classification.\n\t * <b>Subject</b> - this property allows you to simplify your documents classification.\n\t * <b>Comment</b> - this property allows you to simplify your documents classification.\n\t * @memberof ApiDocument\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {object}\n\t * @see office-js-api/Examples/{Editor}/ApiDocument/Methods/GetDocumentInfo.js\n\t */",
        "description": "Returns the document information:\n<b>Application</b> - the application the document has been created with.\n<b>CreatedRaw</b> - the date and time when the file was created.\n<b>Created</b> - the parsed date and time when the file was created.\n<b>LastModifiedRaw</b> - the date and time when the file was last modified.\n<b>LastModified</b> - the parsed date and time when the file was last modified.\n<b>LastModifiedBy</b> - the name of the user who has made the latest change to the document.\n<b>Authors</b> - the persons who has created the file.\n<b>Title</b> - this property allows you to simplify your documents classification.\n<b>Tags</b> - this property allows you to simplify your documents classification.\n<b>Subject</b> - this property allows you to simplify your documents classification.\n<b>Comment</b> - this property allows you to simplify your documents classification.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "object"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "object"
                    }
                }
            }
        ],
        "name": "GetDocumentInfo",
        "longname": "ApiDocument#GetDocumentInfo",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7620,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocument/Methods/GetDocumentInfo.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiParagraph class.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"paragraph\"}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiParagraph class.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"paragraph\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"paragraph\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiParagraph#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7700,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds some text to the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {string} [sText=\"\"] - The text that we want to insert into the current document element.\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddText.js\n\t */",
        "description": "Adds some text to the current paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The text that we want to insert into the current document element.",
                "optional": true,
                "defaultvalue": "\"\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddText",
        "longname": "ApiParagraph#AddText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7712,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddText.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a page break and starts the next element from the next page.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddPageBreak.js\n\t */",
        "description": "Adds a page break and starts the next element from the next page.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddPageBreak",
        "longname": "ApiParagraph#AddPageBreak",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7731,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddPageBreak.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a line break to the current position and starts the next element from a new line.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddLineBreak.js\n\t */",
        "description": "Adds a line break to the current position and starts the next element from a new line.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddLineBreak",
        "longname": "ApiParagraph#AddLineBreak",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7745,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddLineBreak.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a column break to the current position and starts the next element from a new column.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddColumnBreak.js\n\t */",
        "description": "Adds a column break to the current position and starts the next element from a new column.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddColumnBreak",
        "longname": "ApiParagraph#AddColumnBreak",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7760,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddColumnBreak.js"
        ]
    },
    {
        "comment": "/**\n\t * Inserts a number of the current document page into the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddPageNumber.js\n\t */",
        "description": "Inserts a number of the current document page into the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddPageNumber",
        "longname": "ApiParagraph#AddPageNumber",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7774,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddPageNumber.js"
        ]
    },
    {
        "comment": "/**\n\t * Inserts a number of pages in the current document into the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddPagesCount.js\n\t */",
        "description": "Inserts a number of pages in the current document into the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddPagesCount",
        "longname": "ApiParagraph#AddPagesCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7788,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddPagesCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties of the paragraph mark which is used to mark the paragraph end. The mark can also acquire\n\t * common text properties like bold, italic, underline, etc.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetParagraphMarkTextPr.js\n\t */",
        "description": "Returns the text properties of the paragraph mark which is used to mark the paragraph end. The mark can also acquire\ncommon text properties like bold, italic, underline, etc.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetParagraphMarkTextPr",
        "longname": "ApiParagraph#GetParagraphMarkTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7803,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetParagraphMarkTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph properties.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiParaPr}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetParaPr.js\n\t */",
        "description": "Returns the paragraph properties.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParaPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParaPr"
                    }
                }
            }
        ],
        "name": "GetParaPr",
        "longname": "ApiParagraph#GetParaPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7814,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetParaPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the numbering definition and numbering level for the numbered list.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiNumberingLevel}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetNumbering.js\n\t */",
        "description": "Returns the numbering definition and numbering level for the numbered list.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiNumberingLevel"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiNumberingLevel",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetNumbering",
        "longname": "ApiParagraph#GetNumbering",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7825,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetNumbering.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the current paragraph references the numbering definition instance in the current document.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @see Same as {@link ApiParagraph#SetNumPr}\n\t * @param {ApiNumberingLevel} oNumberingLevel - The numbering level which will be used for assigning the numbers to the paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetNumbering.js\n\t */",
        "description": "Specifies that the current paragraph references the numbering definition instance in the current document.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiNumberingLevel"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiNumberingLevel"
                    }
                },
                "name": "oNumberingLevel",
                "description": "The numbering level which will be used for assigning the numbers to the paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetNumbering",
        "longname": "ApiParagraph#SetNumbering",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7847,
            "columnno": 1
        },
        "see": [
            "Same as {@link ApiParagraph#SetNumPr}",
            "office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetNumbering.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of elements in the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetElementsCount.js\n\t */",
        "description": "Returns a number of elements in the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetElementsCount",
        "longname": "ApiParagraph#GetElementsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7861,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetElementsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a paragraph element using the position specified.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {number} nPos - The position where the element which content we want to get must be located.\n\t * @returns {?ParagraphContent}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetElement.js\n\t */",
        "description": "Returns a paragraph element using the position specified.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position where the element which content we want to get must be located.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ParagraphContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ParagraphContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetElement",
        "longname": "ApiParagraph#GetElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7874,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes an element using the position specified.\n\t * <note>If the element you remove is the last paragraph element (i.e. all the elements are removed from the paragraph),\n     * a new empty run is automatically created. If you want to add\n\t * content to this run, use the {@link ApiParagraph#GetElement} method.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {number} nPos - The element position which we want to remove from the paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/RemoveElement.js\n\t */",
        "description": "Removes an element using the position specified.\n<note>If the element you remove is the last paragraph element (i.e. all the elements are removed from the paragraph),\na new empty run is automatically created. If you want to add\ncontent to this run, use the {@link ApiParagraph#GetElement} method.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The element position which we want to remove from the paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "RemoveElement",
        "longname": "ApiParagraph#RemoveElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7892,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/RemoveElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes all the elements from the current paragraph.\n\t * <note>When all the elements are removed from the paragraph, a new empty run is automatically created. If you want to add\n\t * content to this run, use the {@link ApiParagraph#GetElement} method.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/RemoveAllElements.js\n\t */",
        "description": "Removes all the elements from the current paragraph.\n<note>When all the elements are removed from the paragraph, a new empty run is automatically created. If you want to add\ncontent to this run, use the {@link ApiParagraph#GetElement} method.</note>",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": null,
        "name": "RemoveAllElements",
        "longname": "ApiParagraph#RemoveAllElements",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7908,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/RemoveAllElements.js"
        ]
    },
    {
        "comment": "/**\n\t * Deletes the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {boolean} - returns false if paragraph haven't parent.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/Delete.js\n\t */",
        "description": "Deletes the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiParagraph#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7923,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiParagraph | null} - returns null if paragraph is last.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetNext.js\n\t */",
        "description": "Returns the next paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNext",
        "longname": "ApiParagraph#GetNext",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7945,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetNext.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiParagraph} - returns null if paragraph is first.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetPrevious.js\n\t */",
        "description": "Returns the previous paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "GetPrevious",
        "longname": "ApiParagraph#GetPrevious",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7960,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetPrevious.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a paragraph copy. Ingnore comments, footnote references, complex fields.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiParagraph}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/Copy.js\n\t */",
        "description": "Creates a paragraph copy. Ingnore comments, footnote references, complex fields.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiParagraph#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7975,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds an element to the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {ParagraphContent} oElement - The document element which will be added at the current position. Returns false if the\n\t * oElement type is not supported by a paragraph.\n\t * @param {number} [nPos] - The position where the current element will be added. If this value is not\n\t * specified, then the element will be added at the end of the current paragraph.\n\t * @returns {boolean} Returns <code>false</code> if the type of <code>oElement</code> is not supported by paragraph\n\t * content.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddElement.js\n\t */",
        "description": "Adds an element to the current paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ParagraphContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ParagraphContent"
                    }
                },
                "name": "oElement",
                "description": "The document element which will be added at the current position. Returns false if the\noElement type is not supported by a paragraph.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position where the current element will be added. If this value is not\nspecified, then the element will be added at the end of the current paragraph.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddElement",
        "longname": "ApiParagraph#AddElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 7997,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a tab stop to the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddTabStop.js\n\t */",
        "description": "Adds a tab stop to the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddTabStop",
        "longname": "ApiParagraph#AddTabStop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8025,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddTabStop.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a drawing object (image, shape or chart) to the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiDrawing} oDrawing - The object which will be added to the current paragraph.\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddDrawing.js\n\t */",
        "description": "Adds a drawing object (image, shape or chart) to the current paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                },
                "name": "oDrawing",
                "description": "The object which will be added to the current paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "AddDrawing",
        "longname": "ApiParagraph#AddDrawing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8040,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddDrawing.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds an inline container.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiInlineLvlSdt} oSdt - An inline container. If undefined or null, then new class ApiInlineLvlSdt will be created and added to the paragraph.\n\t * @returns {ApiInlineLvlSdt}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddInlineLvlSdt.js\n\t */",
        "description": "Adds an inline container.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiInlineLvlSdt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiInlineLvlSdt"
                    }
                },
                "name": "oSdt",
                "description": "An inline container. If undefined or null, then new class ApiInlineLvlSdt will be created and added to the paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiInlineLvlSdt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiInlineLvlSdt"
                    }
                }
            }
        ],
        "name": "AddInlineLvlSdt",
        "longname": "ApiParagraph#AddInlineLvlSdt",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8066,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddInlineLvlSdt.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to the current paragraph.\n\t * <note>Please note that this paragraph must be in the document.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {ApiComment?} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "ApiParagraph#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8089,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a hyperlink to a paragraph. \n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLink - The link address.\n\t * @param {string} sScreenTipText - The screen tip text.\n\t * @return {ApiHyperlink | null} - returns null if params are invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddHyperlink.js\n\t */",
        "description": "Adds a hyperlink to a paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLink",
                "description": "The link address.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sScreenTipText",
                "description": "The screen tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiHyperlink",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiHyperlink"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "AddHyperlink",
        "longname": "ApiParagraph#AddHyperlink",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8132,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddHyperlink.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the specified paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the specified paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiParagraph#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8167,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds an element to the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ParagraphContent} oElement - The document element which will be added at the current position. Returns false if the\n\t * oElement type is not supported by a paragraph.\n\t * @returns {boolean} Returns <code>false</code> if the type of <code>oElement</code> is not supported by paragraph\n\t * content.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/Push.js\n\t */",
        "description": "Adds an element to the current paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ParagraphContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ParagraphContent"
                    }
                },
                "name": "oElement",
                "description": "The document element which will be added at the current position. Returns false if the\noElement type is not supported by a paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Push",
        "longname": "ApiParagraph#Push",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/Push.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the last Run with text in the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiRun} Returns <code>false</code> if the paragraph doesn't containt the required run.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetLastRunWithText.js\n\t */",
        "description": "Returns the last Run with text in the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "GetLastRunWithText",
        "longname": "ApiParagraph#GetLastRunWithText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8219,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetLastRunWithText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the bold property to the text character.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isBold - Specifies that the contents of this paragraph are displayed bold.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetBold.js\n\t */",
        "description": "Sets the bold property to the text character.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBold",
                "description": "Specifies that the contents of this paragraph are displayed bold.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetBold",
        "longname": "ApiParagraph#SetBold",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8247,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetBold.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that any lowercase characters in this paragraph are formatted for display only as their capital letter character equivalents.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isCaps - Specifies that the contents of the current paragraph are displayed capitalized.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetCaps.js\n\t */",
        "description": "Specifies that any lowercase characters in this paragraph are formatted for display only as their capital letter character equivalents.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isCaps",
                "description": "Specifies that the contents of the current paragraph are displayed capitalized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetCaps",
        "longname": "ApiParagraph#SetCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8263,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text color to the current paragraph in the RGB format.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - If this parameter is set to \"true\", then r,g,b parameters will be ignored.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetColor.js\n\t */",
        "description": "Sets the text color to the current paragraph in the RGB format.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAuto",
                "description": "If this parameter is set to \"true\", then r,g,b parameters will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetColor",
        "longname": "ApiParagraph#SetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8282,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of this paragraph are displayed with two horizontal lines through each character displayed on the line.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isDoubleStrikeout - Specifies that the contents of the current paragraph are displayed double struck through.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetDoubleStrikeout.js\n\t */",
        "description": "Specifies that the contents of this paragraph are displayed with two horizontal lines through each character displayed on the line.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isDoubleStrikeout",
                "description": "Specifies that the contents of the current paragraph are displayed double struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetDoubleStrikeout",
        "longname": "ApiParagraph#SetDoubleStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8321,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetDoubleStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets all 4 font slots with the specified font family.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sFontFamily - The font family or families used for the current paragraph.\n\t * @returns {?ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetFontFamily.js\n\t */",
        "description": "Sets all 4 font slots with the specified font family.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sFontFamily",
                "description": "The font family or families used for the current paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "SetFontFamily",
        "longname": "ApiParagraph#SetFontFamily",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8337,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetFontFamily.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all font names from all elements inside the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string[]} - The font names used for the current paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetFontNames.js\n\t */",
        "description": "Returns all font names from all elements inside the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "string",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetFontNames",
        "longname": "ApiParagraph#GetFontNames",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8371,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetFontNames.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the font size to the characters of the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {hps} nSize - The text size value measured in half-points (1/144 of an inch).\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetFontSize.js\n\t */",
        "description": "Sets the font size to the characters of the current paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "nSize",
                "description": "The text size value measured in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetFontSize",
        "longname": "ApiParagraph#SetFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8396,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a highlighting color which is applied as a background to the contents of the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {highlightColor} sColor - Available highlight color.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetHighlight.js\n\t */",
        "description": "Specifies a highlighting color which is applied as a background to the contents of the current paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "highlightColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "highlightColor"
                    }
                },
                "name": "sColor",
                "description": "Available highlight color.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetHighlight",
        "longname": "ApiParagraph#SetHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8412,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the italic property to the text character.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isItalic - Specifies that the contents of the current paragraph are displayed italicized.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetItalic.js\n\t */",
        "description": "Sets the italic property to the text character.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isItalic",
                "description": "Specifies that the contents of the current paragraph are displayed italicized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetItalic",
        "longname": "ApiParagraph#SetItalic",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8451,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetItalic.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount by which text is raised or lowered for this paragraph in relation to the default\n\t * baseline of the surrounding non-positioned text.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {hps} nPosition - Specifies a positive (raised text) or negative (lowered text)\n\t * measurement in half-points (1/144 of an inch).\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetPosition.js\n\t */",
        "description": "Specifies an amount by which text is raised or lowered for this paragraph in relation to the default\nbaseline of the surrounding non-positioned text.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "nPosition",
                "description": "Specifies a positive (raised text) or negative (lowered text)\nmeasurement in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetPosition",
        "longname": "ApiParagraph#SetPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8469,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that all the small letter characters in this paragraph are formatted for display only as their capital\n\t * letter character equivalents which are two points smaller than the actual font size specified for this text.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isSmallCaps - Specifies if the contents of the current paragraph are displayed capitalized two points smaller or not.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetSmallCaps.js\n\t */",
        "description": "Specifies that all the small letter characters in this paragraph are formatted for display only as their capital\nletter character equivalents which are two points smaller than the actual font size specified for this text.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isSmallCaps",
                "description": "Specifies if the contents of the current paragraph are displayed capitalized two points smaller or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetSmallCaps",
        "longname": "ApiParagraph#SetSmallCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8486,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetSmallCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text spacing measured in twentieths of a point.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nSpacing - The value of the text spacing measured in twentieths of a point (1/1440 of an inch).\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetSpacing.js\n\t */",
        "description": "Sets the text spacing measured in twentieths of a point.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nSpacing",
                "description": "The value of the text spacing measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetSpacing",
        "longname": "ApiParagraph#SetSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8505,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of this paragraph are displayed with a single horizontal line through the center of the line.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isStrikeout - Specifies that the contents of the current paragraph are displayed struck through.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetStrikeout.js\n\t */",
        "description": "Specifies that the contents of this paragraph are displayed with a single horizontal line through the center of the line.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isStrikeout",
                "description": "Specifies that the contents of the current paragraph are displayed struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetStrikeout",
        "longname": "ApiParagraph#SetStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8521,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of this paragraph are displayed along with a line appearing directly below the character\n\t * (less than all the spacing above and below the characters on the line).\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isUnderline - Specifies that the contents of the current paragraph are displayed underlined.\n\t * @returns {ApiParagraph} this\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetUnderline.js\n\t */",
        "description": "Specifies that the contents of this paragraph are displayed along with a line appearing directly below the character\n(less than all the spacing above and below the characters on the line).",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isUnderline",
                "description": "Specifies that the contents of the current paragraph are displayed underlined.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                }
            }
        ],
        "name": "SetUnderline",
        "longname": "ApiParagraph#SetUnderline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8541,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetUnderline.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the alignment which will be applied to the contents of this paragraph in relation to the default appearance of the paragraph text:\n\t * <b>\"baseline\"</b> - the characters in the current paragraph will be aligned by the default text baseline.\n\t * <b>\"subscript\"</b> - the characters in the current paragraph will be aligned below the default text baseline.\n\t * <b>\"superscript\"</b> - the characters in the current paragraph will be aligned above the default text baseline.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"baseline\" | \"subscript\" | \"superscript\")} sType - The vertical alignment type applied to the text contents.\n\t * @returns {ApiParagraph | null} - returns null is sType is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetVertAlign.js\n\t */",
        "description": "Specifies the alignment which will be applied to the contents of this paragraph in relation to the default appearance of the paragraph text:\n<b>\"baseline\"</b> - the characters in the current paragraph will be aligned by the default text baseline.\n<b>\"subscript\"</b> - the characters in the current paragraph will be aligned below the default text baseline.\n<b>\"superscript\"</b> - the characters in the current paragraph will be aligned above the default text baseline.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "\"baseline\"",
                        "\"subscript\"",
                        "\"superscript\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"baseline\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"subscript\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"superscript\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The vertical alignment type applied to the text contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "SetVertAlign",
        "longname": "ApiParagraph#SetVertAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8560,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetVertAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the last element of the paragraph which is not empty.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ParagraphContent}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/Last.js\n\t */",
        "description": "Returns the last element of the paragraph which is not empty.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ParagraphContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ParagraphContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "Last",
        "longname": "ApiParagraph#Last",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8586,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/Last.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of content control objects in the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiInlineLvlSdt[]}   \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetAllContentControls.js\n\t */",
        "description": "Returns a collection of content control objects in the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiInlineLvlSdt>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiInlineLvlSdt",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllContentControls",
        "longname": "ApiParagraph#GetAllContentControls",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8609,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetAllContentControls.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of drawing objects in the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiDrawing[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetAllDrawingObjects.js\n\t */",
        "description": "Returns a collection of drawing objects in the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiDrawing>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiDrawing",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllDrawingObjects",
        "longname": "ApiParagraph#GetAllDrawingObjects",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8631,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetAllDrawingObjects.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of shape objects in the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiShape[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetAllShapes.js\n\t */",
        "description": "Returns a collection of shape objects in the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiShape>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiShape",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllShapes",
        "longname": "ApiParagraph#GetAllShapes",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8650,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetAllShapes.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of image objects in the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiImage[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetAllImages.js\n\t */",
        "description": "Returns a collection of image objects in the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiImage>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiImage",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllImages",
        "longname": "ApiParagraph#GetAllImages",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8663,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetAllImages.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of chart objects in the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiChart[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetAllCharts.js\n\t */",
        "description": "Returns a collection of chart objects in the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiChart>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiChart",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllCharts",
        "longname": "ApiParagraph#GetAllCharts",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8676,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetAllCharts.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of OLE objects in the paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiOleObject[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetAllOleObjects.js\n\t */",
        "description": "Returns a collection of OLE objects in the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiOleObject>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiOleObject",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllOleObjects",
        "longname": "ApiParagraph#GetAllOleObjects",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8689,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetAllOleObjects.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a content control that contains the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiBlockLvlSdt | null} - returns null is parent content control doesn't exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetParentContentControl.js\n\t */",
        "description": "Returns a content control that contains the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBlockLvlSdt",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentContentControl",
        "longname": "ApiParagraph#GetParentContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8702,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetParentContentControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a table that contains the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTable | null} - returns null if parent table doesn't exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetParentTable.js\n\t */",
        "description": "Returns a table that contains the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiParagraph#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8723,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a table cell that contains the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTableCell | null} - returns null if parent cell doesn't exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetParentTableCell.js\n\t */",
        "description": "Returns a table cell that contains the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTableCell",
        "longname": "ApiParagraph#GetParentTableCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8742,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetParentTableCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph text.\n\t * @memberof ApiParagraph\n\t * @param {object} oPr - The resulting string display properties.\n     * @param {boolean} [oPr.Numbering=false] - Defines if the resulting string will include numbering or not.\n     * @param {boolean} [oPr.Math=false] - Defines if the resulting string will include mathematical expressions or not.\n\t * @param {string} [oPr.NewLineSeparator='\\r'] - Defines how the line separator will be specified in the resulting string.\n\t * @param {string} [oPr.TabSymbol='\\t'] - Defines how the tab will be specified in the resulting string (does not apply to numbering).\n\t * @typeofeditors [\"CDE\"]\n\t * @return {string}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetText.js\n\t */",
        "description": "Returns the paragraph text.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "object"
                    }
                },
                "name": "oPr",
                "description": "The resulting string display properties.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "oPr.Numbering",
                "description": "Defines if the resulting string will include numbering or not.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "oPr.Math",
                "description": "Defines if the resulting string will include mathematical expressions or not.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.NewLineSeparator",
                "description": "Defines how the line separator will be specified in the resulting string.",
                "optional": true,
                "defaultvalue": "'\\r'"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.TabSymbol",
                "description": "Defines how the tab will be specified in the resulting string (does not apply to numbering).",
                "optional": true,
                "defaultvalue": "'\\t'"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiParagraph#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8767,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph text properties.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetTextPr.js\n\t */",
        "description": "Returns the paragraph text properties.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiParagraph#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8790,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph text properties.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The paragraph text properties.\n\t * @return {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetTextPr.js\n\t */",
        "description": "Sets the paragraph text properties.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The paragraph text properties.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiParagraph#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8804,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Wraps the paragraph object with a rich text content control.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nType - Defines if this method returns the ApiBlockLvlSdt (nType === 1) or ApiParagraph (any value except 1) object.\n\t * @return {ApiParagraph | ApiBlockLvlSdt}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/InsertInContentControl.js\n\t */",
        "description": "Wraps the paragraph object with a rich text content control.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nType",
                "description": "Defines if this method returns the ApiBlockLvlSdt (nType === 1) or ApiParagraph (any value except 1) object.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "ApiBlockLvlSdt"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "InsertInContentControl",
        "longname": "ApiParagraph#InsertInContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8823,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/InsertInContentControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Inserts a paragraph at the specified position.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string | ApiParagraph} paragraph - Text or paragraph.\n\t * @param {string} sPosition - The position where the text or paragraph will be inserted (\"before\" or \"after\" the paragraph specified).\n\t * @param {boolean} beRNewPara - Defines if this method returns a new paragraph (true) or the current paragraph (false).\n\t * @return {ApiParagraph | null} - returns null if param paragraph is invalid. \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/InsertParagraph.js\n\t */",
        "description": "Inserts a paragraph at the specified position.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "string",
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "string"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            }
                        ]
                    }
                },
                "name": "paragraph",
                "description": "Text or paragraph.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sPosition",
                "description": "The position where the text or paragraph will be inserted (\"before\" or \"after\" the paragraph specified).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "beRNewPara",
                "description": "Defines if this method returns a new paragraph (true) or the current paragraph (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "InsertParagraph",
        "longname": "ApiParagraph#InsertParagraph",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8859,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/InsertParagraph.js"
        ]
    },
    {
        "comment": "/**\n\t * Selects the current paragraph.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/Select.js\n\t */",
        "description": "Selects the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Select",
        "longname": "ApiParagraph#Select",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8902,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/Select.js"
        ]
    },
    {
        "comment": "/**\n\t * Searches for a scope of a paragraph object. The search results are a collection of ApiRange objects.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - Search string.\n\t * @param {boolean} isMatchCase - Case sensitive or not.\n\t * @return {ApiRange[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/Search.js\n\t */",
        "description": "Searches for a scope of a paragraph object. The search results are a collection of ApiRange objects.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "Search string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isMatchCase",
                "description": "Case sensitive or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiRange>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiRange",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Search",
        "longname": "ApiParagraph#Search",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8952,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/Search.js"
        ]
    },
    {
        "comment": "/**\n\t * Wraps the paragraph content in a mail merge field.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/WrapInMailMergeField.js\n\t */",
        "description": "Wraps the paragraph content in a mail merge field.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": null,
        "name": "WrapInMailMergeField",
        "longname": "ApiParagraph#WrapInMailMergeField",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 8984,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/WrapInMailMergeField.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a numbered cross-reference to the current paragraph.\n\t * <note>Please note that this paragraph must be in the document.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {numberedRefTo} sRefType - The text or numeric value of a numbered reference you want to insert.\n\t * @param {ApiParagraph} oParaTo - The numbered paragraph to be referred to (must be in the document).\n\t * @param {boolean} [bLink=true] - Specifies if the reference will be inserted as a hyperlink.\n\t * @param {boolean} [bAboveBelow=false] - Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"text\" and \"aboveBelow\" sRefType).\n\t * @param {string} [sSepWith=\"\"] - A number separator (used only with the \"fullCtxParaNum\" sRefType).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddNumberedCrossRef.js\n\t */",
        "description": "Adds a numbered cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "numberedRefTo"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "numberedRefTo"
                    }
                },
                "name": "sRefType",
                "description": "The text or numeric value of a numbered reference you want to insert.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                },
                "name": "oParaTo",
                "description": "The numbered paragraph to be referred to (must be in the document).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bLink",
                "description": "Specifies if the reference will be inserted as a hyperlink.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAboveBelow",
                "description": "Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"text\" and \"aboveBelow\" sRefType).",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sSepWith",
                "description": "A number separator (used only with the \"fullCtxParaNum\" sRefType).",
                "optional": true,
                "defaultvalue": "\"\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddNumberedCrossRef",
        "longname": "ApiParagraph#AddNumberedCrossRef",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9023,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddNumberedCrossRef.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a heading cross-reference to the current paragraph.\n\t * <note>Please note that this paragraph must be in the document.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {headingRefTo} sRefType - The text or numeric value of a heading reference you want to insert.\n\t * @param {ApiParagraph} oParaTo - The heading paragraph to be referred to (must be in the document).\n\t * @param {boolean} [bLink=true] - Specifies if the reference will be inserted as a hyperlink.\n\t * @param {boolean} [bAboveBelow=false] - Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"text\" and \"aboveBelow\" sRefType).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddHeadingCrossRef.js\n\t */",
        "description": "Adds a heading cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "headingRefTo"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "headingRefTo"
                    }
                },
                "name": "sRefType",
                "description": "The text or numeric value of a heading reference you want to insert.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                },
                "name": "oParaTo",
                "description": "The heading paragraph to be referred to (must be in the document).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bLink",
                "description": "Specifies if the reference will be inserted as a hyperlink.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAboveBelow",
                "description": "Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"text\" and \"aboveBelow\" sRefType).",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddHeadingCrossRef",
        "longname": "ApiParagraph#AddHeadingCrossRef",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9088,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddHeadingCrossRef.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a bookmark cross-reference to the current paragraph.\n\t * <note>Please note that this paragraph must be in the document.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {bookmarkRefTo} sRefTo - The text or numeric value of a bookmark reference you want to insert.\n\t * @param {string} sBookmarkName - The name of the bookmark to be referred to (must be in the document).\n\t * @param {boolean} [bLink=true] - Specifies if the reference will be inserted as a hyperlink.\n\t * @param {boolean} [bAboveBelow=false] - Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"text\" and \"aboveBelow\" sRefType).\n\t * @param {string} [sSepWith=\"\"] - A number separator (used only with the \"fullCtxParaNum\" sRefType).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddBookmarkCrossRef.js\n\t */",
        "description": "Adds a bookmark cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "bookmarkRefTo"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "bookmarkRefTo"
                    }
                },
                "name": "sRefTo",
                "description": "The text or numeric value of a bookmark reference you want to insert.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sBookmarkName",
                "description": "The name of the bookmark to be referred to (must be in the document).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bLink",
                "description": "Specifies if the reference will be inserted as a hyperlink.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAboveBelow",
                "description": "Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"text\" and \"aboveBelow\" sRefType).",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sSepWith",
                "description": "A number separator (used only with the \"fullCtxParaNum\" sRefType).",
                "optional": true,
                "defaultvalue": "\"\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddBookmarkCrossRef",
        "longname": "ApiParagraph#AddBookmarkCrossRef",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9146,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddBookmarkCrossRef.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a footnote cross-reference to the current paragraph.\n\t * <note>Please note that this paragraph must be in the document.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {footnoteRefTo} sRefType - The text or numeric value of a footnote reference you want to insert.\n\t * @param {ApiParagraph} oParaTo - The first paragraph from a footnote to be referred to (must be in the document).\n\t * @param {boolean} [bLink=true] - Specifies if the reference will be inserted as a hyperlink.\n\t * @param {boolean} [bAboveBelow=false] - Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"aboveBelow\" sRefType).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddFootnoteCrossRef.js\n\t */",
        "description": "Adds a footnote cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "footnoteRefTo"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "footnoteRefTo"
                    }
                },
                "name": "sRefType",
                "description": "The text or numeric value of a footnote reference you want to insert.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                },
                "name": "oParaTo",
                "description": "The first paragraph from a footnote to be referred to (must be in the document).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bLink",
                "description": "Specifies if the reference will be inserted as a hyperlink.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAboveBelow",
                "description": "Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"aboveBelow\" sRefType).",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddFootnoteCrossRef",
        "longname": "ApiParagraph#AddFootnoteCrossRef",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9208,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddFootnoteCrossRef.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds an endnote cross-reference to the current paragraph.\n\t * <note>Please note that this paragraph must be in the document.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {endnoteRefTo} sRefType - The text or numeric value of an endnote reference you want to insert.\n\t * @param {ApiParagraph} oParaTo - The first paragraph from an endnote to be referred to (must be in the document).\n\t * @param {boolean} [bLink=true] - Specifies if the reference will be inserted as a hyperlink.\n\t * @param {boolean} [bAboveBelow=false] - Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"aboveBelow\" sRefType).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddEndnoteCrossRef.js\n\t */",
        "description": "Adds an endnote cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "endnoteRefTo"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "endnoteRefTo"
                    }
                },
                "name": "sRefType",
                "description": "The text or numeric value of an endnote reference you want to insert.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                },
                "name": "oParaTo",
                "description": "The first paragraph from an endnote to be referred to (must be in the document).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bLink",
                "description": "Specifies if the reference will be inserted as a hyperlink.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAboveBelow",
                "description": "Specifies if the above/below words indicating the position of the reference should be included (don't used with the \"aboveBelow\" sRefType).",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddEndnoteCrossRef",
        "longname": "ApiParagraph#AddEndnoteCrossRef",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9265,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddEndnoteCrossRef.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a caption cross-reference to the current paragraph.\n\t * <note>Please note that this paragraph must be in the document.</note>\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {CaptionLabel | string} sCaption - The caption label (\"Equation\", \"Figure\", \"Table\", or another caption label).\n\t * @param {captionRefTo} sRefType - The text or numeric value of a caption reference you want to insert.\n\t * @param {ApiParagraph} oParaTo - The caption paragraph to be referred to (must be in the document).\n\t * @param {boolean} [bLink=true] - Specifies if the reference will be inserted as a hyperlink.\n\t * @param {boolean} [bAboveBelow=false] - Specifies if the above/below words indicating the position of the reference should be included (used only with the \"pageNum\" sRefType).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddCaptionCrossRef.js\n\t */",
        "description": "Adds a caption cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "CaptionLabel",
                        "string"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "CaptionLabel"
                            },
                            {
                                "type": "NameExpression",
                                "name": "string"
                            }
                        ]
                    }
                },
                "name": "sCaption",
                "description": "The caption label (\"Equation\", \"Figure\", \"Table\", or another caption label).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "captionRefTo"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "captionRefTo"
                    }
                },
                "name": "sRefType",
                "description": "The text or numeric value of a caption reference you want to insert.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParagraph"
                    }
                },
                "name": "oParaTo",
                "description": "The caption paragraph to be referred to (must be in the document).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bLink",
                "description": "Specifies if the reference will be inserted as a hyperlink.",
                "optional": true,
                "defaultvalue": true
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAboveBelow",
                "description": "Specifies if the above/below words indicating the position of the reference should be included (used only with the \"pageNum\" sRefType).",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddCaptionCrossRef",
        "longname": "ApiParagraph#AddCaptionCrossRef",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9323,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddCaptionCrossRef.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiParagraph object into the JSON object.\n\t * @memberof ApiParagraph\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiParagraph object into the JSON object.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiParagraph#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9385,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n     * Returns the paragraph position within its parent element.\n     * @memberof ApiParagraph\n     * @typeofeditors [\"CDE\"]\n     * @returns {Number} - returns -1 if the paragraph parent doesn't exist. \n     * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetPosInParent.js\n\t */",
        "description": "Returns the paragraph position within its parent element.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetPosInParent",
        "longname": "ApiParagraph#GetPosInParent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9403,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetPosInParent.js"
        ]
    },
    {
        "comment": "/**\n     * Replaces the current paragraph with a new element.\n     * @memberof ApiParagraph\n     * @typeofeditors [\"CDE\"]\n     * @param {DocumentElement} oElement - The element to replace the current paragraph with.\n     * @returns {boolean}\n     * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/ReplaceByElement.js\n\t */",
        "description": "Replaces the current paragraph with a new element.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The element to replace the current paragraph with.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ReplaceByElement",
        "longname": "ApiParagraph#ReplaceByElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9416,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/ReplaceByElement.js"
        ]
    },
    {
        "comment": "/**\n     * Adds a caption paragraph after (or before) the current paragraph.\n\t * <note>Please note that the current paragraph must be in the document (not in the footer/header).\n\t * And if the current paragraph is placed in a shape, then a caption is added after (or before) the parent shape.</note>\n     * @memberof ApiParagraph\n     * @typeofeditors [\"CDE\"]\n     * @param {string} sAdditional - The additional text.\n\t * @param {CaptionLabel | String} [sLabel=\"Table\"] - The caption label.\n\t * @param {boolean} [bExludeLabel=false] - Specifies whether to exclude the label from the caption.\n\t * @param {CaptionNumberingFormat} [sNumberingFormat=\"Arabic\"] - The possible caption numbering format.\n\t * @param {boolean} [bBefore=false] - Specifies whether to insert the caption before the current paragraph (true) or after (false) (after/before the shape if it is placed in the shape).\n\t * @param {Number} [nHeadingLvl=undefined] - The heading level (used if you want to specify the chapter number).\n\t * <note>If you want to specify \"Heading 1\", then nHeadingLvl === 0 and etc.</note>\n\t * @param {CaptionSep} [sCaptionSep=\"hyphen\"] - The caption separator (used if you want to specify the chapter number).\n     * @returns {boolean}\n     * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/AddCaption.js\n\t */",
        "description": "Adds a caption paragraph after (or before) the current paragraph.\n<note>Please note that the current paragraph must be in the document (not in the footer/header).\nAnd if the current paragraph is placed in a shape, then a caption is added after (or before) the parent shape.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAdditional",
                "description": "The additional text.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "CaptionLabel",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "CaptionLabel"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "sLabel",
                "description": "The caption label.",
                "optional": true,
                "defaultvalue": "\"Table\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bExludeLabel",
                "description": "Specifies whether to exclude the label from the caption.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "CaptionNumberingFormat"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "CaptionNumberingFormat"
                    }
                },
                "name": "sNumberingFormat",
                "description": "The possible caption numbering format.",
                "optional": true,
                "defaultvalue": "\"Arabic\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bBefore",
                "description": "Specifies whether to insert the caption before the current paragraph (true) or after (false) (after/before the shape if it is placed in the shape).",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nHeadingLvl",
                "description": "The heading level (used if you want to specify the chapter number).\n<note>If you want to specify \"Heading 1\", then nHeadingLvl === 0 and etc.</note>",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "CaptionSep"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "CaptionSep"
                    }
                },
                "name": "sCaptionSep",
                "description": "The caption separator (used if you want to specify the chapter number).",
                "optional": true,
                "defaultvalue": "\"hyphen\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddCaption",
        "longname": "ApiParagraph#AddCaption",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9454,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/AddCaption.js"
        ]
    },
    {
        "comment": "/**\n     * Returns the paragraph section.\n     * @memberof ApiParagraph\n     * @typeofeditors [\"CDE\"]\n     * @returns {ApiSection}\n     * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/GetSection.js\n\t */",
        "description": "Returns the paragraph section.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiSection"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiSection"
                    }
                }
            }
        ],
        "name": "GetSection",
        "longname": "ApiParagraph#GetSection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9539,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/GetSection.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the specified section to the current paragraph.\n     * @memberof ApiParagraph\n     * @typeofeditors [\"CDE\"]\n     * @param {ApiSection} oSection - The section which will be set to the paragraph.\n     * @returns {boolean}\n     * @see office-js-api/Examples/{Editor}/ApiParagraph/Methods/SetSection.js\n\t */",
        "description": "Sets the specified section to the current paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiSection"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiSection"
                    }
                },
                "name": "oSection",
                "description": "The section which will be set to the paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetSection",
        "longname": "ApiParagraph#SetSection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9555,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParagraph/Methods/SetSection.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiRun class.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"run\"}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiRun class.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"run\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"run\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiRun#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9593,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties of the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties of the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiRun#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9604,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the content from the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/ClearContent.js\n\t */",
        "description": "Clears the content from the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "ClearContent",
        "longname": "ApiRun#ClearContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9614,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/ClearContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes all the elements from the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/RemoveAllElements.js\n\t */",
        "description": "Removes all the elements from the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "RemoveAllElements",
        "longname": "ApiRun#RemoveAllElements",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9624,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/RemoveAllElements.js"
        ]
    },
    {
        "comment": "/**\n\t * Deletes the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/Delete.js\n\t */",
        "description": "Deletes the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "Delete",
        "longname": "ApiRun#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9634,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds some text to the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {string} sText - The text which will be added to the current run.\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddText.js\n\t */",
        "description": "Adds some text to the current run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The text which will be added to the current run.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "AddText",
        "longname": "ApiRun#AddText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9654,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddText.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a page break and starts the next element from a new page.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddPageBreak.js\n\t */",
        "description": "Adds a page break and starts the next element from a new page.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "AddPageBreak",
        "longname": "ApiRun#AddPageBreak",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9667,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddPageBreak.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a line break to the current run position and starts the next element from a new line.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddLineBreak.js\n\t */",
        "description": "Adds a line break to the current run position and starts the next element from a new line.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "AddLineBreak",
        "longname": "ApiRun#AddLineBreak",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9677,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddLineBreak.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a column break to the current run position and starts the next element from a new column.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddColumnBreak.js\n\t */",
        "description": "Adds a column break to the current run position and starts the next element from a new column.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "AddColumnBreak",
        "longname": "ApiRun#AddColumnBreak",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9687,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddColumnBreak.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a tab stop to the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddTabStop.js\n\t */",
        "description": "Adds a tab stop to the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "AddTabStop",
        "longname": "ApiRun#AddTabStop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9697,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddTabStop.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a drawing object (image, shape or chart) to the current text run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiDrawing} oDrawing - The object which will be added to the current run.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddDrawing.js\n\t */",
        "description": "Adds a drawing object (image, shape or chart) to the current text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                },
                "name": "oDrawing",
                "description": "The object which will be added to the current run.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddDrawing",
        "longname": "ApiRun#AddDrawing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9709,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddDrawing.js"
        ]
    },
    {
        "comment": "/**\n\t * Selects the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/Select.js\n\t */",
        "description": "Selects the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Select",
        "longname": "ApiRun#Select",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9727,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/Select.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a hyperlink to the current run. \n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLink - The link address.\n\t * @param {string} sScreenTipText - The screen tip text.\n\t * @return {ApiHyperlink | null} - returns false if params are invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddHyperlink.js\n\t */",
        "description": "Adds a hyperlink to the current run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLink",
                "description": "The link address.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sScreenTipText",
                "description": "The screen tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiHyperlink",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiHyperlink"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "AddHyperlink",
        "longname": "ApiRun#AddHyperlink",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9779,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddHyperlink.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a copy of the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiRun}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/Copy.js\n\t */",
        "description": "Creates a copy of the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRun"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRun"
                    }
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiRun#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9834,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the specified run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the specified run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiRun#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9854,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n     * Returns a content control that contains the current run.\n     * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n     * @return {ApiBlockLvlSdt | ApiInlineLvlSdt | null} - returns null if parent content control doesn't exist.  \n     * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetParentContentControl.js\n\t */",
        "description": "Returns a content control that contains the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBlockLvlSdt",
                        "ApiInlineLvlSdt",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiInlineLvlSdt"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentContentControl",
        "longname": "ApiRun#GetParentContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9866,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetParentContentControl.js"
        ]
    },
    {
        "comment": "/**\n     * Returns a table that contains the current run.\n     * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n     * @return {ApiTable | null} - returns null if parent table doesn't exist.\n     * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetParentTable.js\n\t */",
        "description": "Returns a table that contains the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiRun#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9890,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n     * Returns a table cell that contains the current run.\n     * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n     * @return {ApiTableCell | null} - returns null is parent cell doesn't exist.  \n     * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetParentTableCell.js\n\t */",
        "description": "Returns a table cell that contains the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTableCell",
        "longname": "ApiRun#GetParentTableCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9910,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetParentTableCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current run.\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current run.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiRun#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9931,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the bold property to the text character.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isBold - Specifies that the contents of the current run are displayed bold.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetBold.js\n\t */",
        "description": "Sets the bold property to the text character.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBold",
                "description": "Specifies that the contents of the current run are displayed bold.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetBold",
        "longname": "ApiRun#SetBold",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9947,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetBold.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that any lowercase characters in the current text run are formatted for display only as their capital letter character equivalents.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isCaps - Specifies that the contents of the current run are displayed capitalized.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetCaps.js\n\t */",
        "description": "Specifies that any lowercase characters in the current text run are formatted for display only as their capital letter character equivalents.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isCaps",
                "description": "Specifies that the contents of the current run are displayed capitalized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetCaps",
        "longname": "ApiRun#SetCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9962,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text color for the current text run in the RGB format.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - If this parameter is set to \"true\", then r,g,b parameters will be ignored.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetColor.js\n\t */",
        "description": "Sets the text color for the current text run in the RGB format.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAuto",
                "description": "If this parameter is set to \"true\", then r,g,b parameters will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetColor",
        "longname": "ApiRun#SetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9980,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the current run are displayed with two horizontal lines through each character displayed on the line.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isDoubleStrikeout - Specifies that the contents of the current run are displayed double struck through.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetDoubleStrikeout.js\n\t */",
        "description": "Specifies that the contents of the current run are displayed with two horizontal lines through each character displayed on the line.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isDoubleStrikeout",
                "description": "Specifies that the contents of the current run are displayed double struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetDoubleStrikeout",
        "longname": "ApiRun#SetDoubleStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 9995,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetDoubleStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets all 4 font slots with the specified font family.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {string} sFontFamily - The font family or families used for the current text run.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetFontFamily.js\n\t */",
        "description": "Sets all 4 font slots with the specified font family.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sFontFamily",
                "description": "The font family or families used for the current text run.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetFontFamily",
        "longname": "ApiRun#SetFontFamily",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10025,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetFontFamily.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all font names from all elements inside the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {string[]} - The font names used for the current run.\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetFontNames.js\n\t */",
        "description": "Returns all font names from all elements inside the current run.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "string",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetFontNames",
        "longname": "ApiRun#GetFontNames",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10039,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetFontNames.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the font size to the characters of the current text run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {hps} nSize - The text size value measured in half-points (1/144 of an inch).\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetFontSize.js\n\t */",
        "description": "Sets the font size to the characters of the current text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "nSize",
                "description": "The text size value measured in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetFontSize",
        "longname": "ApiRun#SetFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10059,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a highlighting color which is applied as a background to the contents of the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {highlightColor} sColor - Available highlight color.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetHighlight.js\n\t */",
        "description": "Specifies a highlighting color which is applied as a background to the contents of the current run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "highlightColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "highlightColor"
                    }
                },
                "name": "sColor",
                "description": "Available highlight color.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetHighlight",
        "longname": "ApiRun#SetHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10074,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the italic property to the text character.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isItalic - Specifies that the contents of the current run are displayed italicized.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetItalic.js\n\t */",
        "description": "Sets the italic property to the text character.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isItalic",
                "description": "Specifies that the contents of the current run are displayed italicized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetItalic",
        "longname": "ApiRun#SetItalic",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10089,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetItalic.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the languages which will be used to check spelling and grammar (if requested) when processing\n\t * the contents of this text run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {string} sLangId - The possible value for this parameter is a language identifier as defined by\n\t * RFC 4646/BCP 47. Example: \"en-CA\".\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetLanguage.js\n\t */",
        "description": "Specifies the languages which will be used to check spelling and grammar (if requested) when processing\nthe contents of this text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLangId",
                "description": "The possible value for this parameter is a language identifier as defined by\nRFC 4646/BCP 47. Example: \"en-CA\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetLanguage",
        "longname": "ApiRun#SetLanguage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetLanguage.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount by which text is raised or lowered for this run in relation to the default\n\t * baseline of the surrounding non-positioned text.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {hps} nPosition - Specifies a positive (raised text) or negative (lowered text)\n\t * measurement in half-points (1/144 of an inch).\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetPosition.js\n\t */",
        "description": "Specifies an amount by which text is raised or lowered for this run in relation to the default\nbaseline of the surrounding non-positioned text.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "nPosition",
                "description": "Specifies a positive (raised text) or negative (lowered text)\nmeasurement in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetPosition",
        "longname": "ApiRun#SetPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10123,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the current text run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {ShdType} sType - The shading type applied to the contents of the current text run.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the current text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ShdType"
                    }
                },
                "name": "sType",
                "description": "The shading type applied to the contents of the current text run.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetShd",
        "longname": "ApiRun#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10141,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that all the small letter characters in this text run are formatted for display only as their capital\n\t * letter character equivalents which are two points smaller than the actual font size specified for this text.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isSmallCaps - Specifies if the contents of the current run are displayed capitalized two points smaller or not.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetSmallCaps.js\n\t */",
        "description": "Specifies that all the small letter characters in this text run are formatted for display only as their capital\nletter character equivalents which are two points smaller than the actual font size specified for this text.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isSmallCaps",
                "description": "Specifies if the contents of the current run are displayed capitalized two points smaller or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetSmallCaps",
        "longname": "ApiRun#SetSmallCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10157,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetSmallCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text spacing measured in twentieths of a point.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nSpacing - The value of the text spacing measured in twentieths of a point (1/1440 of an inch).\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetSpacing.js\n\t */",
        "description": "Sets the text spacing measured in twentieths of a point.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nSpacing",
                "description": "The value of the text spacing measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetSpacing",
        "longname": "ApiRun#SetSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10172,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the current run are displayed with a single horizontal line through the center of the line.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isStrikeout - Specifies that the contents of the current run are displayed struck through.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetStrikeout.js\n\t */",
        "description": "Specifies that the contents of the current run are displayed with a single horizontal line through the center of the line.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isStrikeout",
                "description": "Specifies that the contents of the current run are displayed struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetStrikeout",
        "longname": "ApiRun#SetStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10187,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a style to the current run.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {ApiStyle} oStyle - The style which must be applied to the text run.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetStyle.js\n\t */",
        "description": "Sets a style to the current run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle"
                    }
                },
                "name": "oStyle",
                "description": "The style which must be applied to the text run.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetStyle",
        "longname": "ApiRun#SetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10202,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the current run are displayed along with a line appearing directly below the character\n\t * (less than all the spacing above and below the characters on the line).\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isUnderline - Specifies that the contents of the current run are displayed underlined.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetUnderline.js\n\t */",
        "description": "Specifies that the contents of the current run are displayed along with a line appearing directly below the character\n(less than all the spacing above and below the characters on the line).",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isUnderline",
                "description": "Specifies that the contents of the current run are displayed underlined.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetUnderline",
        "longname": "ApiRun#SetUnderline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10218,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetUnderline.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the alignment which will be applied to the contents of the current run in relation to the default appearance of the text run:\n\t * <b>\"baseline\"</b> - the characters in the current text run will be aligned by the default text baseline.\n\t * <b>\"subscript\"</b> - the characters in the current text run will be aligned below the default text baseline.\n\t * <b>\"superscript\"</b> - the characters in the current text run will be aligned above the default text baseline.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {(\"baseline\" | \"subscript\" | \"superscript\")} sType - The vertical alignment type applied to the text contents.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/SetVertAlign.js\n\t */",
        "description": "Specifies the alignment which will be applied to the contents of the current run in relation to the default appearance of the text run:\n<b>\"baseline\"</b> - the characters in the current text run will be aligned by the default text baseline.\n<b>\"subscript\"</b> - the characters in the current text run will be aligned below the default text baseline.\n<b>\"superscript\"</b> - the characters in the current text run will be aligned above the default text baseline.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "\"baseline\"",
                        "\"subscript\"",
                        "\"superscript\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"baseline\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"subscript\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"superscript\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The vertical alignment type applied to the text contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetVertAlign",
        "longname": "ApiRun#SetVertAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10236,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/SetVertAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Wraps a run in a mail merge field.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/WrapInMailMergeField.js\n\t */",
        "description": "Wraps a run in a mail merge field.",
        "memberof": "ApiRun",
        "params": null,
        "returns": null,
        "name": "WrapInMailMergeField",
        "longname": "ApiRun#WrapInMailMergeField",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10249,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/WrapInMailMergeField.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiRun object into the JSON object.\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiRun object into the JSON object.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiRun#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10283,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to the current run.\n\t * <note>Please note that this run must be in the document.</note>\n\t * @memberof ApiRun\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {ApiComment?} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to the current run.\n<note>Please note that this run must be in the document.</note>",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "ApiRun#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10303,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a text from the text run.\n\t * @memberof ApiRun\n\t * @param {object} oPr - The resulting string display properties.\n     * @param {string} [oPr.NewLineSeparator='\\r'] - Defines how the line separator will be specified in the resulting string.\n\t * @param {string} [oPr.TabSymbol='\\t'] - Defines how the tab will be specified in the resulting string.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiRun/Methods/GetText.js\n\t */",
        "description": "Returns a text from the text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "object"
                    }
                },
                "name": "oPr",
                "description": "The resulting string display properties.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.NewLineSeparator",
                "description": "Defines how the line separator will be specified in the resulting string.",
                "optional": true,
                "defaultvalue": "'\\r'"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "oPr.TabSymbol",
                "description": "Defines how the tab will be specified in the resulting string.",
                "optional": true,
                "defaultvalue": "'\\t'"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiRun#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10339,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRun/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiSection class.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"section\"}\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiSection class.",
        "memberof": "ApiSection",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"section\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"section\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiSection#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10368,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a type of the current section. The section type defines how the contents of the current \n\t * section are placed relative to the previous section.<br/>\n\t * WordprocessingML supports five distinct types of section breaks:\n\t *   * <b>Next page</b> section breaks (the default if type is not specified), which begin the new section on the\n\t *   following page.\n\t *   * <b>Odd</b> page section breaks, which begin the new section on the next odd-numbered page.\n\t *   * <b>Even</b> page section breaks, which begin the new section on the next even-numbered page.\n\t *   * <b>Continuous</b> section breaks, which begin the new section on the following paragraph. This means that\n\t *   continuous section breaks might not specify certain page-level section properties, since they shall be\n\t *   inherited from the following section. These breaks, however, can specify other section properties, such\n\t *   as line numbering and footnote/endnote settings.\n\t *   * <b>Column</b> section breaks, which begin the new section on the next column on the page.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"nextPage\" | \"oddPage\" | \"evenPage\" | \"continuous\" | \"nextColumn\")} sType - The section break type.\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetType.js\n\t */",
        "description": "Specifies a type of the current section. The section type defines how the contents of the current \nsection are placed relative to the previous section.<br/>\nWordprocessingML supports five distinct types of section breaks:\n  * <b>Next page</b> section breaks (the default if type is not specified), which begin the new section on the\n  following page.\n  * <b>Odd</b> page section breaks, which begin the new section on the next odd-numbered page.\n  * <b>Even</b> page section breaks, which begin the new section on the next even-numbered page.\n  * <b>Continuous</b> section breaks, which begin the new section on the following paragraph. This means that\n  continuous section breaks might not specify certain page-level section properties, since they shall be\n  inherited from the following section. These breaks, however, can specify other section properties, such\n  as line numbering and footnote/endnote settings.\n  * <b>Column</b> section breaks, which begin the new section on the next column on the page.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "\"nextPage\"",
                        "\"oddPage\"",
                        "\"evenPage\"",
                        "\"continuous\"",
                        "\"nextColumn\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"nextPage\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"oddPage\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"evenPage\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"continuous\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"nextColumn\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The section break type.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetType",
        "longname": "ApiSection#SetType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10390,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the section type.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {(\"nextPage\" | \"oddPage\" | \"evenPage\" | \"continuous\" | \"nextColumn\")} - The section break type.\n\t * @since 8.2.0\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetType.js\n\t */",
        "description": "Returns the section type.",
        "memberof": "ApiSection",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"nextPage\"",
                        "\"oddPage\"",
                        "\"evenPage\"",
                        "\"continuous\"",
                        "\"nextColumn\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"nextPage\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"oddPage\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"evenPage\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"continuous\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"nextColumn\""
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetType",
        "longname": "ApiSection#GetType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10412,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetType.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that all the text columns in the current section are of equal width.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nCount - Number of columns.\n\t * @param {twips} nSpace - Distance between columns measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetEqualColumns.js\n\t */",
        "description": "Specifies that all the text columns in the current section are of equal width.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nCount",
                "description": "Number of columns.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nSpace",
                "description": "Distance between columns measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetEqualColumns",
        "longname": "ApiSection#SetEqualColumns",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10436,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetEqualColumns.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that all the columns in the current section have the different widths. Number of columns is equal \n\t * to the length of the aWidth array. The length of the aSpaces array MUST BE equal to (aWidth.length - 1).\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips[]} aWidths - An array of column width values measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips[]} aSpaces - An array of distance values between the columns measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetNotEqualColumns.js\n\t */",
        "description": "Specifies that all the columns in the current section have the different widths. Number of columns is equal \nto the length of the aWidth array. The length of the aSpaces array MUST BE equal to (aWidth.length - 1).",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<twips>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "twips",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aWidths",
                "description": "An array of column width values measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Array.<twips>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "twips",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aSpaces",
                "description": "An array of distance values between the columns measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetNotEqualColumns",
        "longname": "ApiSection#SetNotEqualColumns",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10451,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetNotEqualColumns.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the properties (size and orientation) for all the pages in the current section.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nWidth - The page width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The page height measured in twentieths of a point (1/1440 of an inch).\n\t * @param {boolean} [isPortrait=false] - Specifies the orientation of all the pages in this section (if set to true, then the portrait orientation is chosen).\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetPageSize.js\n\t */",
        "description": "Specifies the properties (size and orientation) for all the pages in the current section.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nWidth",
                "description": "The page width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nHeight",
                "description": "The page height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isPortrait",
                "description": "Specifies the orientation of all the pages in this section (if set to true, then the portrait orientation is chosen).",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetPageSize",
        "longname": "ApiSection#SetPageSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10478,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetPageSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets page height for current section.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {twips}\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetPageHeight.js\n\t */",
        "description": "Gets page height for current section.",
        "memberof": "ApiSection",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                }
            }
        ],
        "name": "GetPageHeight",
        "longname": "ApiSection#GetPageHeight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10490,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetPageHeight.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets page width for current section.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {twips}\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetPageWidth.js\n\t */",
        "description": "Gets page width for current section.",
        "memberof": "ApiSection",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                }
            }
        ],
        "name": "GetPageWidth",
        "longname": "ApiSection#GetPageWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10501,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetPageWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the page margins for all the pages in this section.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nLeft - The left margin width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nTop - The top margin height measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nRight - The right margin width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nBottom - The bottom margin height measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetPageMargins.js\n\t */",
        "description": "Specifies the page margins for all the pages in this section.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nLeft",
                "description": "The left margin width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nTop",
                "description": "The top margin height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nRight",
                "description": "The right margin width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nBottom",
                "description": "The bottom margin height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetPageMargins",
        "longname": "ApiSection#SetPageMargins",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10516,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetPageMargins.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the distance from the top edge of the page to the top edge of the header.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nDistance - The distance from the top edge of the page to the top edge of the header measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetHeaderDistance.js\n\t */",
        "description": "Specifies the distance from the top edge of the page to the top edge of the header.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nDistance",
                "description": "The distance from the top edge of the page to the top edge of the header measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHeaderDistance",
        "longname": "ApiSection#SetHeaderDistance",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10527,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetHeaderDistance.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the distance from the bottom edge of the page to the bottom edge of the footer.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nDistance - The distance from the bottom edge of the page to the bottom edge of the footer measured\n\t * in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetFooterDistance.js\n\t */",
        "description": "Specifies the distance from the bottom edge of the page to the bottom edge of the footer.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nDistance",
                "description": "The distance from the bottom edge of the page to the bottom edge of the footer measured\nin twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetFooterDistance",
        "longname": "ApiSection#SetFooterDistance",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10539,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetFooterDistance.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the content for the specified header type.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {HdrFtrType} sType - Header type to get the content from.\n\t * @param {boolean} [isCreate=false] - Specifies whether to create a new header or not with the specified header type in case\n\t * no header with such a type could be found in the current section.\n\t * @returns {?ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetHeader.js\n\t */",
        "description": "Returns the content for the specified header type.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "HdrFtrType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "HdrFtrType"
                    }
                },
                "name": "sType",
                "description": "Header type to get the content from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isCreate",
                "description": "Specifies whether to create a new header or not with the specified header type in case\nno header with such a type could be found in the current section.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetHeader",
        "longname": "ApiSection#GetHeader",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10553,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetHeader.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes the header of the specified type from the current section. After removal, the header will be inherited from\n\t * the previous section, or if this is the first section in the document, no header of the specified type will be presented.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {HdrFtrType} sType - Header type to be removed.\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/RemoveHeader.js\n\t */",
        "description": "Removes the header of the specified type from the current section. After removal, the header will be inherited from\nthe previous section, or if this is the first section in the document, no header of the specified type will be presented.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "HdrFtrType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "HdrFtrType"
                    }
                },
                "name": "sType",
                "description": "Header type to be removed.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "RemoveHeader",
        "longname": "ApiSection#RemoveHeader",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10590,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/RemoveHeader.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the content for the specified footer type.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {HdrFtrType} sType - Footer type to get the content from.\n\t * @param {boolean} [isCreate=false] - Specifies whether to create a new footer or not with the specified footer type in case\n\t * no footer with such a type could be found in the current section.\n\t * @returns {?ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetFooter.js\n\t */",
        "description": "Returns the content for the specified footer type.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "HdrFtrType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "HdrFtrType"
                    }
                },
                "name": "sType",
                "description": "Footer type to get the content from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isCreate",
                "description": "Specifies whether to create a new footer or not with the specified footer type in case\nno footer with such a type could be found in the current section.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetFooter",
        "longname": "ApiSection#GetFooter",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10609,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetFooter.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes the footer of the specified type from the current section. After removal, the footer will be inherited from \n\t * the previous section, or if this is the first section in the document, no footer of the specified type will be presented.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {HdrFtrType} sType - Footer type to be removed.\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/RemoveFooter.js\n\t */",
        "description": "Removes the footer of the specified type from the current section. After removal, the footer will be inherited from \nthe previous section, or if this is the first section in the document, no footer of the specified type will be presented.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "HdrFtrType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "HdrFtrType"
                    }
                },
                "name": "sType",
                "description": "Footer type to be removed.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "RemoveFooter",
        "longname": "ApiSection#RemoveFooter",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10647,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/RemoveFooter.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether the current section in this document has the different header and footer for the section first page.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isTitlePage - If true, the first page of the section will have header and footer that will differ from the other pages of the same section.\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/SetTitlePage.js\n\t */",
        "description": "Specifies whether the current section in this document has the different header and footer for the section first page.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isTitlePage",
                "description": "If true, the first page of the section will have header and footer that will differ from the other pages of the same section.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTitlePage",
        "longname": "ApiSection#SetTitlePage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10663,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/SetTitlePage.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next section if exists.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiSection | null} - returns null if section is last.\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetNext.js\n\t */",
        "description": "Returns the next section if exists.",
        "memberof": "ApiSection",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiSection",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiSection"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNext",
        "longname": "ApiSection#GetNext",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10674,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetNext.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous section if exists.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiSection | null} - returns null if section is first.\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/GetPrevious.js\n\t */",
        "description": "Returns the previous section if exists.",
        "memberof": "ApiSection",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiSection",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiSection"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPrevious",
        "longname": "ApiSection#GetPrevious",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10703,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/GetPrevious.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiSection object into the JSON object.\n\t * @memberof ApiSection\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiSection/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiSection object into the JSON object.",
        "memberof": "ApiSection",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiSection#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10734,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSection/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTable class.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"table\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTable class.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"table\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"table\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTable#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10758,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of rows in the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetRowsCount.js\n\t */",
        "description": "Returns a number of rows in the current table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetRowsCount",
        "longname": "ApiTable#GetRowsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10769,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetRowsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a table row by its position in the table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nPos - The row position within the table.\n\t * @returns {ApiTableRow | null} - returns null if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetRow.js\n\t */",
        "description": "Returns a table row by its position in the table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The row position within the table.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableRow",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableRow"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetRow",
        "longname": "ApiTable#GetRow",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10781,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetRow.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a cell by its position.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nRow - The row position in the current table where the specified cell is placed.\n\t * @param {number} nCell - The cell position in the current table.\n\t * @returns {ApiTableCell | null} - returns null if params are invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetCell.js\n\t */",
        "description": "Returns a cell by its position.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nRow",
                "description": "The row position in the current table where the specified cell is placed.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nCell",
                "description": "The cell position in the current table.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetCell",
        "longname": "ApiTable#GetCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10797,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Merges an array of cells. If the merge is done successfully, it will return the resulting merged cell, otherwise the result will be \"null\".\n\t * <note>The number of cells in any row and the number of rows in the current table may be changed.</note>\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell[]} aCells - The array of cells to be merged.\n\t * @returns {?ApiTableCell}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/MergeCells.js\n\t */",
        "description": "Merges an array of cells. If the merge is done successfully, it will return the resulting merged cell, otherwise the result will be \"null\".\n<note>The number of cells in any row and the number of rows in the current table may be changed.</note>",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<ApiTableCell>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiTableCell",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aCells",
                "description": "The array of cells to be merged.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "MergeCells",
        "longname": "ApiTable#MergeCells",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10817,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/MergeCells.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a style to the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStyle} oStyle - The style which will be applied to the current table.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetStyle.js\n\t */",
        "description": "Sets a style to the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle"
                    }
                },
                "name": "oStyle",
                "description": "The style which will be applied to the current table.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetStyle",
        "longname": "ApiTable#SetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10874,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the conditional formatting components of the referenced table style (if one exists) \n\t * which will be applied to the set of table rows with the current table-level property exceptions. A table style \n\t * can specify up to six different optional conditional formats, for example, different formatting for the first column, \n\t * which then can be applied or omitted from individual table rows in the parent table.\n\t * \n\t * The default setting is to apply the row and column band formatting, but not the first row, last row, first \n\t * column, or last column formatting.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isFirstColumn - Specifies that the first column conditional formatting will be applied to the table.\n\t * @param {boolean} isFirstRow - Specifies that the first row conditional formatting will be applied to the table.\n\t * @param {boolean} isLastColumn - Specifies that the last column conditional formatting will be applied to the table.\n\t * @param {boolean} isLastRow - Specifies that the last row conditional formatting will be applied to the table.\n\t * @param {boolean} isHorBand - Specifies that the horizontal band conditional formatting will not be applied to the table.\n\t * @param {boolean} isVerBand - Specifies that the vertical band conditional formatting will not be applied to the table.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetTableLook.js\n\t */",
        "description": "Specifies the conditional formatting components of the referenced table style (if one exists) \nwhich will be applied to the set of table rows with the current table-level property exceptions. A table style \ncan specify up to six different optional conditional formats, for example, different formatting for the first column, \nwhich then can be applied or omitted from individual table rows in the parent table.\n\nThe default setting is to apply the row and column band formatting, but not the first row, last row, first \ncolumn, or last column formatting.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isFirstColumn",
                "description": "Specifies that the first column conditional formatting will be applied to the table.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isFirstRow",
                "description": "Specifies that the first row conditional formatting will be applied to the table.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isLastColumn",
                "description": "Specifies that the last column conditional formatting will be applied to the table.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isLastRow",
                "description": "Specifies that the last row conditional formatting will be applied to the table.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isHorBand",
                "description": "Specifies that the horizontal band conditional formatting will not be applied to the table.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isVerBand",
                "description": "Specifies that the vertical band conditional formatting will not be applied to the table.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableLook",
        "longname": "ApiTable#SetTableLook",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10901,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetTableLook.js"
        ]
    },
    {
        "comment": "/**\n\t * Splits the cell into a given number of rows and columns.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell} [oCell] - The cell which will be split.\n\t * @param {Number} [nRow=1] - Count of rows into which the cell will be split.\n\t * @param {Number} [nCol=1] - Count of columns into which the cell will be split.\n\t * @returns {ApiTable | null} - returns null if can't split.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/Split.js\n\t */",
        "description": "Splits the cell into a given number of rows and columns.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell which will be split.",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nRow",
                "description": "Count of rows into which the cell will be split.",
                "optional": true,
                "defaultvalue": 1
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCol",
                "description": "Count of columns into which the cell will be split.",
                "optional": true,
                "defaultvalue": 1
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Split",
        "longname": "ApiTable#Split",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10921,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/Split.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a new row to the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell} [oCell] - The cell after which a new row will be added. If not specified, a new row will\n\t * be added at the end of the table.\n\t * @param {boolean} [isBefore=false] - Adds a new row before (false) or after (true) the specified cell. If no cell is specified, then\n\t * this parameter will be ignored.\n\t * @returns {ApiTableRow}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/AddRow.js\n\t */",
        "description": "Adds a new row to the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell after which a new row will be added. If not specified, a new row will\nbe added at the end of the table.",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBefore",
                "description": "Adds a new row before (false) or after (true) the specified cell. If no cell is specified, then\nthis parameter will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableRow"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableRow"
                    }
                }
            }
        ],
        "name": "AddRow",
        "longname": "ApiTable#AddRow",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10961,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/AddRow.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds the new rows to the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell} [oCell] - The cell after which the new rows will be added. If not specified, the new rows will\n\t * be added at the end of the table.\n\t * @param {Number} nCount - Count of rows to be added.\n\t * @param {boolean} [isBefore=false] - Adds the new rows before (false) or after (true) the specified cell. If no cell is specified, then\n\t * this parameter will be ignored.\n\t * @returns {ApiTable}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/AddRows.js\n\t */",
        "description": "Adds the new rows to the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell after which the new rows will be added. If not specified, the new rows will\nbe added at the end of the table.",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCount",
                "description": "Count of rows to be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBefore",
                "description": "Adds the new rows before (false) or after (true) the specified cell. If no cell is specified, then\nthis parameter will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTable"
                    }
                }
            }
        ],
        "name": "AddRows",
        "longname": "ApiTable#AddRows",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 10998,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/AddRows.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a new column to the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell} [oCell] - The cell after which a new column will be added. If not specified, a new column will be added at the end of the table.\n\t * @param {boolean} [isBefore=false] - Adds a new column before (false) or after (true) the specified cell. If no cell is specified,\n\t * then this parameter will be ignored.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/AddColumn.js\n\t */",
        "description": "Adds a new column to the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell after which a new column will be added. If not specified, a new column will be added at the end of the table.",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBefore",
                "description": "Adds a new column before (false) or after (true) the specified cell. If no cell is specified,\nthen this parameter will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "AddColumn",
        "longname": "ApiTable#AddColumn",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11016,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/AddColumn.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds the new columns to the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell} [oCell] - The cell after which the new columns will be added. If not specified, the new columns will be added at the end of the table.\n\t * @param {Number} nCount - Count of columns to be added.\n\t * @param {boolean} [isBefore=false] - Adds the new columns before (false) or after (true) the specified cell. If no cell is specified,\n\t * then this parameter will be ignored.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/AddColumns.js\n\t */",
        "description": "Adds the new columns to the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell after which the new columns will be added. If not specified, the new columns will be added at the end of the table.",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCount",
                "description": "Count of columns to be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBefore",
                "description": "Adds the new columns before (false) or after (true) the specified cell. If no cell is specified,\nthen this parameter will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "AddColumns",
        "longname": "ApiTable#AddColumns",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11048,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/AddColumns.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a paragraph or a table or a blockLvl content control using its position in the cell.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {ApiTableCell} oCell - The cell where the specified element will be added.\n\t * @param {number} nPos - The position in the cell where the specified element will be added.\n\t * @param {DocumentElement} oElement - The document element which will be added at the current position.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/AddElement.js\n\t */",
        "description": "Adds a paragraph or a table or a blockLvl content control using its position in the cell.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell where the specified element will be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position in the cell where the specified element will be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The document element which will be added at the current position.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "AddElement",
        "longname": "ApiTable#AddElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11066,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/AddElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a table row with a specified cell.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell} oCell - The cell which is placed in the row that will be removed.\n\t * @returns {boolean} Is the table empty after removing.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/RemoveRow.js\n\t */",
        "description": "Removes a table row with a specified cell.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell which is placed in the row that will be removed.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "RemoveRow",
        "longname": "ApiTable#RemoveRow",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11093,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/RemoveRow.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a table column with a specified cell.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCell} oCell - The cell which is placed in the column that will be removed.\n\t * @returns {boolean} Is the table empty after removing.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/RemoveColumn.js\n\t */",
        "description": "Removes a table column with a specified cell.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                },
                "name": "oCell",
                "description": "The cell which is placed in the column that will be removed.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "RemoveColumn",
        "longname": "ApiTable#RemoveColumn",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11116,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/RemoveColumn.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a copy of the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {ApiTable}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/Copy.js\n\t */",
        "description": "Creates a copy of the current table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTable"
                    }
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiTable#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Selects the current table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/Select.js\n\t */",
        "description": "Selects the current table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Select",
        "longname": "ApiTable#Select",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11150,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/Select.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the specified table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the specified table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiTable#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11192,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the horizontal alignment to the table.\n     * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n     * @param {String} sType - Horizontal alignment type: may be \"left\" or \"center\" or \"right\".\n     * @returns {boolean} - returns false if param is invalid.\n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetHAlign.js\n\t */",
        "description": "Sets the horizontal alignment to the table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sType",
                "description": "Horizontal alignment type: may be \"left\" or \"center\" or \"right\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetHAlign",
        "longname": "ApiTable#SetHAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11204,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetHAlign.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the vertical alignment to the table.\n     * @typeofeditors [\"CDE\"]\n     * @param {String} sType - Vertical alignment type: may be \"top\" or \"center\" or \"bottom\".\n     * @returns {boolean} - returns false if param is invalid.\n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetVAlign.js\n\t */",
        "description": "Sets the vertical alignment to the table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sType",
                "description": "Vertical alignment type: may be \"top\" or \"center\" or \"bottom\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetVAlign",
        "longname": "ApiTable#SetVAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11236,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetVAlign.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the table paddings.\n\t * If table is inline, then only left padding is applied.\n     * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n     * @param {Number} nLeft - Left padding.\n\t * @param {Number} nTop - Top padding.\n\t * @param {Number} nRight - Right padding.\n\t * @param {Number} nBottom - Bottom padding.\n     * @returns {boolean} - returns true.\n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetPaddings.js\n\t */",
        "description": "Sets the table paddings.\nIf table is inline, then only left padding is applied.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nLeft",
                "description": "Left padding.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nTop",
                "description": "Top padding.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nRight",
                "description": "Right padding.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nBottom",
                "description": "Bottom padding.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetPaddings",
        "longname": "ApiTable#SetPaddings",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11263,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetPaddings.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the table wrapping style.\n     * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n     * @param {boolean} isFlow - Specifies if the table is inline or not.\n\t * @returns {boolean} - returns false if param is invalid.\n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetWrappingStyle.js\n\t */",
        "description": "Sets the table wrapping style.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isFlow",
                "description": "Specifies if the table is inline or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetWrappingStyle",
        "longname": "ApiTable#SetWrappingStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11280,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetWrappingStyle.js"
        ]
    },
    {
        "comment": "/**\n     * Returns a content control that contains the current table.\n     * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n     * @return {ApiBlockLvlSdt | null} - return null is parent content control doesn't exist.\n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetParentContentControl.js\n\t */",
        "description": "Returns a content control that contains the current table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBlockLvlSdt",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentContentControl",
        "longname": "ApiTable#GetParentContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11304,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetParentContentControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Wraps the current table object with a content control.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nType - Defines if this method returns the ApiBlockLvlSdt (nType === 1) or ApiTable (any value except 1) object.\n\t * @return {ApiTable | ApiBlockLvlSdt}  \n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/InsertInContentControl.js\n\t */",
        "description": "Wraps the current table object with a content control.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nType",
                "description": "Defines if this method returns the ApiBlockLvlSdt (nType === 1) or ApiTable (any value except 1) object.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "ApiBlockLvlSdt"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "InsertInContentControl",
        "longname": "ApiTable#InsertInContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11324,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/InsertInContentControl.js"
        ]
    },
    {
        "comment": "/**\n     * Returns a table that contains the current table.\n     * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n     * @return {ApiTable | null} - returns null if parent table doesn't exist.  \n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetParentTable.js\n\t */",
        "description": "Returns a table that contains the current table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiTable#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11359,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Tables array that represents all the tables nested within the specified table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTable[]}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetTables.js\n\t */",
        "description": "Returns a Tables array that represents all the tables nested within the specified table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiTable>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiTable",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetTables",
        "longname": "ApiTable#GetTables",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11379,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetTables.js"
        ]
    },
    {
        "comment": "/**\n     * Returns a table cell that contains the current table.\n     * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n     * @return {ApiTableCell | null} - returns null if parent cell doesn't exist.  \n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetParentTableCell.js\n\t */",
        "description": "Returns a table cell that contains the current table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTableCell",
        "longname": "ApiTable#GetParentTableCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11396,
            "columnno": 4
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetParentTableCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Deletes the current table. \n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @return {boolean} - returns false if parent of table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/Delete.js\n\t */",
        "description": "Deletes the current table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiTable#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11416,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the content from the table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @return {boolean} - returns true.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/Clear.js\n\t */",
        "description": "Clears the content from the table.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Clear",
        "longname": "ApiTable#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11437,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Searches for a scope of a table object. The search results are a collection of ApiRange objects.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - Search string.\n\t * @param {boolean} isMatchCase - Case sensitive or not.\n\t * @return {ApiRange[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/Search.js\n\t */",
        "description": "Searches for a scope of a table object. The search results are a collection of ApiRange objects.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "Search string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isMatchCase",
                "description": "Case sensitive or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiRange>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiRange",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Search",
        "longname": "ApiTable#Search",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11459,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/Search.js"
        ]
    },
    {
        "comment": "/**\n\t * Applies the text settings to the entire contents of the table.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current table.\n\t * @return {boolean} - returns true.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetTextPr.js\n\t */",
        "description": "Applies the text settings to the entire contents of the table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current table.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiTable#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11487,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to all cells in the current table.\n\t * @memberof ApiTable\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to all cells in the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiTable#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11512,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTable object into the JSON object.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTable object into the JSON object.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTable#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11537,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n     * Returns the table position within its parent element.\n     * @memberof ApiTable\n     * @typeofeditors [\"CDE\"]\n     * @returns {Number} - returns -1 if the table parent doesn't exist. \n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/GetPosInParent.js\n\t */",
        "description": "Returns the table position within its parent element.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetPosInParent",
        "longname": "ApiTable#GetPosInParent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11555,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/GetPosInParent.js"
        ]
    },
    {
        "comment": "/**\n\t * Replaces the current table with a new element.\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {DocumentElement} oElement - The element to replace the current table with.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/ReplaceByElement.js\n\t */",
        "description": "Replaces the current table with a new element.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The element to replace the current table with.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ReplaceByElement",
        "longname": "ApiTable#ReplaceByElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11568,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/ReplaceByElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to all contents of the current table.\n\t * <note>Please note that this table must be in the document.</note>\n\t * @memberof ApiTable\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {ApiComment?} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/ApiTable/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to all contents of the current table.\n<note>Please note that this table must be in the document.</note>",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "ApiTable#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11600,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n     * Adds a caption paragraph after (or before) the current table.\n\t * <note>Please note that the current table must be in the document (not in the footer/header).\n\t * And if the current table is placed in a shape, then a caption is added after (or before) the parent shape.</note>\n     * @memberof ApiTable\n     * @typeofeditors [\"CDE\"]\n     * @param {string} sAdditional - The additional text.\n\t * @param {CaptionLabel | String} [sLabel=\"Table\"] - The caption label.\n\t * @param {boolean} [bExludeLabel=false] - Specifies whether to exclude the label from the caption.\n\t * @param {CaptionNumberingFormat} [sNumberingFormat=\"Arabic\"] - The possible caption numbering format.\n\t * @param {boolean} [bBefore=false] - Specifies whether to insert the caption before the current table (true) or after (false) (after/before the shape if it is placed in the shape).\n\t * @param {Number} [nHeadingLvl=undefined] - The heading level (used if you want to specify the chapter number).\n\t * <note>If you want to specify \"Heading 1\", then nHeadingLvl === 0 and etc.</note>\n\t * @param {CaptionSep} [sCaptionSep=\"hyphen\"] - The caption separator (used if you want to specify the chapter number).\n     * @returns {boolean}\n     * @see office-js-api/Examples/{Editor}/ApiTable/Methods/AddCaption.js\n\t */",
        "description": "Adds a caption paragraph after (or before) the current table.\n<note>Please note that the current table must be in the document (not in the footer/header).\nAnd if the current table is placed in a shape, then a caption is added after (or before) the parent shape.</note>",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAdditional",
                "description": "The additional text.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "CaptionLabel",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "CaptionLabel"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "sLabel",
                "description": "The caption label.",
                "optional": true,
                "defaultvalue": "\"Table\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bExludeLabel",
                "description": "Specifies whether to exclude the label from the caption.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "CaptionNumberingFormat"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "CaptionNumberingFormat"
                    }
                },
                "name": "sNumberingFormat",
                "description": "The possible caption numbering format.",
                "optional": true,
                "defaultvalue": "\"Arabic\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bBefore",
                "description": "Specifies whether to insert the caption before the current table (true) or after (false) (after/before the shape if it is placed in the shape).",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nHeadingLvl",
                "description": "The heading level (used if you want to specify the chapter number).\n<note>If you want to specify \"Heading 1\", then nHeadingLvl === 0 and etc.</note>",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "CaptionSep"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "CaptionSep"
                    }
                },
                "name": "sCaptionSep",
                "description": "The caption separator (used if you want to specify the chapter number).",
                "optional": true,
                "defaultvalue": "\"hyphen\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddCaption",
        "longname": "ApiTable#AddCaption",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11644,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTable/Methods/AddCaption.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTableRow class.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tableRow\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTableRow class.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tableRow\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"tableRow\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTableRow#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11735,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of cells in the current row.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/GetCellsCount.js\n\t */",
        "description": "Returns a number of cells in the current row.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetCellsCount",
        "longname": "ApiTableRow#GetCellsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11746,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/GetCellsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a cell by its position.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nPos - The cell position in the current row.\n\t * @returns {ApiTableCell}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/GetCell.js\n\t */",
        "description": "Returns a cell by its position.",
        "memberof": "ApiTableRow",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The cell position in the current row.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCell"
                    }
                }
            }
        ],
        "name": "GetCell",
        "longname": "ApiTableRow#GetCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11758,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/GetCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current row index.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {Number}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/GetIndex.js\n\t */",
        "description": "Returns the current row index.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetIndex",
        "longname": "ApiTableRow#GetIndex",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11772,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/GetIndex.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the parent table of the current row.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTable | null} - returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/GetParentTable.js\n\t */",
        "description": "Returns the parent table of the current row.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiTableRow#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11783,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next row if exists.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableRow | null} - returns null if row is last.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/GetNext.js\n\t */",
        "description": "Returns the next row if exists.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableRow",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableRow"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNext",
        "longname": "ApiTableRow#GetNext",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11798,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/GetNext.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous row if exists.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableRow | null} - returns null if row is first.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/GetPrevious.js\n\t */",
        "description": "Returns the previous row if exists.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableRow",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableRow"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPrevious",
        "longname": "ApiTableRow#GetPrevious",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11813,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/GetPrevious.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds the new rows to the current table.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} nCount - Count of rows to be added.\n\t * @param {boolean} [isBefore=false] - Specifies if the rows will be added before or after the current row. \n\t * @returns {ApiTable | null} - returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/AddRows.js\n\t */",
        "description": "Adds the new rows to the current table.",
        "memberof": "ApiTableRow",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCount",
                "description": "Count of rows to be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBefore",
                "description": "Specifies if the rows will be added before or after the current row.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "AddRows",
        "longname": "ApiTableRow#AddRows",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11830,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/AddRows.js"
        ]
    },
    {
        "comment": "/**\n\t * Merges the cells in the current row. \n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableCell | null} - return null if can't merge.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/MergeCells.js\n\t */",
        "description": "Merges the cells in the current row.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "MergeCells",
        "longname": "ApiTableRow#MergeCells",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11850,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/MergeCells.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the content from the current row.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean} - returns false if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/Clear.js\n\t */",
        "description": "Clears the content from the current row.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Clear",
        "longname": "ApiTableRow#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11885,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes the current table row.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean} - return false if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/Remove.js\n\t */",
        "description": "Removes the current table row.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Remove",
        "longname": "ApiTableRow#Remove",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11920,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/Remove.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current row.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current row.\n\t * @returns {boolean} - returns false if parent table doesn't exist or param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current row.",
        "memberof": "ApiTableRow",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current row.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiTableRow#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11939,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Searches for a scope of a table row object. The search results are a collection of ApiRange objects.\n\t * @memberof ApiTableRow\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - Search string.\n\t * @param {boolean} isMatchCase - Case sensitive or not.\n\t * @return {ApiRange[]}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/Search.js\n\t */",
        "description": "Searches for a scope of a table row object. The search results are a collection of ApiRange objects.",
        "memberof": "ApiTableRow",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "Search string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isMatchCase",
                "description": "Case sensitive or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiRange>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiRange",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Search",
        "longname": "ApiTableRow#Search",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 11978,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/Search.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to all cells in the current table row.\n\t * @memberof ApiTableRow\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRow/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to all cells in the current table row.",
        "memberof": "ApiTableRow",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiTableRow#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12025,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRow/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTableCell class.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tableCell\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTableCell class.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tableCell\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"tableCell\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTableCell#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current cell content.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetContent.js\n\t */",
        "description": "Returns the current cell content.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent"
                    }
                }
            }
        ],
        "name": "GetContent",
        "longname": "ApiTableCell#GetContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12065,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current cell index.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {Number}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetIndex.js\n\t */",
        "description": "Returns the current cell index.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetIndex",
        "longname": "ApiTableCell#GetIndex",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12076,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetIndex.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an index of the parent row.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetRowIndex.js\n\t */",
        "description": "Returns an index of the parent row.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetRowIndex",
        "longname": "ApiTableCell#GetRowIndex",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12087,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetRowIndex.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent row of the current cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableRow | null} - returns null if parent row doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetParentRow.js\n\t */",
        "description": "Returns a parent row of the current cell.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableRow",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableRow"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentRow",
        "longname": "ApiTableCell#GetParentRow",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12102,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetParentRow.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent table of the current cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTable | null} - returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetParentTable.js\n\t */",
        "description": "Returns a parent table of the current cell.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiTableCell#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12117,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds the new rows to the current table.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} nCount - Count of rows to be added.\n\t * @param {boolean} [isBefore=false] - Specifies if the new rows will be added before or after the current cell. \n\t * @returns {ApiTable | null} - returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/AddRows.js\n\t */",
        "description": "Adds the new rows to the current table.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCount",
                "description": "Count of rows to be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBefore",
                "description": "Specifies if the new rows will be added before or after the current cell.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "AddRows",
        "longname": "ApiTableCell#AddRows",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12134,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/AddRows.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds the new columns to the current table.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} nCount - Count of columns to be added.\n\t * @param {boolean} [isBefore=false] - Specifies if the new columns will be added before or after the current cell. \n\t * @returns {ApiTable | null} - returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/AddColumns.js\n\t */",
        "description": "Adds the new columns to the current table.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCount",
                "description": "Count of columns to be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBefore",
                "description": "Specifies if the new columns will be added before or after the current cell.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "AddColumns",
        "longname": "ApiTableCell#AddColumns",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12153,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/AddColumns.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a column containing the current cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {bool | null} Is the table empty after removing. Returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/RemoveColumn.js\n\t */",
        "description": "Removes a column containing the current cell.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "bool",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "bool"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "RemoveColumn",
        "longname": "ApiTableCell#RemoveColumn",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12170,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/RemoveColumn.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a row containing the current cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean} Is the table empty after removing.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/RemoveRow.js\n\t */",
        "description": "Removes a row containing the current cell.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "RemoveRow",
        "longname": "ApiTableCell#RemoveRow",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12185,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/RemoveRow.js"
        ]
    },
    {
        "comment": "/**\n\t * Searches for a scope of a table cell object. The search results are a collection of ApiRange objects.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - Search string.\n\t * @param {boolean} isMatchCase - Case sensitive or not.\n\t * @return {ApiRange[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/Search.js\n\t */",
        "description": "Searches for a scope of a table cell object. The search results are a collection of ApiRange objects.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "Search string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isMatchCase",
                "description": "Case sensitive or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiRange>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiRange",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Search",
        "longname": "ApiTableCell#Search",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12202,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/Search.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next cell if exists.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableCell | null} - returns null if cell is last.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetNext.js\n\t */",
        "description": "Returns the next cell if exists.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNext",
        "longname": "ApiTableCell#GetNext",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12230,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetNext.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous cell if exists.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableCell | null} - returns null is cell is first. \n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/GetPrevious.js\n\t */",
        "description": "Returns the previous cell if exists.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPrevious",
        "longname": "ApiTableCell#GetPrevious",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12245,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/GetPrevious.js"
        ]
    },
    {
        "comment": "/**\n\t * Splits the cell into a given number of rows and columns.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} [nRow=1] - Count of rows into which the cell will be split.\n\t * @param {Number} [nCol=1] - Count of columns into which the cell will be split.\n\t * @returns {ApiTable | null} - returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/Split.js\n\t */",
        "description": "Splits the cell into a given number of rows and columns.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nRow",
                "description": "Count of rows into which the cell will be split.",
                "optional": true,
                "defaultvalue": 1
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCol",
                "description": "Count of columns into which the cell will be split.",
                "optional": true,
                "defaultvalue": 1
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Split",
        "longname": "ApiTableCell#Split",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/Split.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the cell properties to the current cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTableCellPr} oApiTableCellPr - The properties that will be set to the current table cell.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/SetCellPr.js\n\t */",
        "description": "Sets the cell properties to the current cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTableCellPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCellPr"
                    }
                },
                "name": "oApiTableCellPr",
                "description": "The properties that will be set to the current table cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetCellPr",
        "longname": "ApiTableCell#SetCellPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12278,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/SetCellPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Applies the text settings to the entire contents of the current cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The properties that will be set to the current table cell text.\n\t * @return {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/SetTextPr.js\n\t */",
        "description": "Applies the text settings to the entire contents of the current cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The properties that will be set to the current table cell text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiTableCell#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12296,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the content from the current cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @return {boolean} - returns false if parent row is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/Clear.js\n\t */",
        "description": "Clears the content from the current cell.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Clear",
        "longname": "ApiTableCell#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12321,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a paragraph or a table or a blockLvl content control using its position in the cell.\n\t * @memberof ApiTableCell\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nPos - The position where the current element will be added.\n\t * @param {DocumentElement} oElement - The document element which will be added at the current position.\n\t * @returns {boolean} - returns false if oElement is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/AddElement.js\n\t */",
        "description": "Adds a paragraph or a table or a blockLvl content control using its position in the cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position where the current element will be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The document element which will be added at the current position.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddElement",
        "longname": "ApiTableCell#AddElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12343,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/AddElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current table cell.\n\t * @memberof ApiTableCell\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiTableCell#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12370,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to all cells in the column containing the current cell.\n\t * @memberof ApiTableCell\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCell/Methods/SetColumnBackgroundColor.js\n\t */",
        "description": "Sets the background color to all cells in the column containing the current cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetColumnBackgroundColor",
        "longname": "ApiTableCell#SetColumnBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12415,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCell/Methods/SetColumnBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiStyle class.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"style\"}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiStyle class.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"style\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"style\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiStyle#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12453,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a name of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetName.js\n\t */",
        "description": "Returns a name of the current style.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetName",
        "longname": "ApiStyle#GetName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12464,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetName.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a name of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sStyleName - The name which will be used for the current style.\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/SetName.js\n\t */",
        "description": "Sets a name of the current style.",
        "memberof": "ApiStyle",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sStyleName",
                "description": "The name which will be used for the current style.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetName",
        "longname": "ApiStyle#SetName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12475,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/SetName.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {StyleType}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetType.js\n\t */",
        "description": "Returns a type of the current style.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "StyleType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "StyleType"
                    }
                }
            }
        ],
        "name": "GetType",
        "longname": "ApiStyle#GetType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12486,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties of the current style.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiStyle#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12508,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph properties of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParaPr}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetParaPr.js\n\t */",
        "description": "Returns the paragraph properties of the current style.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParaPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParaPr"
                    }
                }
            }
        ],
        "name": "GetParaPr",
        "longname": "ApiStyle#GetParaPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12519,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetParaPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the table properties of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiTablePr} If the type of this style is not a <code>\"table\"</code> then it will return\n\t *     <code>null</code>.\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetTablePr.js\n\t */",
        "description": "Returns the table properties of the current style.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTablePr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTablePr",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetTablePr",
        "longname": "ApiStyle#GetTablePr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12531,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetTablePr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the table row properties of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiTableRowPr} If the type of this style is not a <code>\"table\"</code> then it will return\n\t *     <code>null</code>.\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetTableRowPr.js\n\t */",
        "description": "Returns the table row properties of the current style.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableRowPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableRowPr",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetTableRowPr",
        "longname": "ApiStyle#GetTableRowPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12546,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetTableRowPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the table cell properties of the current style.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiTableCellPr}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetTableCellPr.js\n\t */",
        "description": "Returns the table cell properties of the current style.",
        "memberof": "ApiStyle",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCellPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCellPr",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetTableCellPr",
        "longname": "ApiStyle#GetTableCellPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12560,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetTableCellPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the reference to the parent style which this style inherits from in the style hierarchy.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStyle} oStyle - The parent style which the style inherits properties from.\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/SetBasedOn.js\n\t */",
        "description": "Specifies the reference to the parent style which this style inherits from in the style hierarchy.",
        "memberof": "ApiStyle",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle"
                    }
                },
                "name": "oStyle",
                "description": "The parent style which the style inherits properties from.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetBasedOn",
        "longname": "ApiStyle#SetBasedOn",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12574,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/SetBasedOn.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of formatting properties which will be conditionally applied to the parts of a table that match the \n\t * requirement specified in the sType parameter.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @param {TableStyleOverrideType} [sType=\"wholeTable\"] - The table part which the formatting properties must be applied to.\n\t * @returns {ApiTableStylePr}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/GetConditionalTableStyle.js\n\t */",
        "description": "Returns a set of formatting properties which will be conditionally applied to the parts of a table that match the \nrequirement specified in the sType parameter.",
        "memberof": "ApiStyle",
        "params": [
            {
                "type": {
                    "names": [
                        "TableStyleOverrideType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TableStyleOverrideType"
                    }
                },
                "name": "sType",
                "description": "The table part which the formatting properties must be applied to.",
                "optional": true,
                "defaultvalue": "\"wholeTable\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableStylePr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableStylePr"
                    }
                }
            }
        ],
        "name": "GetConditionalTableStyle",
        "longname": "ApiStyle#GetConditionalTableStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12590,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/GetConditionalTableStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiStyle object into the JSON object.\n\t * @memberof ApiStyle\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiStyle/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiStyle object into the JSON object.",
        "memberof": "ApiStyle",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiStyle#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12629,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStyle/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTextPr class.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"textPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTextPr class.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"textPr\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"textPr\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTextPr#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12652,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * The text style base method.\n\t * <note>This method is not used by itself, as it only forms the basis for the {@link ApiRun#SetStyle} method which sets\n\t * the selected or created style to the text.</note>\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStyle} oStyle - The style which must be applied to the text character.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetStyle.js\n\t */",
        "description": "The text style base method.\n<note>This method is not used by itself, as it only forms the basis for the {@link ApiRun#SetStyle} method which sets\nthe selected or created style to the text.</note>",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle"
                    }
                },
                "name": "oStyle",
                "description": "The style which must be applied to the text character.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetStyle",
        "longname": "ApiTextPr#SetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12666,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the style of the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiStyle} - The used style.\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetStyle.js\n\t */",
        "description": "Gets the style of the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetStyle",
        "longname": "ApiTextPr#GetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12684,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the bold property to the text character.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isBold - Specifies that the contents of the run are displayed bold.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetBold.js\n\t */",
        "description": "Sets the bold property to the text character.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBold",
                "description": "Specifies that the contents of the run are displayed bold.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetBold",
        "longname": "ApiTextPr#SetBold",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12705,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetBold.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the bold property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetBold.js\n\t */",
        "description": "Gets the bold property from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetBold",
        "longname": "ApiTextPr#GetBold",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12720,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetBold.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the italic property to the text character.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isItalic - Specifies that the contents of the current run are displayed italicized.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetItalic.js\n\t */",
        "description": "Sets the italic property to the text character.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isItalic",
                "description": "Specifies that the contents of the current run are displayed italicized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetItalic",
        "longname": "ApiTextPr#SetItalic",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12733,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetItalic.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the italic property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetItalic.js\n\t */",
        "description": "Gets the italic property from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetItalic",
        "longname": "ApiTextPr#GetItalic",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12748,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetItalic.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the run are displayed with a single horizontal line through the center of the line.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isStrikeout - Specifies that the contents of the current run are displayed struck through.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetStrikeout.js\n\t */",
        "description": "Specifies that the contents of the run are displayed with a single horizontal line through the center of the line.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isStrikeout",
                "description": "Specifies that the contents of the current run are displayed struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetStrikeout",
        "longname": "ApiTextPr#SetStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12761,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the strikeout property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetStrikeout.js\n\t */",
        "description": "Gets the strikeout property from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetStrikeout",
        "longname": "ApiTextPr#GetStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12776,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the run are displayed along with a line appearing directly below the character\n\t * (less than all the spacing above and below the characters on the line).\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isUnderline - Specifies that the contents of the current run are displayed underlined.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetUnderline.js\n\t */",
        "description": "Specifies that the contents of the run are displayed along with a line appearing directly below the character\n(less than all the spacing above and below the characters on the line).",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isUnderline",
                "description": "Specifies that the contents of the current run are displayed underlined.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetUnderline",
        "longname": "ApiTextPr#SetUnderline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12790,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetUnderline.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the underline property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetUnderline.js\n\t */",
        "description": "Gets the underline property from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetUnderline",
        "longname": "ApiTextPr#GetUnderline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12805,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetUnderline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets all 4 font slots with the specified font family.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {string} sFontFamily - The font family or families used for the current text run.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetFontFamily.js\n\t */",
        "description": "Sets all 4 font slots with the specified font family.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sFontFamily",
                "description": "The font family or families used for the current text run.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetFontFamily",
        "longname": "ApiTextPr#SetFontFamily",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12818,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetFontFamily.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the font family from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetFontFamily.js\n\t */",
        "description": "Gets the font family from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetFontFamily",
        "longname": "ApiTextPr#GetFontFamily",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12833,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetFontFamily.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the font size to the characters of the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {hps} nSize - The text size value measured in half-points (1/144 of an inch).\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetFontSize.js\n\t */",
        "description": "Sets the font size to the characters of the current text run.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "nSize",
                "description": "The text size value measured in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetFontSize",
        "longname": "ApiTextPr#SetFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12846,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the font size from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?hps}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetFontSize.js\n\t */",
        "description": "Gets the font size from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetFontSize",
        "longname": "ApiTextPr#GetFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12861,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text color to the current text run in the RGB format.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - If this parameter is set to \"true\", then r,g,b parameters will be ignored.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetColor.js\n\t */",
        "description": "Sets the text color to the current text run in the RGB format.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAuto",
                "description": "If this parameter is set to \"true\", then r,g,b parameters will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetColor",
        "longname": "ApiTextPr#SetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12881,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the RGB color from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiRGBColor}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetColor.js\n\t */",
        "description": "Gets the RGB color from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRGBColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRGBColor",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetColor",
        "longname": "ApiTextPr#GetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12896,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the alignment which will be applied to the contents of the run in relation to the default appearance of the run text:\n\t * <b>\"baseline\"</b> - the characters in the current text run will be aligned by the default text baseline.\n\t * <b>\"subscript\"</b> - the characters in the current text run will be aligned below the default text baseline.\n\t * <b>\"superscript\"</b> - the characters in the current text run will be aligned above the default text baseline.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {(\"baseline\" | \"subscript\" | \"superscript\")} sType - The vertical alignment type applied to the text contents.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetVertAlign.js\n\t */",
        "description": "Specifies the alignment which will be applied to the contents of the run in relation to the default appearance of the run text:\n<b>\"baseline\"</b> - the characters in the current text run will be aligned by the default text baseline.\n<b>\"subscript\"</b> - the characters in the current text run will be aligned below the default text baseline.\n<b>\"superscript\"</b> - the characters in the current text run will be aligned above the default text baseline.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "\"baseline\"",
                        "\"subscript\"",
                        "\"superscript\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"baseline\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"subscript\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"superscript\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The vertical alignment type applied to the text contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetVertAlign",
        "longname": "ApiTextPr#SetVertAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12917,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetVertAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the vertical alignment type from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetVertAlign.js\n\t */",
        "description": "Gets the vertical alignment type from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetVertAlign",
        "longname": "ApiTextPr#GetVertAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12938,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetVertAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a highlighting color which is added to the text properties and applied as a background to the contents of the current run/range/paragraph.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {highlightColor} sColor - Available highlight color.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetHighlight.js\n\t */",
        "description": "Specifies a highlighting color which is added to the text properties and applied as a background to the contents of the current run/range/paragraph.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "highlightColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "highlightColor"
                    }
                },
                "name": "sColor",
                "description": "Available highlight color.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetHighlight",
        "longname": "ApiTextPr#SetHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12961,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the highlight property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetHighlight.js\n\t */",
        "description": "Gets the highlight property from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetHighlight",
        "longname": "ApiTextPr#GetHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12994,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text spacing measured in twentieths of a point.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nSpacing - The value of the text spacing measured in twentieths of a point (1/1440 of an inch).\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetSpacing.js\n\t */",
        "description": "Sets the text spacing measured in twentieths of a point.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nSpacing",
                "description": "The value of the text spacing measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetSpacing",
        "longname": "ApiTextPr#SetSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13013,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text spacing from the current text properties measured in twentieths of a point.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?twips}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetSpacing.js\n\t */",
        "description": "Gets the text spacing from the current text properties measured in twentieths of a point.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetSpacing",
        "longname": "ApiTextPr#GetSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13028,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the run are displayed with two horizontal lines through each character displayed on the line.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isDoubleStrikeout - Specifies that the contents of the current run are displayed double struck through.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetDoubleStrikeout.js\n\t */",
        "description": "Specifies that the contents of the run are displayed with two horizontal lines through each character displayed on the line.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isDoubleStrikeout",
                "description": "Specifies that the contents of the current run are displayed double struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetDoubleStrikeout",
        "longname": "ApiTextPr#SetDoubleStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13046,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetDoubleStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the double strikeout property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetDoubleStrikeout.js\n\t */",
        "description": "Gets the double strikeout property from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetDoubleStrikeout",
        "longname": "ApiTextPr#GetDoubleStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13061,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetDoubleStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that any lowercase characters in the text run are formatted for display only as their capital letter character equivalents.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isCaps - Specifies that the contents of the current run are displayed capitalized.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetCaps.js\n\t */",
        "description": "Specifies that any lowercase characters in the text run are formatted for display only as their capital letter character equivalents.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isCaps",
                "description": "Specifies that the contents of the current run are displayed capitalized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetCaps",
        "longname": "ApiTextPr#SetCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13074,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether the text with the current text properties are capitalized.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetCaps.js\n\t */",
        "description": "Specifies whether the text with the current text properties are capitalized.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetCaps",
        "longname": "ApiTextPr#GetCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13089,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that all the small letter characters in the text run are formatted for display only as their capital\n\t * letter character equivalents which are two points smaller than the actual font size specified for this text.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isSmallCaps - Specifies if the contents of the current run are displayed capitalized two points smaller or not.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetSmallCaps.js\n\t */",
        "description": "Specifies that all the small letter characters in the text run are formatted for display only as their capital\nletter character equivalents which are two points smaller than the actual font size specified for this text.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isSmallCaps",
                "description": "Specifies if the contents of the current run are displayed capitalized two points smaller or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetSmallCaps",
        "longname": "ApiTextPr#SetSmallCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13103,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetSmallCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether the text with the current text properties are displayed capitalized two points smaller than the actual font size.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetSmallCaps.js\n\t */",
        "description": "Specifies whether the text with the current text properties are displayed capitalized two points smaller than the actual font size.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetSmallCaps",
        "longname": "ApiTextPr#GetSmallCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13118,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetSmallCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount by which text is raised or lowered for this run in relation to the default\n\t * baseline of the surrounding non-positioned text.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {hps} nPosition - Specifies a positive (raised text) or negative (lowered text)\n\t * measurement in half-points (1/144 of an inch).\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetPosition.js\n\t */",
        "description": "Specifies an amount by which text is raised or lowered for this run in relation to the default\nbaseline of the surrounding non-positioned text.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps"
                    }
                },
                "name": "nPosition",
                "description": "Specifies a positive (raised text) or negative (lowered text)\nmeasurement in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetPosition",
        "longname": "ApiTextPr#SetPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13133,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text position from the current text properties measured in half-points (1/144 of an inch).\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?hps}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetPosition.js\n\t */",
        "description": "Gets the text position from the current text properties measured in half-points (1/144 of an inch).",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "hps",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetPosition",
        "longname": "ApiTextPr#GetPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13148,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the languages which will be used to check spelling and grammar (if requested) when processing\n\t * the contents of the text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLangId - The possible value for this parameter is a language identifier as defined by\n\t * RFC 4646/BCP 47. Example: \"en-CA\".\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetLanguage.js\n\t */",
        "description": "Specifies the languages which will be used to check spelling and grammar (if requested) when processing\nthe contents of the text run.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLangId",
                "description": "The possible value for this parameter is a language identifier as defined by\nRFC 4646/BCP 47. Example: \"en-CA\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetLanguage",
        "longname": "ApiTextPr#SetLanguage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13169,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetLanguage.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the language from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetLanguage.js\n\t */",
        "description": "Gets the language from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetLanguage",
        "longname": "ApiTextPr#GetLanguage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13188,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetLanguage.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type applied to the contents of the current text run.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the current text run.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ShdType"
                    }
                },
                "name": "sType",
                "description": "The shading type applied to the contents of the current text run.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetShd",
        "longname": "ApiTextPr#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13211,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text shading from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiRGBColor}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetShd.js\n\t */",
        "description": "Gets the text shading from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRGBColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRGBColor",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetShd",
        "longname": "ApiTextPr#GetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13226,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text fill to the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oApiFill - The color or pattern used to fill the text color.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetTextFill.js\n\t */",
        "description": "Sets the text fill to the current text run.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oApiFill",
                "description": "The color or pattern used to fill the text color.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetTextFill",
        "longname": "ApiTextPr#SetTextFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13277,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetTextFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text fill from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {ApiFill}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetTextFill.js\n\t */",
        "description": "Gets the text fill from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                }
            }
        ],
        "name": "GetTextFill",
        "longname": "ApiTextPr#GetTextFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13292,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetTextFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text outline to the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the text outline.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetOutLine.js\n\t */",
        "description": "Sets the text outline to the current text run.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the text outline.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "SetOutLine",
        "longname": "ApiTextPr#SetOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13310,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text outline from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {ApiStroke}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetOutLine.js\n\t */",
        "description": "Gets the text outline from the current text properties.",
        "memberof": "ApiTextPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                }
            }
        ],
        "name": "GetOutLine",
        "longname": "ApiTextPr#GetOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13325,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTextPr object into the JSON object.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTextPr object into the JSON object.",
        "memberof": "ApiTextPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTextPr#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13343,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiParaPr class.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"paraPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiParaPr class.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"paraPr\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"paraPr\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiParaPr#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13373,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * The paragraph style base method.\n\t * <note>This method is not used by itself, as it only forms the basis for the {@link ApiParagraph#SetStyle} method which sets the selected or created style for the paragraph.</note>\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStyle} oStyle - The style of the paragraph to be set.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetStyle.js\n\t */",
        "description": "The paragraph style base method.\n<note>This method is not used by itself, as it only forms the basis for the {@link ApiParagraph#SetStyle} method which sets the selected or created style for the paragraph.</note>",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle"
                    }
                },
                "name": "oStyle",
                "description": "The style of the paragraph to be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetStyle",
        "longname": "ApiParaPr#SetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13385,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph style method.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiStyle} - The style of the paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetStyle.js\n\t */",
        "description": "Returns the paragraph style method.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStyle",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetStyle",
        "longname": "ApiParaPr#GetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13400,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that any space before or after this paragraph set using the \n\t * {@link ApiParaPr#SetSpacingBefore} or {@link ApiParaPr#SetSpacingAfter} spacing element, should not be applied when the preceding and \n\t * following paragraphs are of the same paragraph style, affecting the top and bottom spacing respectively.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isContextualSpacing - The true value will enable the paragraph contextual spacing.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetContextualSpacing.js\n\t */",
        "description": "Specifies that any space before or after this paragraph set using the \n{@link ApiParaPr#SetSpacingBefore} or {@link ApiParaPr#SetSpacingAfter} spacing element, should not be applied when the preceding and \nfollowing paragraphs are of the same paragraph style, affecting the top and bottom spacing respectively.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isContextualSpacing",
                "description": "The true value will enable the paragraph contextual spacing.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetContextualSpacing",
        "longname": "ApiParaPr#SetContextualSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13430,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetContextualSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph left side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nValue - The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetIndLeft.js\n\t */",
        "description": "Sets the paragraph left side indentation.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetIndLeft",
        "longname": "ApiParaPr#SetIndLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13442,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetIndLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph left side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | undefined} - The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetIndLeft.js\n\t */",
        "description": "Returns the paragraph left side indentation.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "undefined"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "twips"
                            },
                            {
                                "type": "UndefinedLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetIndLeft",
        "longname": "ApiParaPr#GetIndLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13454,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetIndLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph right side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nValue - The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetIndRight.js\n\t */",
        "description": "Sets the paragraph right side indentation.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetIndRight",
        "longname": "ApiParaPr#SetIndRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13471,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetIndRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph right side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | undefined} - The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetIndRight.js\n\t */",
        "description": "Returns the paragraph right side indentation.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "undefined"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "twips"
                            },
                            {
                                "type": "UndefinedLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetIndRight",
        "longname": "ApiParaPr#GetIndRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13483,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetIndRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph first line indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nValue - The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetIndFirstLine.js\n\t */",
        "description": "Sets the paragraph first line indentation.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetIndFirstLine",
        "longname": "ApiParaPr#SetIndFirstLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13501,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetIndFirstLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph first line indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | undefined} - The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetIndFirstLine.js\n\t */",
        "description": "Returns the paragraph first line indentation.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "undefined"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "twips"
                            },
                            {
                                "type": "UndefinedLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetIndFirstLine",
        "longname": "ApiParaPr#GetIndFirstLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13513,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetIndFirstLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph contents justification.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {(\"left\" | \"right\" | \"both\" | \"center\")} sJc - The justification type that\n\t * will be applied to the paragraph contents.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetJc.js\n\t */",
        "description": "Sets the paragraph contents justification.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"both\"",
                        "\"center\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"left\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"right\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"both\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"center\""
                            }
                        ]
                    }
                },
                "name": "sJc",
                "description": "The justification type that\nwill be applied to the paragraph contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetJc",
        "longname": "ApiParaPr#SetJc",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13533,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetJc.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph contents justification.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {(\"left\" | \"right\" | \"both\" | \"center\" | undefined)} \n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetJc.js\n\t */",
        "description": "Returns the paragraph contents justification.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"both\"",
                        "\"center\"",
                        "undefined"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"left\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"right\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"both\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"center\""
                            },
                            {
                                "type": "UndefinedLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetJc",
        "longname": "ApiParaPr#GetJc",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13545,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetJc.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that when rendering the document using a page view, all lines of the current paragraph are maintained on a single page whenever possible.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isKeepLines - The true value enables the option to keep lines of the paragraph on a single page.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetKeepLines.js\n\t */",
        "description": "Specifies that when rendering the document using a page view, all lines of the current paragraph are maintained on a single page whenever possible.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isKeepLines",
                "description": "The true value enables the option to keep lines of the paragraph on a single page.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetKeepLines",
        "longname": "ApiParaPr#SetKeepLines",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13581,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetKeepLines.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that when rendering the document using a paginated view, the contents of the current paragraph are at least\n\t * partly rendered on the same page as the following paragraph whenever possible.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isKeepNext - The true value enables the option to keep lines of the paragraph on the same\n\t * page as the following paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetKeepNext.js\n\t */",
        "description": "Specifies that when rendering the document using a paginated view, the contents of the current paragraph are at least\npartly rendered on the same page as the following paragraph whenever possible.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isKeepNext",
                "description": "The true value enables the option to keep lines of the paragraph on the same\npage as the following paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetKeepNext",
        "longname": "ApiParaPr#SetKeepNext",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13595,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetKeepNext.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that when rendering the document using a paginated view, the contents of the current paragraph are rendered at\n\t * the beginning of a new page in the document.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isPageBreakBefore - The true value enables the option to render the contents of the paragraph\n\t * at the beginning of a new page in the document.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetPageBreakBefore.js\n\t */",
        "description": "Specifies that when rendering the document using a paginated view, the contents of the current paragraph are rendered at\nthe beginning of a new page in the document.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isPageBreakBefore",
                "description": "The true value enables the option to render the contents of the paragraph\nat the beginning of a new page in the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetPageBreakBefore",
        "longname": "ApiParaPr#SetPageBreakBefore",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13609,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetPageBreakBefore.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph line spacing. If the value of the sLineRule parameter is either \n\t * \"atLeast\" or \"exact\", then the value of nLine will be interpreted as twentieths of a point. If \n\t * the value of the sLineRule parameter is \"auto\", then the value of the \n\t * nLine parameter will be interpreted as 240ths of a line.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {(twips | line240)} nLine - The line spacing value measured either in twentieths of a point (1/1440 of an inch) or in 240ths of a line.\n\t * @param {(\"auto\" | \"atLeast\" | \"exact\")} sLineRule - The rule that determines the measuring units of the line spacing.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetSpacingLine.js\n\t */",
        "description": "Sets the paragraph line spacing. If the value of the sLineRule parameter is either \n\"atLeast\" or \"exact\", then the value of nLine will be interpreted as twentieths of a point. If \nthe value of the sLineRule parameter is \"auto\", then the value of the \nnLine parameter will be interpreted as 240ths of a line.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips",
                        "line240"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "twips"
                            },
                            {
                                "type": "NameExpression",
                                "name": "line240"
                            }
                        ]
                    }
                },
                "name": "nLine",
                "description": "The line spacing value measured either in twentieths of a point (1/1440 of an inch) or in 240ths of a line.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "\"auto\"",
                        "\"atLeast\"",
                        "\"exact\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"auto\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"atLeast\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"exact\""
                            }
                        ]
                    }
                },
                "name": "sLineRule",
                "description": "The rule that determines the measuring units of the line spacing.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetSpacingLine",
        "longname": "ApiParaPr#SetSpacingLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13625,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetSpacingLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph line spacing value.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | line240 | undefined} - to know is twips or line240 use ApiParaPr.prototype.GetSpacingLineRule().\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingLineValue.js\n\t */",
        "description": "Returns the paragraph line spacing value.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "line240",
                        "undefined"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "twips"
                            },
                            {
                                "type": "NameExpression",
                                "name": "line240"
                            },
                            {
                                "type": "UndefinedLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetSpacingLineValue",
        "longname": "ApiParaPr#GetSpacingLineValue",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13656,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingLineValue.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph line spacing rule.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"auto\" | \"atLeast\" | \"exact\" | undefined} \n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingLineRule.js\n\t */",
        "description": "Returns the paragraph line spacing rule.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"auto\"",
                        "\"atLeast\"",
                        "\"exact\"",
                        "undefined"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"auto\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"atLeast\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"exact\""
                            },
                            {
                                "type": "UndefinedLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetSpacingLineRule",
        "longname": "ApiParaPr#GetSpacingLineRule",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13689,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingLineRule.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the spacing before the current paragraph. If the value of the isBeforeAuto parameter is true, then \n\t * any value of the nBefore is ignored. If isBeforeAuto parameter is not specified, then \n\t * it will be interpreted as false.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nBefore - The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @param {boolean} [isBeforeAuto=false] - The true value disables the spacing before the current paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetSpacingBefore.js\n\t */",
        "description": "Sets the spacing before the current paragraph. If the value of the isBeforeAuto parameter is true, then \nany value of the nBefore is ignored. If isBeforeAuto parameter is not specified, then \nit will be interpreted as false.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nBefore",
                "description": "The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isBeforeAuto",
                "description": "The true value disables the spacing before the current paragraph.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetSpacingBefore",
        "longname": "ApiParaPr#SetSpacingBefore",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13727,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetSpacingBefore.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the spacing before value of the current paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips} - The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingBefore.js\n\t */",
        "description": "Returns the spacing before value of the current paragraph.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                }
            }
        ],
        "name": "GetSpacingBefore",
        "longname": "ApiParaPr#GetSpacingBefore",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13744,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingBefore.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the spacing after the current paragraph. If the value of the isAfterAuto parameter is true, then \n\t * any value of the nAfter is ignored. If isAfterAuto parameter is not specified, then it \n\t * will be interpreted as false.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nAfter - The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @param {boolean} [isAfterAuto=false] - The true value disables the spacing after the current paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetSpacingAfter.js\n\t */",
        "description": "Sets the spacing after the current paragraph. If the value of the isAfterAuto parameter is true, then \nany value of the nAfter is ignored. If isAfterAuto parameter is not specified, then it \nwill be interpreted as false.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nAfter",
                "description": "The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAfterAuto",
                "description": "The true value disables the spacing after the current paragraph.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetSpacingAfter",
        "longname": "ApiParaPr#SetSpacingAfter",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13766,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetSpacingAfter.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the spacing after value of the current paragraph. \n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips} - The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingAfter.js\n\t */",
        "description": "Returns the spacing after value of the current paragraph.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                }
            }
        ],
        "name": "GetSpacingAfter",
        "longname": "ApiParaPr#GetSpacingAfter",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13783,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingAfter.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type which will be applied to the contents of the current paragraph.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - The true value disables paragraph contents shading.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the paragraph.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ShdType"
                    }
                },
                "name": "sType",
                "description": "The shading type which will be applied to the contents of the current paragraph.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAuto",
                "description": "The true value disables paragraph contents shading.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetShd",
        "longname": "ApiParaPr#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13806,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the shading applied to the contents of the paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiRGBColor}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetShd.js\n\t */",
        "description": "Returns the shading applied to the contents of the paragraph.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRGBColor"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRGBColor",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetShd",
        "longname": "ApiParaPr#GetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13818,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed below a set of paragraphs which have the same paragraph border settings.\n\t * <note>The paragraphs of the same style going one by one are considered as a single block, so the border is added\n\t * to the whole block rather than to every paragraph in this block.</note>\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current bottom border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset below the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetBottomBorder.js\n\t */",
        "description": "Specifies the border which will be displayed below a set of paragraphs which have the same paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added\nto the whole block rather than to every paragraph in this block.</note>",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current bottom border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset below the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetBottomBorder",
        "longname": "ApiParaPr#SetBottomBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13859,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetBottomBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed at the left side of the page around the specified paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current left border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset to the left of the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetLeftBorder.js\n\t */",
        "description": "Specifies the border which will be displayed at the left side of the page around the specified paragraph.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current left border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset to the left of the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLeftBorder",
        "longname": "ApiParaPr#SetLeftBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13876,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetLeftBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed at the right side of the page around the specified paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current right border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset to the right of the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetRightBorder.js\n\t */",
        "description": "Specifies the border which will be displayed at the right side of the page around the specified paragraph.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current right border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset to the right of the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetRightBorder",
        "longname": "ApiParaPr#SetRightBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13893,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetRightBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed above a set of paragraphs which have the same set of paragraph border settings.\n\t * <note>The paragraphs of the same style going one by one are considered as a single block, so the border is added to the whole block rather than to every paragraph in this block.</note>\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current top border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset above the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetTopBorder.js\n\t */",
        "description": "Specifies the border which will be displayed above a set of paragraphs which have the same set of paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added to the whole block rather than to every paragraph in this block.</note>",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current top border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset above the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTopBorder",
        "longname": "ApiParaPr#SetTopBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13911,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetTopBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset between the paragraphs measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetBetweenBorder.js\n\t */",
        "description": "Specifies the border which will be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset between the paragraphs measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetBetweenBorder",
        "longname": "ApiParaPr#SetBetweenBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13928,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetBetweenBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isWidowControl - The true value means that a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetWidowControl.js\n\t */",
        "description": "Specifies whether a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isWidowControl",
                "description": "The true value means that a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetWidowControl",
        "longname": "ApiParaPr#SetWidowControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13940,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetWidowControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a sequence of custom tab stops which will be used for any tab characters in the current paragraph.\n\t * <b>Warning</b>: The lengths of aPos array and aVal array <b>MUST BE</b> equal to each other.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips[]} aPos - An array of the positions of custom tab stops with respect to the current page margins\n\t * measured in twentieths of a point (1/1440 of an inch).\n\t * @param {TabJc[]} aVal - An array of the styles of custom tab stops, which determines the behavior of the tab\n\t * stop and the alignment which will be applied to text entered at the current custom tab stop.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetTabs.js\n\t */",
        "description": "Specifies a sequence of custom tab stops which will be used for any tab characters in the current paragraph.\n<b>Warning</b>: The lengths of aPos array and aVal array <b>MUST BE</b> equal to each other.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<twips>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "twips",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aPos",
                "description": "An array of the positions of custom tab stops with respect to the current page margins\nmeasured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Array.<TabJc>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "TabJc",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aVal",
                "description": "An array of the styles of custom tab stops, which determines the behavior of the tab\nstop and the alignment which will be applied to text entered at the current custom tab stop.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTabs",
        "longname": "ApiParaPr#SetTabs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13956,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetTabs.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the current paragraph references a numbering definition instance in the current document.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiNumbering} oNumPr - Specifies a numbering definition.\n\t * @param {number} [nLvl=0] - Specifies a numbering level reference. If the current instance of the ApiParaPr class is direct\n\t * formatting of a paragraph, then this parameter MUST BE specified. Otherwise, if the current instance of the ApiParaPr class\n\t * is the part of ApiStyle properties, this parameter will be ignored.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetNumPr.js\n\t */",
        "description": "Specifies that the current paragraph references a numbering definition instance in the current document.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiNumbering"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiNumbering"
                    }
                },
                "name": "oNumPr",
                "description": "Specifies a numbering definition.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nLvl",
                "description": "Specifies a numbering level reference. If the current instance of the ApiParaPr class is direct\nformatting of a paragraph, then this parameter MUST BE specified. Otherwise, if the current instance of the ApiParaPr class\nis the part of ApiStyle properties, this parameter will be ignored.",
                "optional": true,
                "defaultvalue": 0
            }
        ],
        "returns": null,
        "name": "SetNumPr",
        "longname": "ApiParaPr#SetNumPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13979,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetNumPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline level for the specified properties.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {Number?} [nLvl=undefined] - 0 - based outline level. Possible values are: 0-8.\n\t * Note: to set no outline level use this method without parameter.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetOutlineLvl.js\n\t */",
        "description": "Sets the outline level for the specified properties.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number",
                        "nullable": true
                    }
                },
                "name": "nLvl",
                "description": "0 - based outline level. Possible values are: 0-8.\nNote: to set no outline level use this method without parameter.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetOutlineLvl",
        "longname": "ApiParaPr#SetOutlineLvl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14019,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetOutlineLvl.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the outline level of the specified properties.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {Number?}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetOutlineLvl.js\n\t */",
        "description": "Gets the outline level of the specified properties.",
        "memberof": "ApiParaPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetOutlineLvl",
        "longname": "ApiParaPr#GetOutlineLvl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14042,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetOutlineLvl.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiParaPr object into the JSON object.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiParaPr object into the JSON object.",
        "memberof": "ApiParaPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiParaPr#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14055,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiNumbering class.\n\t * @memberof ApiNumbering\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"numbering\"}\n\t * @see office-js-api/Examples/{Editor}/ApiNumbering/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiNumbering class.",
        "memberof": "ApiNumbering",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"numbering\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"numbering\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiNumbering#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14078,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumbering/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the specified level of the current numbering.\n\t * @memberof ApiNumbering\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nLevel - The numbering level index. This value MUST BE from 0 to 8.\n\t * @returns {ApiNumberingLevel}\n\t * @see office-js-api/Examples/{Editor}/ApiNumbering/Methods/GetLevel.js\n\t */",
        "description": "Returns the specified level of the current numbering.",
        "memberof": "ApiNumbering",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nLevel",
                "description": "The numbering level index. This value MUST BE from 0 to 8.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiNumberingLevel"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiNumberingLevel"
                    }
                }
            }
        ],
        "name": "GetLevel",
        "longname": "ApiNumbering#GetLevel",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14090,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumbering/Methods/GetLevel.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiNumbering object into the JSON object.\n\t * @memberof ApiNumbering\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiNumbering/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiNumbering object into the JSON object.",
        "memberof": "ApiNumbering",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiNumbering#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14101,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumbering/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiNumberingLevel class.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"numberingLevel\"}\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiNumberingLevel class.",
        "memberof": "ApiNumberingLevel",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"numberingLevel\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"numberingLevel\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiNumberingLevel#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14122,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the numbering definition.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiNumbering}\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/GetNumbering.js\n\t */",
        "description": "Returns the numbering definition.",
        "memberof": "ApiNumberingLevel",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiNumbering"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiNumbering"
                    }
                }
            }
        ],
        "name": "GetNumbering",
        "longname": "ApiNumberingLevel#GetNumbering",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14133,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/GetNumbering.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the level index.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/GetLevelIndex.js\n\t */",
        "description": "Returns the level index.",
        "memberof": "ApiNumberingLevel",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetLevelIndex",
        "longname": "ApiNumberingLevel#GetLevelIndex",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14144,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/GetLevelIndex.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the text properties which will be applied to the text in the current numbering level itself, not to the text in the subsequent paragraph.\n\t * <note>To change the text style of the paragraph, a style must be applied to it using the {@link ApiRun#SetStyle} method.</note>\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/GetTextPr.js\n\t */",
        "description": "Specifies the text properties which will be applied to the text in the current numbering level itself, not to the text in the subsequent paragraph.\n<note>To change the text style of the paragraph, a style must be applied to it using the {@link ApiRun#SetStyle} method.</note>",
        "memberof": "ApiNumberingLevel",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiNumberingLevel#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14156,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph properties which are applied to any numbered paragraph that references the given numbering definition and numbering level.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParaPr}\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/GetParaPr.js\n\t */",
        "description": "Returns the paragraph properties which are applied to any numbered paragraph that references the given numbering definition and numbering level.",
        "memberof": "ApiNumberingLevel",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParaPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParaPr"
                    }
                }
            }
        ],
        "name": "GetParaPr",
        "longname": "ApiNumberingLevel#GetParaPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14167,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/GetParaPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets one of the existing predefined numbering templates.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"none\" | \"bullet\" | \"1)\" | \"1.\" | \"I.\" | \"A.\" | \"a)\" | \"a.\" | \"i.\" )} sType - The predefined numbering template.\n\t * @param {string} [sSymbol=\"\"] - The symbol used for the list numbering. This parameter has the meaning only if the predefined numbering template is \"bullet\".\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/SetTemplateType.js\n\t */",
        "description": "Sets one of the existing predefined numbering templates.",
        "memberof": "ApiNumberingLevel",
        "params": [
            {
                "type": {
                    "names": [
                        "\"none\"",
                        "\"bullet\"",
                        "\"1)\"",
                        "\"1.\"",
                        "\"I.\"",
                        "\"A.\"",
                        "\"a)\"",
                        "\"a.\"",
                        "\"i.\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"none\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"bullet\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"1)\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"1.\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"I.\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"A.\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"a)\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"a.\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"i.\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The predefined numbering template.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sSymbol",
                "description": "The symbol used for the list numbering. This parameter has the meaning only if the predefined numbering template is \"bullet\".",
                "optional": true,
                "defaultvalue": "\"\""
            }
        ],
        "returns": null,
        "name": "SetTemplateType",
        "longname": "ApiNumberingLevel#SetTemplateType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14179,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/SetTemplateType.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets your own customized numbering type.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"none\" | \"bullet\" | \"decimal\" | \"lowerRoman\" | \"upperRoman\" | \"lowerLetter\" | \"upperLetter\" |\n\t *     \"decimalZero\")} sType - The custom numbering type used for the current numbering definition.\n\t * @param {string} sTextFormatString - Any text in this parameter will be taken as literal text to be repeated in each instance of this numbering level, except for any use of the percent symbol (%) followed by a number, which will be used to indicate the one-based index of the number to be used at this level. Any number of a level higher than this level will be ignored.\n\t * @param {(\"left\" | \"right\" | \"center\")} sAlign - Type of justification applied to the text run in the current numbering level.\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/SetCustomType.js\n\t */",
        "description": "Sets your own customized numbering type.",
        "memberof": "ApiNumberingLevel",
        "params": [
            {
                "type": {
                    "names": [
                        "\"none\"",
                        "\"bullet\"",
                        "\"decimal\"",
                        "\"lowerRoman\"",
                        "\"upperRoman\"",
                        "\"lowerLetter\"",
                        "\"upperLetter\"",
                        "\"decimalZero\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"none\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"bullet\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"decimal\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"lowerRoman\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"upperRoman\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"lowerLetter\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"upperLetter\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"decimalZero\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The custom numbering type used for the current numbering definition.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTextFormatString",
                "description": "Any text in this parameter will be taken as literal text to be repeated in each instance of this numbering level, except for any use of the percent symbol (%) followed by a number, which will be used to indicate the one-based index of the number to be used at this level. Any number of a level higher than this level will be ignored.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"center\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"left\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"right\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"center\""
                            }
                        ]
                    }
                },
                "name": "sAlign",
                "description": "Type of justification applied to the text run in the current numbering level.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCustomType",
        "longname": "ApiNumberingLevel#SetCustomType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14222,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/SetCustomType.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a one-based index which determines when a numbering level should restart to its starting value. A numbering level restarts when an instance of the specified numbering level which is higher (earlier than this level) is used in the given document contents. By default this value is true.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isRestart - The true value means that a numbering level will be restarted to its starting value.\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/SetRestart.js\n\t */",
        "description": "Specifies a one-based index which determines when a numbering level should restart to its starting value. A numbering level restarts when an instance of the specified numbering level which is higher (earlier than this level) is used in the given document contents. By default this value is true.",
        "memberof": "ApiNumberingLevel",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isRestart",
                "description": "The true value means that a numbering level will be restarted to its starting value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetRestart",
        "longname": "ApiNumberingLevel#SetRestart",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14259,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/SetRestart.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the starting value for the numbering used by the parent numbering level within a given numbering level definition. By default this value is 1.\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nStart - The starting value for the numbering used by the parent numbering level.\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/SetStart.js\n\t */",
        "description": "Specifies the starting value for the numbering used by the parent numbering level within a given numbering level definition. By default this value is 1.",
        "memberof": "ApiNumberingLevel",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nStart",
                "description": "The starting value for the numbering used by the parent numbering level.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetStart",
        "longname": "ApiNumberingLevel#SetStart",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14270,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/SetStart.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the content which will be added between the given numbering level text and the text of every numbered paragraph which references that numbering level. By default this value is \"tab\".\n\t * @memberof ApiNumberingLevel\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"space\" | \"tab\" | \"none\")} sType - The content added between the numbering level text and the text in the numbered paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiNumberingLevel/Methods/SetSuff.js\n\t */",
        "description": "Specifies the content which will be added between the given numbering level text and the text of every numbered paragraph which references that numbering level. By default this value is \"tab\".",
        "memberof": "ApiNumberingLevel",
        "params": [
            {
                "type": {
                    "names": [
                        "\"space\"",
                        "\"tab\"",
                        "\"none\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"space\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"tab\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"none\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The content added between the numbering level text and the text in the numbered paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetSuff",
        "longname": "ApiNumberingLevel#SetSuff",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14281,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiNumberingLevel/Methods/SetSuff.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTablePr class.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tablePr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTablePr class.",
        "memberof": "ApiTablePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tablePr\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"tablePr\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTablePr#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14304,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a number of columns which will comprise each table column band for this table style.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nCount - The number of columns measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetStyleColBandSize.js\n\t */",
        "description": "Specifies a number of columns which will comprise each table column band for this table style.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nCount",
                "description": "The number of columns measured in positive integers.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetStyleColBandSize",
        "longname": "ApiTablePr#SetStyleColBandSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14315,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetStyleColBandSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a number of rows which will comprise each table row band for this table style.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nCount - The number of rows measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetStyleRowBandSize.js\n\t */",
        "description": "Specifies a number of rows which will comprise each table row band for this table style.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nCount",
                "description": "The number of rows measured in positive integers.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetStyleRowBandSize",
        "longname": "ApiTablePr#SetStyleRowBandSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14327,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetStyleRowBandSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the alignment of the current table with respect to the text margins in the current section.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"left\" | \"right\" | \"center\")} sJcType - The alignment type used for the current table placement.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetJc.js\n\t */",
        "description": "Specifies the alignment of the current table with respect to the text margins in the current section.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"center\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"left\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"right\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"center\""
                            }
                        ]
                    }
                },
                "name": "sJcType",
                "description": "The alignment type used for the current table placement.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetJc",
        "longname": "ApiTablePr#SetJc",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14339,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetJc.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading which is applied to the extents of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type applied to the extents of the current table.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - The true value disables the SetShd method use.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading which is applied to the extents of the current table.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ShdType"
                    }
                },
                "name": "sType",
                "description": "The shading type applied to the extents of the current table.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAuto",
                "description": "The true value disables the SetShd method use.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetShd",
        "longname": "ApiTablePr#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14360,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the top of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The top border style.\n\t * @param {pt_8} nSize - The width of the current top border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the top part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderTop.js\n\t */",
        "description": "Sets the border which will be displayed at the top of the current table.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The top border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current top border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the top part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderTop",
        "longname": "ApiTablePr#SetTableBorderTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14377,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the bottom of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The bottom border style.\n\t * @param {pt_8} nSize - The width of the current bottom border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the bottom part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderBottom.js\n\t */",
        "description": "Sets the border which will be displayed at the bottom of the current table.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The bottom border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current bottom border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the bottom part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderBottom",
        "longname": "ApiTablePr#SetTableBorderBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14394,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed on the left of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The left border style.\n\t * @param {pt_8} nSize - The width of the current left border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the left part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderLeft.js\n\t */",
        "description": "Sets the border which will be displayed on the left of the current table.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The left border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current left border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the left part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderLeft",
        "longname": "ApiTablePr#SetTableBorderLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14411,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed on the right of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The right border style.\n\t * @param {pt_8} nSize - The width of the current right border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the right part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderRight.js\n\t */",
        "description": "Sets the border which will be displayed on the right of the current table.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The right border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current right border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the right part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderRight",
        "longname": "ApiTablePr#SetTableBorderRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14428,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed on all horizontal table cell borders which are not on the outmost edge\n\t * of the parent table (all horizontal borders which are not the topmost or bottommost borders).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The horizontal table cell border style.\n\t * @param {pt_8} nSize - The width of the current border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the horizontal table cells of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderInsideH.js\n\t */",
        "description": "Specifies the border which will be displayed on all horizontal table cell borders which are not on the outmost edge\nof the parent table (all horizontal borders which are not the topmost or bottommost borders).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The horizontal table cell border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the horizontal table cells of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderInsideH",
        "longname": "ApiTablePr#SetTableBorderInsideH",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14446,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderInsideH.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed on all vertical table cell borders which are not on the outmost edge\n\t * of the parent table (all vertical borders which are not the leftmost or rightmost borders).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The vertical table cell border style.\n\t * @param {pt_8} nSize - The width of the current border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the vertical table cells of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderInsideV.js\n\t */",
        "description": "Specifies the border which will be displayed on all vertical table cell borders which are not on the outmost edge\nof the parent table (all vertical borders which are not the leftmost or rightmost borders).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The vertical table cell border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the vertical table cells of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderInsideV",
        "longname": "ApiTablePr#SetTableBorderInsideV",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14464,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderInsideV.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\n\t * of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space below the bottom extent of the cell measured in\n\t * twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginBottom.js\n\t */",
        "description": "Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\nof all table cells within the parent table (or table row).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space below the bottom extent of the cell measured in\ntwentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginBottom",
        "longname": "ApiTablePr#SetTableCellMarginBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14479,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the left extent of the cell contents and the left\n\t * border of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space to the left extent of the cell measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginLeft.js\n\t */",
        "description": "Specifies an amount of space which will be left between the left extent of the cell contents and the left\nborder of all table cells within the parent table (or table row).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space to the left extent of the cell measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginLeft",
        "longname": "ApiTablePr#SetTableCellMarginLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14492,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the right extent of the cell contents and the right\n\t * border of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space to the right extent of the cell measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginRight.js\n\t */",
        "description": "Specifies an amount of space which will be left between the right extent of the cell contents and the right\nborder of all table cells within the parent table (or table row).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space to the right extent of the cell measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginRight",
        "longname": "ApiTablePr#SetTableCellMarginRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14505,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the top extent of the cell contents and the top border\n\t * of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space above the top extent of the cell measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginTop.js\n\t */",
        "description": "Specifies an amount of space which will be left between the top extent of the cell contents and the top border\nof all table cells within the parent table (or table row).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space above the top extent of the cell measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginTop",
        "longname": "ApiTablePr#SetTableCellMarginTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14518,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the default table cell spacing (the spacing between adjacent cells and the edges of the table).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - Spacing value measured in twentieths of a point (1/1440 of an inch). <code>\"Null\"</code> means that no spacing will be applied.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetCellSpacing.js\n\t */",
        "description": "Specifies the default table cell spacing (the spacing between adjacent cells and the edges of the table).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips",
                        "nullable": true
                    }
                },
                "name": "nValue",
                "description": "Spacing value measured in twentieths of a point (1/1440 of an inch). <code>\"Null\"</code> means that no spacing will be applied.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellSpacing",
        "longname": "ApiTablePr#SetCellSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14530,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetCellSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the indentation which will be added before the leading edge of the current table in the document\n\t * (the left edge in the left-to-right table, and the right edge in the right-to-left table).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableInd.js\n\t */",
        "description": "Specifies the indentation which will be added before the leading edge of the current table in the document\n(the left edge in the left-to-right table, and the right edge in the right-to-left table).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableInd",
        "longname": "ApiTablePr#SetTableInd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14546,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableInd.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the preferred width to the current table.\n\t * <note>Tables are created with the {@link ApiTable#SetWidth} method properties set by default, which always override the {@link ApiTablePr#SetWidth} method properties. That is why there is no use to try and apply {@link ApiTablePr#SetWidth}. We recommend you to use the  {@link ApiTablePr#SetWidth} method instead.</note>\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {TableWidth} sType - Type of the width value from one of the available width values types.\n\t * @param {number} [nValue] - The table width value measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetWidth.js\n\t */",
        "description": "Sets the preferred width to the current table.\n<note>Tables are created with the {@link ApiTable#SetWidth} method properties set by default, which always override the {@link ApiTablePr#SetWidth} method properties. That is why there is no use to try and apply {@link ApiTablePr#SetWidth}. We recommend you to use the  {@link ApiTablePr#SetWidth} method instead.</note>",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "TableWidth"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TableWidth"
                    }
                },
                "name": "sType",
                "description": "Type of the width value from one of the available width values types.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nValue",
                "description": "The table width value measured in positive integers.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetWidth",
        "longname": "ApiTablePr#SetWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14560,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the algorithm which will be used to lay out the contents of the current table within the document.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"autofit\" | \"fixed\")} sType - The type of the table layout in the document.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableLayout.js\n\t */",
        "description": "Specifies the algorithm which will be used to lay out the contents of the current table within the document.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "\"autofit\"",
                        "\"fixed\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"autofit\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"fixed\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The type of the table layout in the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableLayout",
        "longname": "ApiTablePr#SetTableLayout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14572,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableLayout.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the table title (caption).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sTitle - The table title to be set.\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableTitle.js\n\t */",
        "description": "Sets the table title (caption).",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTitle",
                "description": "The table title to be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTableTitle",
        "longname": "ApiTablePr#SetTableTitle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14589,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableTitle.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the table title (caption).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {string}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/GetTableTitle.js\n\t */",
        "description": "Returns the table title (caption).",
        "memberof": "ApiTablePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetTableTitle",
        "longname": "ApiTablePr#GetTableTitle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14605,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/GetTableTitle.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the table description.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sDescr - The table description to be set.\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableDescription.js\n\t */",
        "description": "Sets the table description.",
        "memberof": "ApiTablePr",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sDescr",
                "description": "The table description to be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTableDescription",
        "longname": "ApiTablePr#SetTableDescription",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14620,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableDescription.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the table description.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {string}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/GetTableDescription.js\n\t */",
        "description": "Returns the table description.",
        "memberof": "ApiTablePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetTableDescription",
        "longname": "ApiTablePr#GetTableDescription",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14636,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/GetTableDescription.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTablePr object into the JSON object.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTablePr object into the JSON object.",
        "memberof": "ApiTablePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTablePr#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14650,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTableRowPr class.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tableRowPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTableRowPr class.",
        "memberof": "ApiTableRowPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tableRowPr\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"tableRowPr\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTableRowPr#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14669,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the height to the current table row within the current table.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"auto\" | \"atLeast\")} sHRule - The rule to apply the height value to the current table row or ignore it. Use the <code>\"atLeast\"</code> value to enable the <code>SetHeight</code> method use.\n\t * @param {twips} [nValue] - The height for the current table row measured in twentieths of a point (1/1440 of an inch). This value will be ignored if <code>sHRule=\"auto\"<code>.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/SetHeight.js\n\t */",
        "description": "Sets the height to the current table row within the current table.",
        "memberof": "ApiTableRowPr",
        "params": [
            {
                "type": {
                    "names": [
                        "\"auto\"",
                        "\"atLeast\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"auto\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"atLeast\""
                            }
                        ]
                    }
                },
                "name": "sHRule",
                "description": "The rule to apply the height value to the current table row or ignore it. Use the <code>\"atLeast\"</code> value to enable the <code>SetHeight</code> method use.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nValue",
                "description": "The height for the current table row measured in twentieths of a point (1/1440 of an inch). This value will be ignored if <code>sHRule=\"auto\"<code>.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHeight",
        "longname": "ApiTableRowPr#SetHeight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14681,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/SetHeight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the current table row will be repeated at the top of each new page \n     * wherever this table is displayed. This gives this table row the behavior of a 'header' row on \n     * each of these pages. This element can be applied to any number of rows at the top of the \n     * table structure in order to generate multi-row table headers.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isHeader - The true value means that the current table row will be repeated at the top of each new page.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/SetTableHeader.js\n\t */",
        "description": "Specifies that the current table row will be repeated at the top of each new page \nwherever this table is displayed. This gives this table row the behavior of a 'header' row on \neach of these pages. This element can be applied to any number of rows at the top of the \ntable structure in order to generate multi-row table headers.",
        "memberof": "ApiTableRowPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isHeader",
                "description": "The true value means that the current table row will be repeated at the top of each new page.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableHeader",
        "longname": "ApiTableRowPr#SetTableHeader",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14700,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/SetTableHeader.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTableRowPr object into the JSON object.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTableRowPr object into the JSON object.",
        "memberof": "ApiTableRowPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTableRowPr#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14712,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTableCellPr class.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tableCellPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTableCellPr class.",
        "memberof": "ApiTableCellPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tableCellPr\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"tableCellPr\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTableCellPr#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14731,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type which will be applied to the contents of the current table cell.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - The true value disables the table cell contents shading.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ShdType"
                    }
                },
                "name": "sType",
                "description": "The shading type which will be applied to the contents of the current table cell.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isAuto",
                "description": "The true value disables the table cell contents shading.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetShd",
        "longname": "ApiTableCellPr#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14746,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\n\t * of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space below the bottom extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell bottom margin will be used, otherwise\n\t * the table cell bottom margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginBottom.js\n\t */",
        "description": "Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\nof a specific table cell within a table.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips",
                        "nullable": true
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space below the bottom extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell bottom margin will be used, otherwise\nthe table cell bottom margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginBottom",
        "longname": "ApiTableCellPr#SetCellMarginBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14761,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the left extent of the cell contents and \n\t * the border of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space to the left extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell left margin will be used, otherwise\n\t * the table cell left margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginLeft.js\n\t */",
        "description": "Specifies an amount of space which will be left between the left extent of the cell contents and \nthe border of a specific table cell within a table.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips",
                        "nullable": true
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space to the left extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell left margin will be used, otherwise\nthe table cell left margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginLeft",
        "longname": "ApiTableCellPr#SetCellMarginLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14790,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the right extent of the cell contents and the border of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space to the right extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell right margin will be used, otherwise\n\t * the table cell right margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginRight.js\n\t */",
        "description": "Specifies an amount of space which will be left between the right extent of the cell contents and the border of a specific table cell within a table.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips",
                        "nullable": true
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space to the right extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell right margin will be used, otherwise\nthe table cell right margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginRight",
        "longname": "ApiTableCellPr#SetCellMarginRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14818,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the upper extent of the cell contents\n\t * and the border of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space above the upper extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell top margin will be used, otherwise\n\t * the table cell top margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginTop.js\n\t */",
        "description": "Specifies an amount of space which will be left between the upper extent of the cell contents\nand the border of a specific table cell within a table.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips",
                        "nullable": true
                    }
                },
                "name": "nValue",
                "description": "The value for the amount of space above the upper extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell top margin will be used, otherwise\nthe table cell top margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginTop",
        "longname": "ApiTableCellPr#SetCellMarginTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14847,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the bottom of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell bottom border style.\n\t * @param {pt_8} nSize - The width of the current cell bottom border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the bottom part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderBottom.js\n\t */",
        "description": "Sets the border which will be displayed at the bottom of the current table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The cell bottom border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current cell bottom border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the bottom part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderBottom",
        "longname": "ApiTableCellPr#SetCellBorderBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14878,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed to the left of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell left border style.\n\t * @param {pt_8} nSize - The width of the current cell left border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the left part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderLeft.js\n\t */",
        "description": "Sets the border which will be displayed to the left of the current table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The cell left border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current cell left border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the left part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderLeft",
        "longname": "ApiTableCellPr#SetCellBorderLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14895,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed to the right of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell right border style.\n\t * @param {pt_8} nSize - The width of the current cell right border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the right part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderRight.js\n\t */",
        "description": "Sets the border which will be displayed to the right of the current table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The cell right border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current cell right border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the right part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderRight",
        "longname": "ApiTableCellPr#SetCellBorderRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14912,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the top of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell top border style.\n\t * @param {pt_8} nSize - The width of the current cell top border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the top part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderTop.js\n\t */",
        "description": "Sets the border which will be displayed at the top of the current table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "BorderType"
                    }
                },
                "name": "sType",
                "description": "The cell top border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt_8"
                    }
                },
                "name": "nSize",
                "description": "The width of the current cell top border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nSpace",
                "description": "The spacing offset in the top part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderTop",
        "longname": "ApiTableCellPr#SetCellBorderTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14929,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the preferred width to the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {TableWidth} sType - Type of the width value from one of the available width values types.\n\t * @param {number} [nValue] - The table cell width value measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetWidth.js\n\t */",
        "description": "Sets the preferred width to the current table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "TableWidth"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TableWidth"
                    }
                },
                "name": "sType",
                "description": "Type of the width value from one of the available width values types.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nValue",
                "description": "The table cell width value measured in positive integers.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetWidth",
        "longname": "ApiTableCellPr#SetWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14942,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the vertical alignment for the text contents within the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"top\" | \"center\" | \"bottom\")} sType - The available types of the vertical alignment for the text contents of the current table cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetVerticalAlign.js\n\t */",
        "description": "Specifies the vertical alignment for the text contents within the current table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "\"top\"",
                        "\"center\"",
                        "\"bottom\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"top\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"center\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"bottom\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The available types of the vertical alignment for the text contents of the current table cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVerticalAlign",
        "longname": "ApiTableCellPr#SetVerticalAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetVerticalAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the direction of the text flow for this table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"lrtb\" | \"tbrl\" | \"btlr\")} sType - The available types of the text direction in the table cell: <code>\"lrtb\"</code>\n\t * - text direction left-to-right moving from top to bottom, <code>\"tbrl\"</code> - text direction top-to-bottom moving from right\n\t * to left, <code>\"btlr\"</code> - text direction bottom-to-top moving from left to right.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetTextDirection.js\n\t */",
        "description": "Specifies the direction of the text flow for this table cell.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "\"lrtb\"",
                        "\"tbrl\"",
                        "\"btlr\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"lrtb\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"tbrl\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"btlr\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The available types of the text direction in the table cell: <code>\"lrtb\"</code>\n- text direction left-to-right moving from top to bottom, <code>\"tbrl\"</code> - text direction top-to-bottom moving from right\nto left, <code>\"btlr\"</code> - text direction bottom-to-top moving from left to right.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTextDirection",
        "longname": "ApiTableCellPr#SetTextDirection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14974,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetTextDirection.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies how the current table cell is laid out when the parent table is displayed in a document. This setting\n\t * only affects the behavior of the cell when the {@link ApiTablePr#SetTableLayout} table layout for this table is set to use the <code>\"autofit\"</code> algorithm.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isNoWrap - The true value means that the current table cell will not be wrapped in the parent table.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetNoWrap.js\n\t */",
        "description": "Specifies how the current table cell is laid out when the parent table is displayed in a document. This setting\nonly affects the behavior of the cell when the {@link ApiTablePr#SetTableLayout} table layout for this table is set to use the <code>\"autofit\"</code> algorithm.",
        "memberof": "ApiTableCellPr",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isNoWrap",
                "description": "The true value means that the current table cell will not be wrapped in the parent table.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetNoWrap",
        "longname": "ApiTableCellPr#SetNoWrap",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14993,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetNoWrap.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTableCellPr object into the JSON object.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTableCellPr object into the JSON object.",
        "memberof": "ApiTableCellPr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTableCellPr#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15005,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTableStylePr class.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tableStylePr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTableStylePr class.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tableStylePr\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"tableStylePr\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTableStylePr#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15024,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current table conditional style.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {TableStyleOverrideType}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/GetType.js\n\t */",
        "description": "Returns a type of the current table conditional style.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "TableStyleOverrideType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TableStyleOverrideType"
                    }
                }
            }
        ],
        "name": "GetType",
        "longname": "ApiTableStylePr#GetType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15035,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/GetType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of the text run properties which will be applied to all the text runs within the table which match the conditional formatting type.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/GetTextPr.js\n\t */",
        "description": "Returns a set of the text run properties which will be applied to all the text runs within the table which match the conditional formatting type.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiTableStylePr#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15046,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of the paragraph properties which will be applied to all the paragraphs within a table which match the conditional formatting type.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParaPr}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/GetParaPr.js\n\t */",
        "description": "Returns a set of the paragraph properties which will be applied to all the paragraphs within a table which match the conditional formatting type.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParaPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiParaPr"
                    }
                }
            }
        ],
        "name": "GetParaPr",
        "longname": "ApiTableStylePr#GetParaPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15057,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/GetParaPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of the table properties which will be applied to all the regions within a table which match the conditional formatting type.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTablePr}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/GetTablePr.js\n\t */",
        "description": "Returns a set of the table properties which will be applied to all the regions within a table which match the conditional formatting type.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTablePr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTablePr"
                    }
                }
            }
        ],
        "name": "GetTablePr",
        "longname": "ApiTableStylePr#GetTablePr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15068,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/GetTablePr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of the table row properties which will be applied to all the rows within a table which match the conditional formatting type.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableRowPr}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/GetTableRowPr.js\n\t */",
        "description": "Returns a set of the table row properties which will be applied to all the rows within a table which match the conditional formatting type.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableRowPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableRowPr"
                    }
                }
            }
        ],
        "name": "GetTableRowPr",
        "longname": "ApiTableStylePr#GetTableRowPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15079,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/GetTableRowPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a set of the table cell properties which will be applied to all the cells within a table which match the conditional formatting type.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTableCellPr}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/GetTableCellPr.js\n\t */",
        "description": "Returns a set of the table cell properties which will be applied to all the cells within a table which match the conditional formatting type.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCellPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTableCellPr"
                    }
                }
            }
        ],
        "name": "GetTableCellPr",
        "longname": "ApiTableStylePr#GetTableCellPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15090,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/GetTableCellPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTableStylePr object into the JSON object.\n\t * @memberof ApiTableStylePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTableStylePr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTableStylePr object into the JSON object.",
        "memberof": "ApiTableStylePr",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTableStylePr#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15101,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableStylePr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiDrawing class.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {\"drawing\"}\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiDrawing class.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"drawing\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"drawing\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiDrawing#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15124,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the size of the object (image, shape, chart) bounding box.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {EMU} nWidth - The object width measured in English measure units.\n\t * @param {EMU} nHeight - The object height measured in English measure units.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetSize.js\n\t */",
        "description": "Sets the size of the object (image, shape, chart) bounding box.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The object width measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The object height measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetSize",
        "longname": "ApiDrawing#SetSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15136,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the wrapping type of the current object (image, shape, chart). One of the following wrapping style types can be set:\n\t * <b>\"inline\"</b> - the object is considered to be a part of the text, like a character, so when the text moves, the object moves as well. In this case the positioning options are inaccessible.\n\t * If one of the following styles is selected, the object can be moved independently of the text and positioned on the page exactly:\n\t * <b>\"square\"</b> - the text wraps the rectangular box that bounds the object.\n\t * <b>\"tight\"</b> - the text wraps the actual object edges.\n\t * <b>\"through\"</b> - the text wraps around the object edges and fills in the open white space within the object.\n\t * <b>\"topAndBottom\"</b> - the text is only above and below the object.\n\t * <b>\"behind\"</b> - the text overlaps the object.\n\t * <b>\"inFront\"</b> - the object overlaps the text.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {\"inline\" | \"square\" | \"tight\" | \"through\" | \"topAndBottom\" | \"behind\" | \"inFront\"} sType - The wrapping style type available for the object.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetWrappingStyle.js\n\t */",
        "description": "Sets the wrapping type of the current object (image, shape, chart). One of the following wrapping style types can be set:\n<b>\"inline\"</b> - the object is considered to be a part of the text, like a character, so when the text moves, the object moves as well. In this case the positioning options are inaccessible.\nIf one of the following styles is selected, the object can be moved independently of the text and positioned on the page exactly:\n<b>\"square\"</b> - the text wraps the rectangular box that bounds the object.\n<b>\"tight\"</b> - the text wraps the actual object edges.\n<b>\"through\"</b> - the text wraps around the object edges and fills in the open white space within the object.\n<b>\"topAndBottom\"</b> - the text is only above and below the object.\n<b>\"behind\"</b> - the text overlaps the object.\n<b>\"inFront\"</b> - the object overlaps the text.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "\"inline\"",
                        "\"square\"",
                        "\"tight\"",
                        "\"through\"",
                        "\"topAndBottom\"",
                        "\"behind\"",
                        "\"inFront\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"inline\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"square\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"tight\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"through\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"topAndBottom\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"behind\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"inFront\""
                            }
                        ]
                    }
                },
                "name": "sType",
                "description": "The wrapping style type available for the object.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetWrappingStyle",
        "longname": "ApiDrawing#SetWrappingStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15162,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetWrappingStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies how the floating object will be horizontally aligned.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {RelFromH} [sRelativeFrom=\"page\"] - The document element which will be taken as a countdown point for the object horizontal alignment.\n\t * @param {(\"left\" | \"right\" | \"center\")} [sAlign=\"left\"] - The alignment type which will be used for the object horizontal alignment.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetHorAlign.js\n\t */",
        "description": "Specifies how the floating object will be horizontally aligned.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "RelFromH"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "RelFromH"
                    }
                },
                "name": "sRelativeFrom",
                "description": "The document element which will be taken as a countdown point for the object horizontal alignment.",
                "optional": true,
                "defaultvalue": "\"page\""
            },
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"center\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"left\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"right\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"center\""
                            }
                        ]
                    }
                },
                "name": "sAlign",
                "description": "The alignment type which will be used for the object horizontal alignment.",
                "optional": true,
                "defaultvalue": "\"left\""
            }
        ],
        "returns": null,
        "name": "SetHorAlign",
        "longname": "ApiDrawing#SetHorAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15224,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetHorAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies how the floating object will be vertically aligned.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {RelFromV} [sRelativeFrom=\"page\"] - The document element which will be taken as a countdown point for the object vertical alignment.\n\t * @param {(\"top\" | \"bottom\" | \"center\")} [sAlign=\"top\"] - The alingment type which will be used for the object vertical alignment.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetVerAlign.js\n\t */",
        "description": "Specifies how the floating object will be vertically aligned.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "RelFromV"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "RelFromV"
                    }
                },
                "name": "sRelativeFrom",
                "description": "The document element which will be taken as a countdown point for the object vertical alignment.",
                "optional": true,
                "defaultvalue": "\"page\""
            },
            {
                "type": {
                    "names": [
                        "\"top\"",
                        "\"bottom\"",
                        "\"center\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"top\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"bottom\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"center\""
                            }
                        ]
                    }
                },
                "name": "sAlign",
                "description": "The alingment type which will be used for the object vertical alignment.",
                "optional": true,
                "defaultvalue": "\"top\""
            }
        ],
        "returns": null,
        "name": "SetVerAlign",
        "longname": "ApiDrawing#SetVerAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15238,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetVerAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the absolute measurement for the horizontal positioning of the floating object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {RelFromH} sRelativeFrom - The document element which will be taken as a countdown point for the object horizontal alignment.\n\t * @param {EMU} nDistance - The distance from the right side of the document element to the floating object measured in English measure units.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetHorPosition.js\n\t */",
        "description": "Sets the absolute measurement for the horizontal positioning of the floating object.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "RelFromH"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "RelFromH"
                    }
                },
                "name": "sRelativeFrom",
                "description": "The document element which will be taken as a countdown point for the object horizontal alignment.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nDistance",
                "description": "The distance from the right side of the document element to the floating object measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorPosition",
        "longname": "ApiDrawing#SetHorPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15252,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetHorPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the absolute measurement for the vertical positioning of the floating object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {RelFromV} sRelativeFrom - The document element which will be taken as a countdown point for the object vertical alignment.\n\t * @param {EMU} nDistance - The distance from the bottom part of the document element to the floating object measured in English measure units.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetVerPosition.js\n\t */",
        "description": "Sets the absolute measurement for the vertical positioning of the floating object.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "RelFromV"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "RelFromV"
                    }
                },
                "name": "sRelativeFrom",
                "description": "The document element which will be taken as a countdown point for the object vertical alignment.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nDistance",
                "description": "The distance from the bottom part of the document element to the floating object measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVerPosition",
        "longname": "ApiDrawing#SetVerPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15266,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetVerPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the minimum distance which will be maintained between the edges of the current drawing object and any\n\t * subsequent text.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {EMU} nLeft - The distance from the left side of the current object and the subsequent text run measured in English measure units.\n\t * @param {EMU} nTop - The distance from the top side of the current object and the preceding text run measured in English measure units.\n\t * @param {EMU} nRight - The distance from the right side of the current object and the subsequent text run measured in English measure units.\n\t * @param {EMU} nBottom - The distance from the bottom side of the current object and the subsequent text run measured in English measure units.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetDistances.js\n\t */",
        "description": "Specifies the minimum distance which will be maintained between the edges of the current drawing object and any\nsubsequent text.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nLeft",
                "description": "The distance from the left side of the current object and the subsequent text run measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nTop",
                "description": "The distance from the top side of the current object and the preceding text run measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nRight",
                "description": "The distance from the right side of the current object and the subsequent text run measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nBottom",
                "description": "The distance from the bottom side of the current object and the subsequent text run measured in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetDistances",
        "longname": "ApiDrawing#SetDistances",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15283,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetDistances.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent paragraph that contains the graphic object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiParagraph | null} - returns null if parent paragraph doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetParentParagraph.js\n\t */",
        "description": "Returns a parent paragraph that contains the graphic object.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentParagraph",
        "longname": "ApiDrawing#GetParentParagraph",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15294,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetParentParagraph.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent content control that contains the graphic object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiBlockLvlSdt | null} - returns null if parent content control doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetParentContentControl.js\n\t */",
        "description": "Returns a parent content control that contains the graphic object.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBlockLvlSdt",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentContentControl",
        "longname": "ApiDrawing#GetParentContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15309,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetParentContentControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent table that contains the graphic object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTable | null} - returns null if parent table doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetParentTable.js\n\t */",
        "description": "Returns a parent table that contains the graphic object.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiDrawing#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15324,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent table cell that contains the graphic object.\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTableCell | null} - returns null if parent cell doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetParentTableCell.js\n\t */",
        "description": "Returns a parent table cell that contains the graphic object.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTableCell",
        "longname": "ApiDrawing#GetParentTableCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15338,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetParentTableCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Deletes the current graphic object. \n\t * @typeofeditors [\"CDE\"]\n\t * @return {boolean} - returns false if drawing object haven't parent.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/Delete.js\n\t */",
        "description": "Deletes the current graphic object.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiDrawing#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15352,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current graphic object. \n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiDrawing}\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/Copy.js\n\t */",
        "description": "Copies the current graphic object.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiDrawing#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15375,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Wraps the graphic object with a rich text content control.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nType - Defines if this method returns the ApiBlockLvlSdt (nType === 1) or ApiDrawing (any value except 1) object.\n\t * @return {ApiDrawing | ApiBlockLvlSdt}  \n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/InsertInContentControl.js\n\t */",
        "description": "Wraps the graphic object with a rich text content control.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nType",
                "description": "Defines if this method returns the ApiBlockLvlSdt (nType === 1) or ApiDrawing (any value except 1) object.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDrawing",
                        "ApiBlockLvlSdt"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiDrawing"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "InsertInContentControl",
        "longname": "ApiDrawing#InsertInContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15390,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/InsertInContentControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Inserts a paragraph at the specified position.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string | ApiParagraph} paragraph - Text or paragraph.\n\t * @param {string} sPosition - The position where the text or paragraph will be inserted (\"before\" or \"after\" the drawing specified).\n\t * @param {boolean} beRNewPara - Defines if this method returns a new paragraph (true) or the current ApiDrawing (false).\n\t * @return {ApiParagraph | ApiDrawing} - returns null if parent paragraph doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/InsertParagraph.js\n\t */",
        "description": "Inserts a paragraph at the specified position.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "string",
                        "ApiParagraph"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "string"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            }
                        ]
                    }
                },
                "name": "paragraph",
                "description": "Text or paragraph.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sPosition",
                "description": "The position where the text or paragraph will be inserted (\"before\" or \"after\" the drawing specified).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "beRNewPara",
                "description": "Defines if this method returns a new paragraph (true) or the current ApiDrawing (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiDrawing"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "InsertParagraph",
        "longname": "ApiDrawing#InsertParagraph",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15436,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/InsertParagraph.js"
        ]
    },
    {
        "comment": "/**\n\t * Selects the current graphic object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/Select.js\n\t */",
        "description": "Selects the current graphic object.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": null,
        "name": "Select",
        "longname": "ApiDrawing#Select",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15457,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/Select.js"
        ]
    },
    {
        "comment": "/**\n\t * Inserts a break at the specified location in the main document.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number}\tbreakType - The break type: page break (0) or line break (1).\n\t * @param {string}\tposition  - The position where the page or line break will be inserted (\"before\" or \"after\" the current drawing).\n\t * @returns {boolean}  - returns false if drawing object haven't parent run or params are invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/AddBreak.js\n\t */",
        "description": "Inserts a break at the specified location in the main document.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "breakType",
                "description": "The break type: page break (0) or line break (1).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "position",
                "description": "The position where the page or line break will be inserted (\"before\" or \"after\" the current drawing).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddBreak",
        "longname": "ApiDrawing#AddBreak",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15473,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/AddBreak.js"
        ]
    },
    {
        "comment": "/**\n\t * Flips the current drawing horizontally.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bFlip - Specifies if the figure will be flipped horizontally or not.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetHorFlip.js\n\t */",
        "description": "Flips the current drawing horizontally.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bFlip",
                "description": "Specifies if the figure will be flipped horizontally or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorFlip",
        "longname": "ApiDrawing#SetHorFlip",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15505,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetHorFlip.js"
        ]
    },
    {
        "comment": "/**\n\t * Flips the current drawing vertically.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bFlip - Specifies if the figure will be flipped vertically or not.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetVertFlip.js\n\t */",
        "description": "Flips the current drawing vertically.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bFlip",
                "description": "Specifies if the figure will be flipped vertically or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetVertFlip",
        "longname": "ApiDrawing#SetVertFlip",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15518,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetVertFlip.js"
        ]
    },
    {
        "comment": "/**\n\t * Scales the height of the figure using the specified coefficient.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} coefficient - The coefficient by which the figure height will be scaled.\n\t * @returns {boolean} - return false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/ScaleHeight.js\n\t */",
        "description": "Scales the height of the figure using the specified coefficient.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "coefficient",
                "description": "The coefficient by which the figure height will be scaled.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ScaleHeight",
        "longname": "ApiDrawing#ScaleHeight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15536,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/ScaleHeight.js"
        ]
    },
    {
        "comment": "/**\n\t * Scales the width of the figure using the specified coefficient.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} coefficient - The coefficient by which the figure width will be scaled.\n\t * @returns {boolean} - return false if param is invali.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/ScaleWidth.js\n\t */",
        "description": "Scales the width of the figure using the specified coefficient.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "coefficient",
                "description": "The coefficient by which the figure width will be scaled.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ScaleWidth",
        "longname": "ApiDrawing#ScaleWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15561,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/ScaleWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the fill formatting properties to the current graphic object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiFill} oFill - The fill type used to fill the graphic object.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/Fill.js\n\t */",
        "description": "Sets the fill formatting properties to the current graphic object.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to fill the graphic object.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Fill",
        "longname": "ApiDrawing#Fill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15585,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/Fill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline properties to the specified graphic object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the graphic object outline.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetOutLine.js\n\t */",
        "description": "Sets the outline properties to the specified graphic object.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the graphic object outline.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetOutLine",
        "longname": "ApiDrawing#SetOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15601,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next inline drawing object if exists. \n\t *  @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiDrawing | null} - returns null if drawing object is last.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetNextDrawing.js\n\t */",
        "description": "Returns the next inline drawing object if exists.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDrawing",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiDrawing"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNextDrawing",
        "longname": "ApiDrawing#GetNextDrawing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15616,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetNextDrawing.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous inline drawing object if exists. \n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiDrawing | null} - returns null if drawing object is first.\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetPrevDrawing.js\n\t */",
        "description": "Returns the previous inline drawing object if exists.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDrawing",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiDrawing"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPrevDrawing",
        "longname": "ApiDrawing#GetPrevDrawing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15644,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetPrevDrawing.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiDrawing object into the JSON object.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiDrawing object into the JSON object.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiDrawing#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15674,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the width of the current drawing.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {EMU}\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetWidth.js\n\t */",
        "description": "Returns the width of the current drawing.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                }
            }
        ],
        "name": "GetWidth",
        "longname": "ApiDrawing#GetWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15692,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the height of the current drawing.\n\t * @memberof ApiDrawing\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {EMU}\n\t * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetHeight.js\n\t */",
        "description": "Returns the height of the current drawing.",
        "memberof": "ApiDrawing",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                }
            }
        ],
        "name": "GetHeight",
        "longname": "ApiDrawing#GetHeight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15703,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetHeight.js"
        ]
    },
    {
        "comment": "/**\n     * Returns the lock value for the specified lock type of the current drawing.\n     * @typeofeditors [\"CDE\"]\n\t * @param {DrawingLockType} sType - Lock type in the string format.\n     * @returns {bool}\n     * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/GetLockValue.js\n\t */",
        "description": "Returns the lock value for the specified lock type of the current drawing.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "DrawingLockType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DrawingLockType"
                    }
                },
                "name": "sType",
                "description": "Lock type in the string format.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "bool"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "bool"
                    }
                }
            }
        ],
        "name": "GetLockValue",
        "longname": "ApiDrawing#GetLockValue",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15714,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/GetLockValue.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the lock value to the specified lock type of the current drawing.\n     * @typeofeditors [\"CDE\"]\n\t * @param {DrawingLockType} sType - Lock type in the string format.\n     * @param {bool} bValue - Specifies if the specified lock is applied to the current drawing.\n\t * @returns {bool}\n     * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetLockValue.js\n\t */",
        "description": "Sets the lock value to the specified lock type of the current drawing.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "DrawingLockType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DrawingLockType"
                    }
                },
                "name": "sType",
                "description": "Lock type in the string format.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "bool"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "bool"
                    }
                },
                "name": "bValue",
                "description": "Specifies if the specified lock is applied to the current drawing.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "bool"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "bool"
                    }
                }
            }
        ],
        "name": "SetLockValue",
        "longname": "ApiDrawing#SetLockValue",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15735,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetLockValue.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the properties from another drawing to the current drawing.\n\t * The following properties will be copied: horizontal and vertical alignment, distance between the edges of the current drawing object and any subsequent text, wrapping style, drawing name, title and description.\n     * @memberof ApiDrawing\n     * @param {ApiDrawing} oAnotherDrawing - The drawing which properties will be set to the current drawing.\n     * @typeofeditors [\"CDE\"]\n     * @returns {boolean}\n     * @see office-js-api/Examples/{Editor}/ApiDrawing/Methods/SetDrawingPrFromDrawing.js\n\t */",
        "description": "Sets the properties from another drawing to the current drawing.\nThe following properties will be copied: horizontal and vertical alignment, distance between the edges of the current drawing object and any subsequent text, wrapping style, drawing name, title and description.",
        "memberof": "ApiDrawing",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                },
                "name": "oAnotherDrawing",
                "description": "The drawing which properties will be set to the current drawing.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetDrawingPrFromDrawing",
        "longname": "ApiDrawing#SetDrawingPrFromDrawing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15760,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDrawing/Methods/SetDrawingPrFromDrawing.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiImage class.\n\t * @memberof ApiImage\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {\"image\"}\n\t * @see office-js-api/Examples/{Editor}/ApiImage/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiImage class.",
        "memberof": "ApiImage",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"image\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"image\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiImage#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15782,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiImage/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next inline image if exists. \n\t * @memberof ApiImage\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiImage | null} - returns null if image is last.\n\t * @see office-js-api/Examples/{Editor}/ApiImage/Methods/GetNextImage.js\n\t */",
        "description": "Returns the next inline image if exists.",
        "memberof": "ApiImage",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiImage",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiImage"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNextImage",
        "longname": "ApiImage#GetNextImage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15793,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiImage/Methods/GetNextImage.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous inline image if exists. \n\t * @memberof ApiImage\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiImage | null} - returns null if image is first.\n\t * @see office-js-api/Examples/{Editor}/ApiImage/Methods/GetPrevImage.js\n\t */",
        "description": "Returns the previous inline image if exists.",
        "memberof": "ApiImage",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiImage",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiImage"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPrevImage",
        "longname": "ApiImage#GetPrevImage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15820,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiImage/Methods/GetPrevImage.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiOleObject class.\n\t * @memberof ApiOleObject\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {\"oleObject\"}\n\t * @see office-js-api/Examples/{Editor}/ApiOleObject/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiOleObject class.",
        "memberof": "ApiOleObject",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"oleObject\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"oleObject\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiOleObject#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15854,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiOleObject/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the data to the current OLE object.\n\t * @memberof ApiOleObject\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {string} sData - The OLE object string data.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiOleObject/Methods/SetData.js\n\t */",
        "description": "Sets the data to the current OLE object.",
        "memberof": "ApiOleObject",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sData",
                "description": "The OLE object string data.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetData",
        "longname": "ApiOleObject#SetData",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15867,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiOleObject/Methods/SetData.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the string data from the current OLE object.\n\t * @memberof ApiOleObject\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiOleObject/Methods/GetData.js\n\t */",
        "description": "Returns the string data from the current OLE object.",
        "memberof": "ApiOleObject",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetData",
        "longname": "ApiOleObject#GetData",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15883,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiOleObject/Methods/GetData.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the application ID to the current OLE object.\n\t * @memberof ApiOleObject\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {string} sAppId - The application ID associated with the curent OLE object.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiOleObject/Methods/SetApplicationId.js\n\t */",
        "description": "Sets the application ID to the current OLE object.",
        "memberof": "ApiOleObject",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAppId",
                "description": "The application ID associated with the curent OLE object.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetApplicationId",
        "longname": "ApiOleObject#SetApplicationId",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiOleObject/Methods/SetApplicationId.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the application ID from the current OLE object.\n\t * @memberof ApiOleObject\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiOleObject/Methods/GetApplicationId.js\n\t */",
        "description": "Returns the application ID from the current OLE object.",
        "memberof": "ApiOleObject",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetApplicationId",
        "longname": "ApiOleObject#GetApplicationId",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15915,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiOleObject/Methods/GetApplicationId.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiShape class.\n\t * @memberof ApiShape\n\t * @typeofeditors [\"CDE\", \"CSE\"]\n\t * @returns {\"shape\"}\n\t * @see office-js-api/Examples/{Editor}/ApiShape/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiShape class.",
        "memberof": "ApiShape",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"shape\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"shape\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiShape#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15936,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiShape/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the shape inner contents where a paragraph or text runs can be inserted.\n\t * @memberof ApiShape\n\t * @typeofeditors [\"CDE\", \"CSE\"]\n\t * @returns {?ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiShape/Methods/GetDocContent.js\n\t */",
        "description": "Returns the shape inner contents where a paragraph or text runs can be inserted.",
        "memberof": "ApiShape",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetDocContent",
        "longname": "ApiShape#GetDocContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15947,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiShape/Methods/GetDocContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the shape inner contents where a paragraph or text runs can be inserted.\n\t * @memberof ApiShape\n\t * @typeofeditors [\"CDE\", \"CSE\"]\n\t * @returns {?ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiShape/Methods/GetContent.js\n\t */",
        "description": "Returns the shape inner contents where a paragraph or text runs can be inserted.",
        "memberof": "ApiShape",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetContent",
        "longname": "ApiShape#GetContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15962,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiShape/Methods/GetContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the vertical alignment to the shape content where a paragraph or text runs can be inserted.\n\t * @memberof ApiShape\n\t * @typeofeditors [\"CDE\", \"CSE\"]\n\t * @param {VerticalTextAlign} VerticalAlign - The type of the vertical alignment for the shape inner contents.\n\t * @see office-js-api/Examples/{Editor}/ApiShape/Methods/SetVerticalTextAlign.js\n\t */",
        "description": "Sets the vertical alignment to the shape content where a paragraph or text runs can be inserted.",
        "memberof": "ApiShape",
        "params": [
            {
                "type": {
                    "names": [
                        "VerticalTextAlign"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "VerticalTextAlign"
                    }
                },
                "name": "VerticalAlign",
                "description": "The type of the vertical alignment for the shape inner contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVerticalTextAlign",
        "longname": "ApiShape#SetVerticalTextAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15978,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiShape/Methods/SetVerticalTextAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text paddings to the current shape.\n\t * @memberof ApiShape\n\t * @typeofeditors [\"CDE\", \"CSE\"]\n\t * @param {?EMU} nLeft - Left padding.\n\t * @param {?EMU} nTop - Top padding.\n\t * @param {?EMU} nRight - Right padding.\n\t * @param {?EMU} nBottom - Bottom padding.\n\t * @see office-js-api/Examples/{Editor}/ApiShape/Methods/SetPaddings.js\n\t */",
        "description": "Sets the text paddings to the current shape.",
        "memberof": "ApiShape",
        "params": [
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU",
                        "nullable": true
                    }
                },
                "name": "nLeft",
                "description": "Left padding.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU",
                        "nullable": true
                    }
                },
                "name": "nTop",
                "description": "Top padding.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU",
                        "nullable": true
                    }
                },
                "name": "nRight",
                "description": "Right padding.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU",
                        "nullable": true
                    }
                },
                "name": "nBottom",
                "description": "Bottom padding.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetPaddings",
        "longname": "ApiShape#SetPaddings",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16012,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiShape/Methods/SetPaddings.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next inline shape if exists. \n\t * @memberof ApiShape\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiShape | null} - returns null if shape is last.\n\t * @see office-js-api/Examples/{Editor}/ApiShape/Methods/GetNextShape.js\n\t */",
        "description": "Returns the next inline shape if exists.",
        "memberof": "ApiShape",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiShape"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNextShape",
        "longname": "ApiShape#GetNextShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16031,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiShape/Methods/GetNextShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous inline shape if exists. \n\t * @memberof ApiShape\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiShape | null} - returns null is shape is first.\n\t * @see office-js-api/Examples/{Editor}/ApiShape/Methods/GetPrevShape.js\n\t */",
        "description": "Returns the previous inline shape if exists.",
        "memberof": "ApiShape",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiShape"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPrevShape",
        "longname": "ApiShape#GetPrevShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16058,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiShape/Methods/GetPrevShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiChart class.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"chart\"}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiChart class.",
        "memberof": "ApiChart",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"chart\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"chart\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiChart#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16091,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the chart object.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ChartType}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/GetChartType.js\n\t */",
        "description": "Returns a type of the chart object.",
        "memberof": "ApiChart",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ChartType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ChartType"
                    }
                }
            }
        ],
        "name": "GetChartType",
        "longname": "ApiChart#GetChartType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16103,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/GetChartType.js"
        ]
    },
    {
        "comment": "/**\n\t *  Specifies the chart title.\n\t *  @memberof ApiChart\n\t *  @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t *  @param {string} sTitle - The title which will be displayed for the current chart.\n\t *  @param {pt} nFontSize - The text size value measured in points.\n\t *  @param {?bool} bIsBold - Specifies if the chart title is written in bold font or not.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetTitle.js\n\t */",
        "description": "Specifies the chart title.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTitle",
                "description": "The title which will be displayed for the current chart.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nFontSize",
                "description": "The text size value measured in points.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "bool"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "bool",
                        "nullable": true
                    }
                },
                "name": "bIsBold",
                "description": "Specifies if the chart title is written in bold font or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTitle",
        "longname": "ApiChart#SetTitle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16122,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetTitle.js"
        ]
    },
    {
        "comment": "/**\n\t *  Specifies the chart horizontal axis title.\n\t *  @memberof ApiChart\n\t *  @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t *  @param {string} sTitle - The title which will be displayed for the horizontal axis of the current chart.\n\t *  @param {pt} nFontSize - The text size value measured in points.\n\t *  @param {?bool} bIsBold - Specifies if the horizontal axis title is written in bold font or not.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetHorAxisTitle.js\n\t */",
        "description": "Specifies the chart horizontal axis title.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTitle",
                "description": "The title which will be displayed for the horizontal axis of the current chart.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nFontSize",
                "description": "The text size value measured in points.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "bool"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "bool",
                        "nullable": true
                    }
                },
                "name": "bIsBold",
                "description": "Specifies if the horizontal axis title is written in bold font or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorAxisTitle",
        "longname": "ApiChart#SetHorAxisTitle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16136,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetHorAxisTitle.js"
        ]
    },
    {
        "comment": "/**\n\t *  Specifies the chart vertical axis title.\n\t *  @memberof ApiChart\n\t *  @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t *  @param {string} sTitle - The title which will be displayed for the vertical axis of the current chart.\n\t *  @param {pt} nFontSize - The text size value measured in points.\n\t *  @param {?bool} bIsBold - Specifies if the vertical axis title is written in bold font or not.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetVerAxisTitle.js\n\t */",
        "description": "Specifies the chart vertical axis title.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTitle",
                "description": "The title which will be displayed for the vertical axis of the current chart.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nFontSize",
                "description": "The text size value measured in points.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "bool"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "bool",
                        "nullable": true
                    }
                },
                "name": "bIsBold",
                "description": "Specifies if the vertical axis title is written in bold font or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVerAxisTitle",
        "longname": "ApiChart#SetVerAxisTitle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16150,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetVerAxisTitle.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the vertical axis orientation.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} bIsMinMax - The <code>true</code> value will set the normal data direction for the vertical axis (from minimum to maximum).\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetVerAxisOrientation.js\n\t */",
        "description": "Specifies the vertical axis orientation.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bIsMinMax",
                "description": "The <code>true</code> value will set the normal data direction for the vertical axis (from minimum to maximum).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVerAxisOrientation",
        "longname": "ApiChart#SetVerAxisOrientation",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16162,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetVerAxisOrientation.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the horizontal axis orientation.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} bIsMinMax - The <code>true</code> value will set the normal data direction for the horizontal axis (from minimum to maximum).\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetHorAxisOrientation.js\n\t */",
        "description": "Specifies the horizontal axis orientation.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bIsMinMax",
                "description": "The <code>true</code> value will set the normal data direction for the horizontal axis (from minimum to maximum).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorAxisOrientation",
        "longname": "ApiChart#SetHorAxisOrientation",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16173,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetHorAxisOrientation.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the chart legend position.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {\"left\" | \"top\" | \"right\" | \"bottom\" | \"none\"} sLegendPos - The position of the chart legend inside the chart window.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetLegendPos.js\n\t */",
        "description": "Specifies the chart legend position.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"top\"",
                        "\"right\"",
                        "\"bottom\"",
                        "\"none\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"left\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"top\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"right\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"bottom\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"none\""
                            }
                        ]
                    }
                },
                "name": "sLegendPos",
                "description": "The position of the chart legend inside the chart window.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLegendPos",
        "longname": "ApiChart#SetLegendPos",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16184,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetLegendPos.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the legend font size.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {pt} nFontSize - The text size value measured in points.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetLegendFontSize.js\n\t */",
        "description": "Specifies the legend font size.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nFontSize",
                "description": "The text size value measured in points.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLegendFontSize",
        "longname": "ApiChart#SetLegendFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16245,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetLegendFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies which chart data labels are shown for the chart.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} bShowSerName - Whether to show or hide the source table column names used for the data which the chart will be build from.\n\t * @param {boolean} bShowCatName - Whether to show or hide the source table row names used for the data which the chart will be build from.\n\t * @param {boolean} bShowVal - Whether to show or hide the chart data values.\n\t * @param {boolean} bShowPercent - Whether to show or hide the percent for the data values (works with stacked chart types).\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetShowDataLabels.js\n\t */",
        "description": "Specifies which chart data labels are shown for the chart.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowSerName",
                "description": "Whether to show or hide the source table column names used for the data which the chart will be build from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowCatName",
                "description": "Whether to show or hide the source table row names used for the data which the chart will be build from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowVal",
                "description": "Whether to show or hide the chart data values.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowPercent",
                "description": "Whether to show or hide the percent for the data values (works with stacked chart types).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetShowDataLabels",
        "longname": "ApiChart#SetShowDataLabels",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16260,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetShowDataLabels.js"
        ]
    },
    {
        "comment": "/**\n\t * Spicifies the show options for data labels.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {number} nSeriesIndex - The series index from the array of the data used to build the chart from.\n\t * @param {number} nPointIndex - The point index from this series.\n\t * @param {boolean} bShowSerName - Whether to show or hide the source table column names used for the data which the chart will be build from.\n\t * @param {boolean} bShowCatName - Whether to show or hide the source table row names used for the data which the chart will be build from.\n\t * @param {boolean} bShowVal - Whether to show or hide the chart data values.\n\t * @param {boolean} bShowPercent - Whether to show or hide the percent for the data values (works with stacked chart types).\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetShowPointDataLabel.js\n\t */",
        "description": "Spicifies the show options for data labels.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeriesIndex",
                "description": "The series index from the array of the data used to build the chart from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPointIndex",
                "description": "The point index from this series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowSerName",
                "description": "Whether to show or hide the source table column names used for the data which the chart will be build from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowCatName",
                "description": "Whether to show or hide the source table row names used for the data which the chart will be build from.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowVal",
                "description": "Whether to show or hide the chart data values.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bShowPercent",
                "description": "Whether to show or hide the percent for the data values (works with stacked chart types).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetShowPointDataLabel",
        "longname": "ApiChart#SetShowPointDataLabel",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16278,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetShowPointDataLabel.js"
        ]
    },
    {
        "comment": "/**\n\t * Spicifies tick labels position for the vertical axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {TickLabelPosition} sTickLabelPosition - The type for the position of chart vertical tick labels.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetVertAxisTickLabelPosition.js\n\t */",
        "description": "Spicifies tick labels position for the vertical axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "TickLabelPosition"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TickLabelPosition"
                    }
                },
                "name": "sTickLabelPosition",
                "description": "The type for the position of chart vertical tick labels.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVertAxisTickLabelPosition",
        "longname": "ApiChart#SetVertAxisTickLabelPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16290,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetVertAxisTickLabelPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Spicifies tick labels position for the horizontal axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {TickLabelPosition} sTickLabelPosition - The type for the position of chart horizontal tick labels.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetHorAxisTickLabelPosition.js\n\t */",
        "description": "Spicifies tick labels position for the horizontal axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "TickLabelPosition"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TickLabelPosition"
                    }
                },
                "name": "sTickLabelPosition",
                "description": "The type for the position of chart horizontal tick labels.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorAxisTickLabelPosition",
        "longname": "ApiChart#SetHorAxisTickLabelPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16302,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetHorAxisTickLabelPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies major tick mark for the horizontal axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {TickMark} sTickMark - The type of tick mark appearance.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetHorAxisMajorTickMark.js\n\t */",
        "description": "Specifies major tick mark for the horizontal axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "TickMark"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TickMark"
                    }
                },
                "name": "sTickMark",
                "description": "The type of tick mark appearance.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorAxisMajorTickMark",
        "longname": "ApiChart#SetHorAxisMajorTickMark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16314,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetHorAxisMajorTickMark.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies minor tick mark for the horizontal axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {TickMark} sTickMark - The type of tick mark appearance.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetHorAxisMinorTickMark.js\n\t */",
        "description": "Specifies minor tick mark for the horizontal axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "TickMark"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TickMark"
                    }
                },
                "name": "sTickMark",
                "description": "The type of tick mark appearance.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorAxisMinorTickMark",
        "longname": "ApiChart#SetHorAxisMinorTickMark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16325,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetHorAxisMinorTickMark.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies major tick mark for the vertical axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {TickMark} sTickMark - The type of tick mark appearance.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetVertAxisMajorTickMark.js\n\t */",
        "description": "Specifies major tick mark for the vertical axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "TickMark"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TickMark"
                    }
                },
                "name": "sTickMark",
                "description": "The type of tick mark appearance.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVertAxisMajorTickMark",
        "longname": "ApiChart#SetVertAxisMajorTickMark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16337,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetVertAxisMajorTickMark.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies minor tick mark for the vertical axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {TickMark} sTickMark - The type of tick mark appearance.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetVertAxisMinorTickMark.js\n\t */",
        "description": "Specifies minor tick mark for the vertical axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "TickMark"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TickMark"
                    }
                },
                "name": "sTickMark",
                "description": "The type of tick mark appearance.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVertAxisMinorTickMark",
        "longname": "ApiChart#SetVertAxisMinorTickMark",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16348,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetVertAxisMinorTickMark.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies major vertical gridline visual properties.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {?ApiStroke} oStroke - The stroke used to create the element shadow.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetMajorVerticalGridlines.js\n\t */",
        "description": "Specifies major vertical gridline visual properties.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke",
                        "nullable": true
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the element shadow.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetMajorVerticalGridlines",
        "longname": "ApiChart#SetMajorVerticalGridlines",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16359,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetMajorVerticalGridlines.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies minor vertical gridline visual properties.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {?ApiStroke} oStroke - The stroke used to create the element shadow.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetMinorVerticalGridlines.js\n\t */",
        "description": "Specifies minor vertical gridline visual properties.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke",
                        "nullable": true
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the element shadow.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetMinorVerticalGridlines",
        "longname": "ApiChart#SetMinorVerticalGridlines",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16371,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetMinorVerticalGridlines.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies major horizontal gridline visual properties.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {?ApiStroke} oStroke - The stroke used to create the element shadow.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetMajorHorizontalGridlines.js\n\t */",
        "description": "Specifies major horizontal gridline visual properties.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke",
                        "nullable": true
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the element shadow.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetMajorHorizontalGridlines",
        "longname": "ApiChart#SetMajorHorizontalGridlines",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16384,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetMajorHorizontalGridlines.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies minor horizontal gridline visual properties.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {?ApiStroke} oStroke - The stroke used to create the element shadow.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetMinorHorizontalGridlines.js\n\t */",
        "description": "Specifies minor horizontal gridline visual properties.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke",
                        "nullable": true
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the element shadow.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetMinorHorizontalGridlines",
        "longname": "ApiChart#SetMinorHorizontalGridlines",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16396,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetMinorHorizontalGridlines.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies font size for labels of the horizontal axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\"]\n\t * @param {pt} nFontSize - The text size value measured in points.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetHorAxisLablesFontSize.js\n\t */",
        "description": "Specifies font size for labels of the horizontal axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nFontSize",
                "description": "The text size value measured in points.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHorAxisLablesFontSize",
        "longname": "ApiChart#SetHorAxisLablesFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16409,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetHorAxisLablesFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies font size for labels of the vertical axis.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\"]\n\t * @param {pt} nFontSize - The text size value measured in points.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetVertAxisLablesFontSize.js\n\t */",
        "description": "Specifies font size for labels of the vertical axis.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "pt"
                    }
                },
                "name": "nFontSize",
                "description": "The text size value measured in points.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVertAxisLablesFontSize",
        "longname": "ApiChart#SetVertAxisLablesFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16420,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetVertAxisLablesFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the next inline chart if exists.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiChart | null} - returns null if chart is last.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/GetNextChart.js\n\t */",
        "description": "Returns the next inline chart if exists.",
        "memberof": "ApiChart",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiChart",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiChart"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetNextChart",
        "longname": "ApiChart#GetNextChart",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16431,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/GetNextChart.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the previous inline chart if exists. \n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiChart | null} - return null if char if first.\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/GetPrevChart.js\n\t */",
        "description": "Returns the previous inline chart if exists.",
        "memberof": "ApiChart",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiChart",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiChart"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPrevChart",
        "longname": "ApiChart#GetPrevChart",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16459,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/GetPrevChart.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes the specified series from the current chart.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {number} nSeria - The index of the chart series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/RemoveSeria.js\n\t */",
        "description": "Removes the specified series from the current chart.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeria",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "RemoveSeria",
        "longname": "ApiChart#RemoveSeria",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16488,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/RemoveSeria.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets values to the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {number[]} aValues - The array of the data which will be set to the specified chart series.\n\t * @param {number} nSeria - The index of the chart series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetSeriaValues.js\n\t */",
        "description": "Sets values to the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<number>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "number",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aValues",
                "description": "The array of the data which will be set to the specified chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeria",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetSeriaValues",
        "longname": "ApiChart#SetSeriaValues",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16502,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetSeriaValues.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the x-axis values to all chart series. It is used with the scatter charts only.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string[]} aValues - The array of the data which will be set to the x-axis data points.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetXValues.js\n\t */",
        "description": "Sets the x-axis values to all chart series. It is used with the scatter charts only.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "string",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aValues",
                "description": "The array of the data which will be set to the x-axis data points.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetXValues",
        "longname": "ApiChart#SetXValues",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16515,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetXValues.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a name to the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sName - The name which will be set to the specified chart series.\n\t * @param {number} nSeria - The index of the chart series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetSeriaName.js\n\t */",
        "description": "Sets a name to the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sName",
                "description": "The name which will be set to the specified chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeria",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetSeriaName",
        "longname": "ApiChart#SetSeriaName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16531,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetSeriaName.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a name to the specified chart category.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sName - The name which will be set to the specified chart category.\n\t * @param {number} nCategory - The index of the chart category.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetCategoryName.js\n\t */",
        "description": "Sets a name to the specified chart category.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sName",
                "description": "The name which will be set to the specified chart category.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nCategory",
                "description": "The index of the chart category.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetCategoryName",
        "longname": "ApiChart#SetCategoryName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16545,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetCategoryName.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a style to the current chart by style ID.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param nStyleId - One of the styles available in the editor.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/ApplyChartStyle.js\n\t */",
        "description": "Sets a style to the current chart by style ID.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": null,
                "name": "nStyleId",
                "description": "One of the styles available in the editor.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ApplyChartStyle",
        "longname": "ApiChart#ApplyChartStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16558,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/ApplyChartStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the fill to the chart plot area.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oFill - The fill type used to fill the plot area.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetPlotAreaFill.js\n\t */",
        "description": "Sets the fill to the chart plot area.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to fill the plot area.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetPlotAreaFill",
        "longname": "ApiChart#SetPlotAreaFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16583,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetPlotAreaFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline to the chart plot area.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the plot area outline.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetPlotAreaOutLine.js\n\t */",
        "description": "Sets the outline to the chart plot area.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the plot area outline.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetPlotAreaOutLine",
        "longname": "ApiChart#SetPlotAreaOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16600,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetPlotAreaOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the fill to the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oFill - The fill type used to fill the series.\n\t * @param {number} nSeries - The index of the chart series.\n\t * @param {boolean} [bAll=false] - Specifies if the fill will be applied to all series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetSeriesFill.js\n\t */",
        "description": "Sets the fill to the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to fill the series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeries",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAll",
                "description": "Specifies if the fill will be applied to all series.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetSeriesFill",
        "longname": "ApiChart#SetSeriesFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16619,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetSeriesFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline to the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the series outline.\n\t * @param {number} nSeries - The index of the chart series.\n\t * @param {boolean} [bAll=false] - Specifies if the outline will be applied to all series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetSeriesOutLine.js\n\t */",
        "description": "Sets the outline to the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the series outline.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeries",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAll",
                "description": "Specifies if the outline will be applied to all series.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetSeriesOutLine",
        "longname": "ApiChart#SetSeriesOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16637,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetSeriesOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the fill to the data point in the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oFill - The fill type used to fill the data point.\n\t * @param {number} nSeries - The index of the chart series.\n\t * @param {number} nDataPoint - The index of the data point in the specified chart series.\n\t * @param {boolean} [bAllSeries=false] - Specifies if the fill will be applied to the specified data point in all series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetDataPointFill.js\n\t */",
        "description": "Sets the fill to the data point in the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to fill the data point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeries",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nDataPoint",
                "description": "The index of the data point in the specified chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAllSeries",
                "description": "Specifies if the fill will be applied to the specified data point in all series.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetDataPointFill",
        "longname": "ApiChart#SetDataPointFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16656,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetDataPointFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline to the data point in the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the data point outline.\n\t * @param {number} nSeries - The index of the chart series.\n\t * @param {number} nDataPoint - The index of the data point in the specified chart series.\n\t * @param {boolean} bAllSeries - Specifies if the outline will be applied to the specified data point in all series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetDataPointOutLine.js\n\t */",
        "description": "Sets the outline to the data point in the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the data point outline.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeries",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nDataPoint",
                "description": "The index of the data point in the specified chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAllSeries",
                "description": "Specifies if the outline will be applied to the specified data point in all series.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetDataPointOutLine",
        "longname": "ApiChart#SetDataPointOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16675,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetDataPointOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the fill to the marker in the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oFill - The fill type used to fill the marker.\n\t * @param {number} nSeries - The index of the chart series.\n\t * @param {number} nMarker - The index of the marker in the specified chart series.\n\t * @param {boolean} [bAllMarkers=false] - Specifies if the fill will be applied to all markers in the specified chart series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetMarkerFill.js\n\t */",
        "description": "Sets the fill to the marker in the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to fill the marker.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeries",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nMarker",
                "description": "The index of the marker in the specified chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAllMarkers",
                "description": "Specifies if the fill will be applied to all markers in the specified chart series.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetMarkerFill",
        "longname": "ApiChart#SetMarkerFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16694,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetMarkerFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline to the marker in the specified chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the marker outline.\n\t * @param {number} nSeries - The index of the chart series.\n\t * @param {number} nMarker - The index of the marker in the specified chart series.\n\t * @param {boolean} [bAllMarkers=false] - Specifies if the outline will be applied to all markers in the specified chart series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetMarkerOutLine.js\n\t */",
        "description": "Sets the outline to the marker in the specified chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the marker outline.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nSeries",
                "description": "The index of the chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nMarker",
                "description": "The index of the marker in the specified chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAllMarkers",
                "description": "Specifies if the outline will be applied to all markers in the specified chart series.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetMarkerOutLine",
        "longname": "ApiChart#SetMarkerOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16713,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetMarkerOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the fill to the chart title.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oFill - The fill type used to fill the title.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetTitleFill.js\n\t */",
        "description": "Sets the fill to the chart title.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to fill the title.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTitleFill",
        "longname": "ApiChart#SetTitleFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16729,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetTitleFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline to the chart title.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the title outline.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetTitleOutLine.js\n\t */",
        "description": "Sets the outline to the chart title.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the title outline.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTitleOutLine",
        "longname": "ApiChart#SetTitleOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16745,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetTitleOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the fill to the chart legend.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oFill - The fill type used to fill the legend.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetLegendFill.js\n\t */",
        "description": "Sets the fill to the chart legend.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The fill type used to fill the legend.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetLegendFill",
        "longname": "ApiChart#SetLegendFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16761,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetLegendFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline to the chart legend.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the legend outline.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetLegendOutLine.js\n\t */",
        "description": "Sets the outline to the chart legend.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the legend outline.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetLegendOutLine",
        "longname": "ApiChart#SetLegendOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16777,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetLegendOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the specified numeric format to the axis values.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {NumFormat | String} sFormat - Numeric format (can be custom format).\n\t * @param {AxisPos} - Axis position in the chart.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetAxieNumFormat.js\n\t */",
        "description": "Sets the specified numeric format to the axis values.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "NumFormat",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "NumFormat"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "sFormat",
                "description": "Numeric format (can be custom format).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "AxisPos"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "AxisPos"
                    }
                },
                "name": "sAxiePos",
                "description": "Axis position in the chart.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetAxieNumFormat",
        "longname": "ApiChart#SetAxieNumFormat",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16794,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetAxieNumFormat.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the specified numeric format to the chart series.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {NumFormat | String} sFormat - Numeric format (can be custom format).\n\t * @param {Number} nSeria - Series index.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetSeriaNumFormat.js\n\t */",
        "description": "Sets the specified numeric format to the chart series.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "NumFormat",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "NumFormat"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "sFormat",
                "description": "Numeric format (can be custom format).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nSeria",
                "description": "Series index.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetSeriaNumFormat",
        "longname": "ApiChart#SetSeriaNumFormat",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16827,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetSeriaNumFormat.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the specified numeric format to the chart data point.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {NumFormat | String} sFormat - Numeric format (can be custom format).\n\t * @param {Number} nSeria - Series index.\n\t * @param {number} nDataPoint - The index of the data point in the specified chart series.\n\t * @param {boolean} bAllSeries - Specifies if the numeric format will be applied to the specified data point in all series.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/SetDataPointNumFormat.js\n\t */",
        "description": "Sets the specified numeric format to the chart data point.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "NumFormat",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "NumFormat"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "sFormat",
                "description": "Numeric format (can be custom format).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nSeria",
                "description": "Series index.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nDataPoint",
                "description": "The index of the data point in the specified chart series.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAllSeries",
                "description": "Specifies if the numeric format will be applied to the specified data point in all series.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetDataPointNumFormat",
        "longname": "ApiChart#SetDataPointNumFormat",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16843,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/SetDataPointNumFormat.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns all series from the chart space.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {ApiChartSeries[]}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/GetAllSeries.js\n\t */",
        "description": "Returns all series from the chart space.",
        "memberof": "ApiChart",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiChartSeries>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiChartSeries",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllSeries",
        "longname": "ApiChart#GetAllSeries",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16855,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/GetAllSeries.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the series with specific index.\n\t * @memberof ApiChart\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {number} nIdx - Series index.\n\t * @returns {?ApiChartSeries}\n\t * @see office-js-api/Examples/{Editor}/ApiChart/Methods/GetSeries.js\n\t */",
        "description": "Returns the series with specific index.",
        "memberof": "ApiChart",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nIdx",
                "description": "Series index.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiChartSeries"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiChartSeries",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetSeries",
        "longname": "ApiChart#GetSeries",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16877,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChart/Methods/GetSeries.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiChartSeries class.\n\t * @memberof ApiChartSeries\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {\"chartSeries\"}\n\t * @see office-js-api/Examples/{Editor}/ApiChartSeries/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiChartSeries class.",
        "memberof": "ApiChartSeries",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"chartSeries\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"chartSeries\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiChartSeries#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16904,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChartSeries/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Tries to change the type of the series. Returns true in case of success.\n\t * @memberof ApiChartSeries\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ChartType} sType - Chart type.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiChartSeries/Methods/ChangeChartType.js\n\t */",
        "description": "Tries to change the type of the series. Returns true in case of success.",
        "memberof": "ApiChartSeries",
        "params": [
            {
                "type": {
                    "names": [
                        "ChartType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ChartType"
                    }
                },
                "name": "sType",
                "description": "Chart type.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ChangeChartType",
        "longname": "ApiChartSeries#ChangeChartType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16917,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChartSeries/Methods/ChangeChartType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a chart type of the series.\n\t * @memberof ApiChartSeries\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {ChartType}\n\t * @see office-js-api/Examples/{Editor}/ApiChartSeries/Methods/GetChartType.js\n\t */",
        "description": "Returns a chart type of the series.",
        "memberof": "ApiChartSeries",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ChartType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ChartType"
                    }
                }
            }
        ],
        "name": "GetChartType",
        "longname": "ApiChartSeries#GetChartType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16936,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiChartSeries/Methods/GetChartType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFill class.\n\t * @memberof ApiFill\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"fill\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFill/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFill class.",
        "memberof": "ApiFill",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"fill\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"fill\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiFill#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16960,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFill/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiFill object into the JSON object.\n\t * @memberof ApiFill\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiFill/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiFill object into the JSON object.",
        "memberof": "ApiFill",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiFill#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16971,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFill/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiStroke class.\n\t * @memberof ApiStroke\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"stroke\"}\n\t * @see office-js-api/Examples/{Editor}/ApiStroke/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiStroke class.",
        "memberof": "ApiStroke",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"stroke\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"stroke\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiStroke#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 16990,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStroke/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiStroke object into the JSON object.\n\t * @memberof ApiStroke\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiStroke/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiStroke object into the JSON object.",
        "memberof": "ApiStroke",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiStroke#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17001,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiStroke/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiGradientStop class.\n\t * @memberof ApiGradientStop\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"gradientStop\"}\n\t * @see office-js-api/Examples/{Editor}/ApiGradientStop/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiGradientStop class.",
        "memberof": "ApiGradientStop",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"gradientStop\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"gradientStop\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiGradientStop#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiGradientStop/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiGradientStop object into the JSON object.\n\t * @memberof ApiGradientStop\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiGradientStop/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiGradientStop object into the JSON object.",
        "memberof": "ApiGradientStop",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiGradientStop#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17031,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiGradientStop/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiUniColor class.\n\t * @memberof ApiUniColor\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"uniColor\"}\n\t * @see office-js-api/Examples/{Editor}/ApiUniColor/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiUniColor class.",
        "memberof": "ApiUniColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"uniColor\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"uniColor\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiUniColor#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17050,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiUniColor/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiUniColor object into the JSON object.\n\t * @memberof ApiUniColor\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiUniColor/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiUniColor object into the JSON object.",
        "memberof": "ApiUniColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiUniColor#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17061,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiUniColor/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a color value in RGB format.\n\t * @memberof ApiUniColor\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiUniColor/Methods/GetRGB.js\n\t */",
        "description": "Returns a color value in RGB format.",
        "memberof": "ApiUniColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetRGB",
        "longname": "ApiUniColor#GetRGB",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17073,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiUniColor/Methods/GetRGB.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiRGBColor class.\n\t * @memberof ApiRGBColor\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"rgbColor\"}\n\t * @see office-js-api/Examples/{Editor}/ApiRGBColor/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiRGBColor class.",
        "memberof": "ApiRGBColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"rgbColor\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"rgbColor\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiRGBColor#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17099,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRGBColor/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiRGBColor object into the JSON object.\n\t * @memberof ApiRGBColor\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiRGBColor/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiRGBColor object into the JSON object.",
        "memberof": "ApiRGBColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiRGBColor#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17110,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiRGBColor/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiSchemeColor class.\n\t * @memberof ApiSchemeColor\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"schemeColor\"}\n\t * @see office-js-api/Examples/{Editor}/ApiSchemeColor/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiSchemeColor class.",
        "memberof": "ApiSchemeColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"schemeColor\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"schemeColor\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiSchemeColor#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17129,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSchemeColor/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiSchemeColor object into the JSON object.\n\t * @memberof ApiSchemeColor\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiSchemeColor/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiSchemeColor object into the JSON object.",
        "memberof": "ApiSchemeColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiSchemeColor#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17140,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiSchemeColor/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiPresetColor class.\n\t * @memberof ApiPresetColor\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"presetColor\"}\n\t * @see office-js-api/Examples/{Editor}/ApiPresetColor/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiPresetColor class.",
        "memberof": "ApiPresetColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"presetColor\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"presetColor\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiPresetColor#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17159,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPresetColor/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiPresetColor object into the JSON object.\n\t * @memberof ApiPresetColor\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiPresetColor/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiPresetColor object into the JSON object.",
        "memberof": "ApiPresetColor",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiPresetColor#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17170,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPresetColor/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiInlineLvlSdt class.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"inlineLvlSdt\"}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiInlineLvlSdt class.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"inlineLvlSdt\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"inlineLvlSdt\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiInlineLvlSdt#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17201,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the lock to the current inline text content control:\n\t * <b>\"contentLocked\"</b> - content cannot be edited.\n\t * <b>\"sdtContentLocked\"</b> - content cannot be edited and the container cannot be deleted.\n\t * <b>\"sdtLocked\"</b> - the container cannot be deleted.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {\"contentLocked\" | \"sdtContentLocked\" | \"sdtLocked\"} sLockType - The lock type applied to the inline text content control.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/SetLock.js\n\t */",
        "description": "Sets the lock to the current inline text content control:\n<b>\"contentLocked\"</b> - content cannot be edited.\n<b>\"sdtContentLocked\"</b> - content cannot be edited and the container cannot be deleted.\n<b>\"sdtLocked\"</b> - the container cannot be deleted.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "\"contentLocked\"",
                        "\"sdtContentLocked\"",
                        "\"sdtLocked\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"contentLocked\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"sdtContentLocked\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"sdtLocked\""
                            }
                        ]
                    }
                },
                "name": "sLockType",
                "description": "The lock type applied to the inline text content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLock",
        "longname": "ApiInlineLvlSdt#SetLock",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17216,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/SetLock.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the lock type of the current container.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {SdtLock}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetLock.js\n\t */",
        "description": "Returns the lock type of the current container.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "SdtLock"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "SdtLock"
                    }
                }
            }
        ],
        "name": "GetLock",
        "longname": "ApiInlineLvlSdt#GetLock",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17236,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetLock.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a string tag to the current inline text content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sTag - The tag which will be added to the current inline text content control.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/SetTag.js\n\t */",
        "description": "Adds a string tag to the current inline text content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTag",
                "description": "The tag which will be added to the current inline text content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTag",
        "longname": "ApiInlineLvlSdt#SetTag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17259,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/SetTag.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tag attribute for the current container.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetTag.js\n\t */",
        "description": "Returns the tag attribute for the current container.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetTag",
        "longname": "ApiInlineLvlSdt#GetTag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17271,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetTag.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a string label to the current inline text content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLabel - The label which will be added to the current inline text content control. Can be a positive or negative integer from <b>-2147483647</b> to <b>2147483647</b>.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/SetLabel.js\n\t */",
        "description": "Adds a string label to the current inline text content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLabel",
                "description": "The label which will be added to the current inline text content control. Can be a positive or negative integer from <b>-2147483647</b> to <b>2147483647</b>.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLabel",
        "longname": "ApiInlineLvlSdt#SetLabel",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17283,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/SetLabel.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the label attribute for the current container.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetLabel.js\n\t */",
        "description": "Returns the label attribute for the current container.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetLabel",
        "longname": "ApiInlineLvlSdt#GetLabel",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17295,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetLabel.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the alias attribute to the current container.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sAlias - The alias which will be added to the current inline text content control.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/SetAlias.js\n\t */",
        "description": "Sets the alias attribute to the current container.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAlias",
                "description": "The alias which will be added to the current inline text content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetAlias",
        "longname": "ApiInlineLvlSdt#SetAlias",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17307,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/SetAlias.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the alias attribute for the current container.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetAlias.js\n\t */",
        "description": "Returns the alias attribute for the current container.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetAlias",
        "longname": "ApiInlineLvlSdt#GetAlias",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17319,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetAlias.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of elements in the current inline text content control. The text content \n     * control is created with one text run present in it by default, so even without any \n     * element added this method will return the value of '1'.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetElementsCount.js\n\t */",
        "description": "Returns a number of elements in the current inline text content control. The text content \ncontrol is created with one text run present in it by default, so even without any \nelement added this method will return the value of '1'.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetElementsCount",
        "longname": "ApiInlineLvlSdt#GetElementsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17333,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetElementsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an element of the current inline text content control using the position specified.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nPos - The position where the element which content we want to get must be located.\n\t * @returns {?ParagraphContent}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetElement.js\n\t */",
        "description": "Returns an element of the current inline text content control using the position specified.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position where the element which content we want to get must be located.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ParagraphContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ParagraphContent",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetElement",
        "longname": "ApiInlineLvlSdt#GetElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17346,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes an element using the position specified from the current inline text content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nPos - The position of the element which we want to remove from the current inline text content control.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/RemoveElement.js\n\t */",
        "description": "Removes an element using the position specified from the current inline text content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position of the element which we want to remove from the current inline text content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "RemoveElement",
        "longname": "ApiInlineLvlSdt#RemoveElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17362,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/RemoveElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes all the elements from the current inline text content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean} - returns false if control has not elements.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/RemoveAllElements.js\n\t */",
        "description": "Removes all the elements from the current inline text content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "RemoveAllElements",
        "longname": "ApiInlineLvlSdt#RemoveAllElements",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17384,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/RemoveAllElements.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds an element to the inline text content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ParagraphContent} oElement - The document element which will be added at the position specified. Returns <b>false</b> if the type of *oElement* is not supported by an inline text content control.\n\t * @param {number} [nPos] - The position of the element where it will be added to the current inline text content control. If this value is not specified, then the element will be added to the end of the current inline text content control.\n\t * @returns {boolean} - returns false if oElement unsupported.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/AddElement.js\n\t */",
        "description": "Adds an element to the inline text content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "ParagraphContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ParagraphContent"
                    }
                },
                "name": "oElement",
                "description": "The document element which will be added at the position specified. Returns <b>false</b> if the type of *oElement* is not supported by an inline text content control.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nPos",
                "description": "The position of the element where it will be added to the current inline text content control. If this value is not specified, then the element will be added to the end of the current inline text content control.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddElement",
        "longname": "ApiInlineLvlSdt#AddElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17410,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/AddElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds an element to the end of inline text content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {DocumentElement} oElement - The document element which will be added to the end of the container.\n\t * @returns {boolean} - returns false if oElement unsupported.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/Push.js\n\t */",
        "description": "Adds an element to the end of inline text content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The document element which will be added to the end of the container.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Push",
        "longname": "ApiInlineLvlSdt#Push",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17445,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/Push.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds text to the current content control. \n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {String} sText - The text which will be added to the content control.\n\t * @returns {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/AddText.js\n\t */",
        "description": "Adds text to the current content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sText",
                "description": "The text which will be added to the content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddText",
        "longname": "ApiInlineLvlSdt#AddText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17473,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/AddText.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a content control and its content. If keepContent is true, the content is not deleted.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} keepContent - Specifies if the content will be deleted or not.\n\t * @returns {boolean} - returns false if control haven't parent paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/Delete.js\n\t */",
        "description": "Removes a content control and its content. If keepContent is true, the content is not deleted.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "keepContent",
                "description": "Specifies if the content will be deleted or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiInlineLvlSdt#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17501,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Applies text settings to the content of the content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The properties that will be set to the content of the content control.\n\t * @returns {ApiInlineLvlSdt} this.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/SetTextPr.js\n\t */",
        "description": "Applies text settings to the content of the content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The properties that will be set to the content of the content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiInlineLvlSdt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiInlineLvlSdt"
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiInlineLvlSdt#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17531,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a paragraph that contains the current content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiParagraph | null} - returns null if parent paragraph doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetParentParagraph.js\n\t */",
        "description": "Returns a paragraph that contains the current content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiParagraph",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiParagraph"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentParagraph",
        "longname": "ApiInlineLvlSdt#GetParentParagraph",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17551,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetParentParagraph.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a content control that contains the current content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiBlockLvlSdt | ApiInlineLvlSdt | null} - returns null if parent content control doesn't exist.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetParentContentControl.js\n\t */",
        "description": "Returns a content control that contains the current content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBlockLvlSdt",
                        "ApiInlineLvlSdt",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiInlineLvlSdt"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentContentControl",
        "longname": "ApiInlineLvlSdt#GetParentContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17568,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetParentContentControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a table that contains the current content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTable | null} - returns null if parent table doesn't exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetParentTable.js\n\t */",
        "description": "Returns a table that contains the current content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiInlineLvlSdt#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17592,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a table cell that contains the current content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTableCell | null} - return null if parent cell doesn't exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetParentTableCell.js\n\t */",
        "description": "Returns a table cell that contains the current content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTableCell",
        "longname": "ApiInlineLvlSdt#GetParentTableCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17613,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetParentTableCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the specified content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the specified content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiInlineLvlSdt#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17636,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a copy of an inline content control. Ignores comments, footnote references, complex fields.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiInlineLvlSdt}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/Copy.js\n\t */",
        "description": "Creates a copy of an inline content control. Ignores comments, footnote references, complex fields.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiInlineLvlSdt"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiInlineLvlSdt"
                    }
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiInlineLvlSdt#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17648,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiInlineLvlSdt object into the JSON object.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @return {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiInlineLvlSdt object into the JSON object.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiInlineLvlSdt#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17668,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the placeholder text from the current inline content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetPlaceholderText.js\n\t */",
        "description": "Returns the placeholder text from the current inline content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetPlaceholderText",
        "longname": "ApiInlineLvlSdt#GetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17684,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current inline content control.\n\t *Can't be set to checkbox or radio button*\n\t * @memberof ApiInlineLvlSdt\n\t * @param {string} sText - The text that will be set to the current inline content control.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current inline content control.\nCan't be set to checkbox or radio button*",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The text that will be set to the current inline content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiInlineLvlSdt#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17698,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the content control is a form.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/IsForm.js\n\t */",
        "description": "Checks if the content control is a form.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsForm",
        "longname": "ApiInlineLvlSdt#IsForm",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17717,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/IsForm.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to the current inline content control.\n\t * <note>Please note that this inline content control must be in the document.</note>\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {ApiComment?} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to the current inline content control.\n<note>Please note that this inline content control must be in the document.</note>",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "ApiInlineLvlSdt#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17733,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current content control.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current content control.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiInlineLvlSdt#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17767,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a list of values of the combo box / dropdown list content control.\n\t * @memberof ApiInlineLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiContentControlList}\n\t * @see office-js-api/Examples/{Editor}/ApiInlineLvlSdt/Methods/GetDropdownList.js\n\t */",
        "description": "Returns a list of values of the combo box / dropdown list content control.",
        "memberof": "ApiInlineLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiContentControlList"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiContentControlList"
                    }
                }
            }
        ],
        "name": "GetDropdownList",
        "longname": "ApiInlineLvlSdt#GetDropdownList",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17779,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiInlineLvlSdt/Methods/GetDropdownList.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiContentControlList class.\n\t * @memberof ApiContentControlList\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"contentControlList\"}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlList/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiContentControlList class.",
        "memberof": "ApiContentControlList",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"contentControlList\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"contentControlList\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiContentControlList#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17800,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlList/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of items (the ApiContentControlListEntry objects) of the combo box / dropdown list content control.\n\t * @memberof ApiContentControlList\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiContentControlListEntry[]}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlList/Methods/GetAllItems.js\n\t */",
        "description": "Returns a collection of items (the ApiContentControlListEntry objects) of the combo box / dropdown list content control.",
        "memberof": "ApiContentControlList",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiContentControlListEntry>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiContentControlListEntry",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllItems",
        "longname": "ApiContentControlList#GetAllItems",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17812,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlList/Methods/GetAllItems.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of items of the combo box / dropdown list content control.\n\t * @memberof ApiContentControlList\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlList/Methods/GetElementsCount.js\n\t */",
        "description": "Returns a number of items of the combo box / dropdown list content control.",
        "memberof": "ApiContentControlList",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetElementsCount",
        "longname": "ApiContentControlList#GetElementsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17832,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlList/Methods/GetElementsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent of the combo box / dropdown list content control.\n\t * @memberof ApiContentControlList\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiInlineLvlSdt | ApiBlockLvlSdt}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlList/Methods/GetParent.js\n\t */",
        "description": "Returns a parent of the combo box / dropdown list content control.",
        "memberof": "ApiContentControlList",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiInlineLvlSdt",
                        "ApiBlockLvlSdt"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiInlineLvlSdt"
                            },
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParent",
        "longname": "ApiContentControlList#GetParent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17844,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlList/Methods/GetParent.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a new value to the combo box / dropdown list content control.\n\t * @memberof ApiContentControlList\n\t * @param {string} sText - The display text for the list item.\n\t * @param {string} [sValue=sText] - The list item value.\n\t * @param {number} [nIndex=this.GetElementsCount()] - A position where a new value will be added.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlList/Methods/Add.js\n\t */",
        "description": "Adds a new value to the combo box / dropdown list content control.",
        "memberof": "ApiContentControlList",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The display text for the list item.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sValue",
                "description": "The list item value.",
                "optional": true,
                "defaultvalue": "sText"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nIndex",
                "description": "A position where a new value will be added.",
                "optional": true,
                "defaultvalue": "this.GetElementsCount()"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Add",
        "longname": "ApiContentControlList#Add",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17859,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlList/Methods/Add.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears a list of values of the combo box / dropdown list content control.\n\t * @memberof ApiContentControlList\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlList/Methods/Clear.js\n\t */",
        "description": "Clears a list of values of the combo box / dropdown list content control.",
        "memberof": "ApiContentControlList",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiContentControlList#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17886,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlList/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an item of the combo box / dropdown list content control by the position specified in the request.\n\t * @memberof ApiContentControlList\n\t * @param {number} nIndex - Item position.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiContentControlListEntry}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlList/Methods/GetItem.js\n\t */",
        "description": "Returns an item of the combo box / dropdown list content control by the position specified in the request.",
        "memberof": "ApiContentControlList",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nIndex",
                "description": "Item position.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiContentControlListEntry"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiContentControlListEntry"
                    }
                }
            }
        ],
        "name": "GetItem",
        "longname": "ApiContentControlList#GetItem",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17902,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlList/Methods/GetItem.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiContentControlListEntry class.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"contentControlList\"}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiContentControlListEntry class.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"contentControlList\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"contentControlList\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiContentControlListEntry#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17928,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a parent of the content control list item in the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiContentControlList}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/GetParent.js\n\t */",
        "description": "Returns a parent of the content control list item in the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiContentControlList"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiContentControlList"
                    }
                }
            }
        ],
        "name": "GetParent",
        "longname": "ApiContentControlListEntry#GetParent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17940,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/GetParent.js"
        ]
    },
    {
        "comment": "/**\n\t * Selects the list entry in the combo box / dropdown list content control and sets the text of the content control to the selected item value.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/Select.js\n\t */",
        "description": "Selects the list entry in the combo box / dropdown list content control and sets the text of the content control to the selected item value.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Select",
        "longname": "ApiContentControlListEntry#Select",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17955,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/Select.js"
        ]
    },
    {
        "comment": "/**\n\t * Moves the current item in the parent combo box / dropdown list content control up one element.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/MoveUp.js\n\t */",
        "description": "Moves the current item in the parent combo box / dropdown list content control up one element.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "MoveUp",
        "longname": "ApiContentControlListEntry#MoveUp",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17971,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/MoveUp.js"
        ]
    },
    {
        "comment": "/**\n\t * Moves the current item in the parent combo box / dropdown list content control down one element, so that it is after the item that originally followed it.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/MoveDown.js\n\t */",
        "description": "Moves the current item in the parent combo box / dropdown list content control down one element, so that it is after the item that originally followed it.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "MoveDown",
        "longname": "ApiContentControlListEntry#MoveDown",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 17987,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/MoveDown.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an index of the content control list item in the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/GetIndex.js\n\t */",
        "description": "Returns an index of the content control list item in the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetIndex",
        "longname": "ApiContentControlListEntry#GetIndex",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18004,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/GetIndex.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets an index to the content control list item in the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @param {number} nIndex - An index of the content control list item.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/SetIndex.js\n\t */",
        "description": "Sets an index to the content control list item in the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nIndex",
                "description": "An index of the content control list item.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetIndex",
        "longname": "ApiContentControlListEntry#SetIndex",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18018,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/SetIndex.js"
        ]
    },
    {
        "comment": "/**\n\t * Deletes the specified item in the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/Delete.js\n\t */",
        "description": "Deletes the specified item in the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiContentControlListEntry#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18041,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a String that represents the display text of a list item for the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/GetText.js\n\t */",
        "description": "Returns a String that represents the display text of a list item for the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiContentControlListEntry#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18071,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a String that represents the display text of a list item for the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The display text of a list item.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/SetText.js\n\t */",
        "description": "Sets a String that represents the display text of a list item for the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The display text of a list item.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetText",
        "longname": "ApiContentControlListEntry#SetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18084,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/SetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a String that represents the value of a list item for the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/GetValue.js\n\t */",
        "description": "Returns a String that represents the value of a list item for the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetValue",
        "longname": "ApiContentControlListEntry#GetValue",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18111,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/GetValue.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a String that represents the value of a list item for the combo box / dropdown list content control.\n\t * @memberof ApiContentControlListEntry\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sValue - The value of a list item.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiContentControlListEntry/Methods/SetValue.js\n\t */",
        "description": "Sets a String that represents the value of a list item for the combo box / dropdown list content control.",
        "memberof": "ApiContentControlListEntry",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sValue",
                "description": "The value of a list item.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetValue",
        "longname": "ApiContentControlListEntry#SetValue",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18124,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiContentControlListEntry/Methods/SetValue.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiBlockLvlSdt class.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"blockLvlSdt\"}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiBlockLvlSdt class.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"blockLvlSdt\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"blockLvlSdt\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiBlockLvlSdt#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18159,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the lock to the current block text content control:\n\t * <b>\"contentLocked\"</b> - content cannot be edited.\n\t * <b>\"sdtContentLocked\"</b> - content cannot be edited and the container cannot be deleted.\n\t * <b>\"sdtLocked\"</b> - the container cannot be deleted.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {\"contentLocked\" | \"sdtContentLocked\" | \"sdtLocked\"} sLockType - The type of the lock applied to the block text content control.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/SetLock.js\n\t */",
        "description": "Sets the lock to the current block text content control:\n<b>\"contentLocked\"</b> - content cannot be edited.\n<b>\"sdtContentLocked\"</b> - content cannot be edited and the container cannot be deleted.\n<b>\"sdtLocked\"</b> - the container cannot be deleted.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "\"contentLocked\"",
                        "\"sdtContentLocked\"",
                        "\"sdtLocked\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"contentLocked\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"sdtContentLocked\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"sdtLocked\""
                            }
                        ]
                    }
                },
                "name": "sLockType",
                "description": "The type of the lock applied to the block text content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLock",
        "longname": "ApiBlockLvlSdt#SetLock",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18174,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/SetLock.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the lock type of the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {SdtLock}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetLock.js\n\t */",
        "description": "Returns the lock type of the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "SdtLock"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "SdtLock"
                    }
                }
            }
        ],
        "name": "GetLock",
        "longname": "ApiBlockLvlSdt#GetLock",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18194,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetLock.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tag attribute to the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sTag - The tag which will be added to the current container.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/SetTag.js\n\t */",
        "description": "Sets the tag attribute to the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sTag",
                "description": "The tag which will be added to the current container.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTag",
        "longname": "ApiBlockLvlSdt#SetTag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18217,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/SetTag.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tag attribute for the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetTag.js\n\t */",
        "description": "Returns the tag attribute for the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetTag",
        "longname": "ApiBlockLvlSdt#GetTag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18229,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetTag.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the label attribute to the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLabel - The label which will be added to the current container. Can be a positive or negative integer from <b>-2147483647</b> to <b>2147483647</b>.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/SetLabel.js\n\t */",
        "description": "Sets the label attribute to the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLabel",
                "description": "The label which will be added to the current container. Can be a positive or negative integer from <b>-2147483647</b> to <b>2147483647</b>.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLabel",
        "longname": "ApiBlockLvlSdt#SetLabel",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18241,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/SetLabel.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the label attribute for the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetLabel.js\n\t */",
        "description": "Returns the label attribute for the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetLabel",
        "longname": "ApiBlockLvlSdt#GetLabel",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18253,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetLabel.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the alias attribute to the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sAlias - The alias which will be added to the current container.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/SetAlias.js\n\t */",
        "description": "Sets the alias attribute to the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAlias",
                "description": "The alias which will be added to the current container.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetAlias",
        "longname": "ApiBlockLvlSdt#SetAlias",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18265,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/SetAlias.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the alias attribute for the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetAlias.js\n\t */",
        "description": "Returns the alias attribute for the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetAlias",
        "longname": "ApiBlockLvlSdt#GetAlias",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18277,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetAlias.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the content of the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiDocumentContent}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetContent.js\n\t */",
        "description": "Returns the content of the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDocumentContent"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDocumentContent"
                    }
                }
            }
        ],
        "name": "GetContent",
        "longname": "ApiBlockLvlSdt#GetContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18289,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of content control objects in the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiBlockLvlSdt[] | ApiInlineLvlSdt[]}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetAllContentControls.js\n\t */",
        "description": "Returns a collection of content control objects in the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiBlockLvlSdt>",
                        "Array.<ApiInlineLvlSdt>"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiBlockLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            },
                            {
                                "type": "TypeApplication",
                                "expression": {
                                    "type": "NameExpression",
                                    "name": "Array"
                                },
                                "applications": [
                                    {
                                        "name": "ApiInlineLvlSdt",
                                        "type": "NameExpression"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllContentControls",
        "longname": "ApiBlockLvlSdt#GetAllContentControls",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18301,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetAllContentControls.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of paragraph objects in the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetAllParagraphs.js\n\t */",
        "description": "Returns a collection of paragraph objects in the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiParagraph",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllParagraphs",
        "longname": "ApiBlockLvlSdt#GetAllParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18324,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetAllParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of tables on a given absolute page.\n\t * <note>This method can be a little bit slow, because it runs the document calculation\n\t * process to arrange tables on the specified page.</note>\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param nPage - Page number. If it is not specified, an empty array will be returned.\n\t * @return {ApiTable[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetAllTablesOnPage.js\n\t */",
        "description": "Returns a collection of tables on a given absolute page.\n<note>This method can be a little bit slow, because it runs the document calculation\nprocess to arrange tables on the specified page.</note>",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": null,
                "name": "nPage",
                "description": "Page number. If it is not specified, an empty array will be returned.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiTable>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiTable",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllTablesOnPage",
        "longname": "ApiBlockLvlSdt#GetAllTablesOnPage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18350,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetAllTablesOnPage.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the contents from the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean} - returns true.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/RemoveAllElements.js\n\t */",
        "description": "Clears the contents from the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "RemoveAllElements",
        "longname": "ApiBlockLvlSdt#RemoveAllElements",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18374,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/RemoveAllElements.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes a content control and its content. If keepContent is true, the content is not deleted.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} keepContent - Specifies if the content will be deleted or not.\n\t * @returns {boolean} - returns false if content control haven't parent.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/Delete.js\n\t */",
        "description": "Removes a content control and its content. If keepContent is true, the content is not deleted.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "keepContent",
                "description": "Specifies if the content will be deleted or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiBlockLvlSdt#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18388,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Applies text settings to the content of the content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The properties that will be set to the content of the content control.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/SetTextPr.js\n\t */",
        "description": "Applies text settings to the content of the content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The properties that will be set to the content of the content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTextPr",
        "longname": "ApiBlockLvlSdt#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18415,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of drawing objects in the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiDrawing[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetAllDrawingObjects.js\n\t */",
        "description": "Returns a collection of drawing objects in the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiDrawing>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiDrawing",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetAllDrawingObjects",
        "longname": "ApiBlockLvlSdt#GetAllDrawingObjects",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18430,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetAllDrawingObjects.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a content control that contains the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiBlockLvlSdt | null} - returns null if parent content control doesn't exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetParentContentControl.js\n\t */",
        "description": "Returns a content control that contains the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiBlockLvlSdt",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiBlockLvlSdt"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentContentControl",
        "longname": "ApiBlockLvlSdt#GetParentContentControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18448,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetParentContentControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a table that contains the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTable | null} - returns null is parent table does'n exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetParentTable.js\n\t */",
        "description": "Returns a table that contains the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTable",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTable"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTable",
        "longname": "ApiBlockLvlSdt#GetParentTable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18468,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetParentTable.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a table cell that contains the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiTableCell | null} - returns null if parent cell doesn't exist.  \n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetParentTableCell.js\n\t */",
        "description": "Returns a table cell that contains the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTableCell",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "ApiTableCell"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetParentTableCell",
        "longname": "ApiBlockLvlSdt#GetParentTableCell",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18489,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetParentTableCell.js"
        ]
    },
    {
        "comment": "/**\n\t * Pushes a paragraph or a table or a block content control to actually add it to the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {DocumentElement} oElement - The type of the element which will be pushed to the current container.\n\t * @return {boolean} - returns false if oElement unsupported.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/Push.js\n\t */",
        "description": "Pushes a paragraph or a table or a block content control to actually add it to the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The type of the element which will be pushed to the current container.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Push",
        "longname": "ApiBlockLvlSdt#Push",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18511,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/Push.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a paragraph or a table or a block content control to the current container.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {DocumentElement} oElement - The type of the element which will be added to the current container.\n\t * @param {Number} nPos - The specified position.\n\t * @return {boolean} - returns false if oElement unsupported.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/AddElement.js\n\t */",
        "description": "Adds a paragraph or a table or a block content control to the current container.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The type of the element which will be added to the current container.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nPos",
                "description": "The specified position.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddElement",
        "longname": "ApiBlockLvlSdt#AddElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18541,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/AddElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a text to the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {String} sText - The text which will be added to the content control.\n\t * @return {boolean} - returns false if param is invalid.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/AddText.js\n\t */",
        "description": "Adds a text to the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sText",
                "description": "The text which will be added to the content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddText",
        "longname": "ApiBlockLvlSdt#AddText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18570,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/AddText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the specified content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the specified content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiRange"
                    }
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiBlockLvlSdt#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18604,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Searches for a scope of a content control object. The search results are a collection of ApiRange objects.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - Search string.\n\t * @param {boolean} isMatchCase - Case sensitive or not.\n\t * @return {ApiRange[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/Search.js\n\t */",
        "description": "Searches for a scope of a content control object. The search results are a collection of ApiRange objects.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "Search string.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isMatchCase",
                "description": "Case sensitive or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiRange>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "ApiRange",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "Search",
        "longname": "ApiBlockLvlSdt#Search",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18618,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/Search.js"
        ]
    },
    {
        "comment": "/**\n\t * Selects the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/Select.js\n\t */",
        "description": "Selects the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": null,
        "name": "Select",
        "longname": "ApiBlockLvlSdt#Select",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18645,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/Select.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the placeholder text from the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetPlaceholderText.js\n\t */",
        "description": "Returns the placeholder text from the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetPlaceholderText",
        "longname": "ApiBlockLvlSdt#GetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18660,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @param {string} sText - The text that will be set to the current content control.\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The text that will be set to the current content control.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiBlockLvlSdt#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18673,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n     * Returns the content control position within its parent element.\n     * @memberof ApiBlockLvlSdt\n     * @typeofeditors [\"CDE\"]\n     * @returns {Number} - returns -1 if the content control parent doesn't exist. \n     * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetPosInParent.js\n\t */",
        "description": "Returns the content control position within its parent element.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetPosInParent",
        "longname": "ApiBlockLvlSdt#GetPosInParent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18692,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetPosInParent.js"
        ]
    },
    {
        "comment": "/**\n\t * Replaces the current content control with a new element.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {DocumentElement} oElement - The element to replace the current content control with.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/ReplaceByElement.js\n\t */",
        "description": "Replaces the current content control with a new element.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "DocumentElement"
                    }
                },
                "name": "oElement",
                "description": "The element to replace the current content control with.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ReplaceByElement",
        "longname": "ApiBlockLvlSdt#ReplaceByElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18705,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/ReplaceByElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a comment to the current block content control.\n\t * <note>Please note that the current block content control must be in the document.</note>\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The comment text (required).\n\t * @param {string} sAuthor - The author's name (optional).\n\t * @param {string} sUserId - The user ID of the comment author (optional).\n\t * @returns {?ApiComment} - Returns null if the comment was not added.\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/AddComment.js\n\t */",
        "description": "Adds a comment to the current block content control.\n<note>Please note that the current block content control must be in the document.</note>",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthor",
                "description": "The author's name (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author (optional).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddComment",
        "longname": "ApiBlockLvlSdt#AddComment",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18737,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/AddComment.js"
        ]
    },
    {
        "comment": "/**\n     * Adds a caption paragraph after (or before) the current content control.\n\t * <note>Please note that the current content control must be in the document (not in the footer/header).\n\t * And if the current content control is placed in a shape, then a caption is added after (or before) the parent shape.</note>\n     * @memberof ApiBlockLvlSdt\n     * @typeofeditors [\"CDE\"]\n     * @param {string} sAdditional - The additional text.\n\t * @param {CaptionLabel | String} [sLabel=\"Table\"] - The caption label.\n\t * @param {boolean} [bExludeLabel=false] - Specifies whether to exclude the label from the caption.\n\t * @param {CaptionNumberingFormat} [sNumberingFormat=\"Arabic\"] - The possible caption numbering format.\n\t * @param {boolean} [bBefore=false] - Specifies whether to insert the caption before the current content control (true) or after (false) (after/before the shape if it is placed in the shape).\n\t * @param {Number} [nHeadingLvl=undefined] - The heading level (used if you want to specify the chapter number).\n\t * <note>If you want to specify \"Heading 1\", then nHeadingLvl === 0 and etc.</note>\n\t * @param {CaptionSep} [sCaptionSep=\"hyphen\"] - The caption separator (used if you want to specify the chapter number).\n     * @returns {boolean}\n     * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/AddCaption.js\n\t */",
        "description": "Adds a caption paragraph after (or before) the current content control.\n<note>Please note that the current content control must be in the document (not in the footer/header).\nAnd if the current content control is placed in a shape, then a caption is added after (or before) the parent shape.</note>",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAdditional",
                "description": "The additional text.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "CaptionLabel",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "CaptionLabel"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "sLabel",
                "description": "The caption label.",
                "optional": true,
                "defaultvalue": "\"Table\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bExludeLabel",
                "description": "Specifies whether to exclude the label from the caption.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "CaptionNumberingFormat"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "CaptionNumberingFormat"
                    }
                },
                "name": "sNumberingFormat",
                "description": "The possible caption numbering format.",
                "optional": true,
                "defaultvalue": "\"Arabic\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bBefore",
                "description": "Specifies whether to insert the caption before the current content control (true) or after (false) (after/before the shape if it is placed in the shape).",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nHeadingLvl",
                "description": "The heading level (used if you want to specify the chapter number).\n<note>If you want to specify \"Heading 1\", then nHeadingLvl === 0 and etc.</note>",
                "optional": true,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "CaptionSep"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "CaptionSep"
                    }
                },
                "name": "sCaptionSep",
                "description": "The caption separator (used if you want to specify the chapter number).",
                "optional": true,
                "defaultvalue": "\"hyphen\""
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "AddCaption",
        "longname": "ApiBlockLvlSdt#AddCaption",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18781,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/AddCaption.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a list of values of the combo box / dropdown list content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiContentControlList}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/GetDropdownList.js\n\t */",
        "description": "Returns a list of values of the combo box / dropdown list content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiContentControlList"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiContentControlList"
                    }
                }
            }
        ],
        "name": "GetDropdownList",
        "longname": "ApiBlockLvlSdt#GetDropdownList",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18866,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/GetDropdownList.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current content control.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current content control.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current content control.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current content control.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiBlockLvlSdt#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18882,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFormBase class.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {\"form\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFormBase class.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"form\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"form\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiFormBase#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {FormType}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormType.js\n\t */",
        "description": "Returns a type of the current form.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "FormType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "FormType"
                    }
                }
            }
        ],
        "name": "GetFormType",
        "longname": "ApiFormBase#GetFormType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18910,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current form key.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormKey.js\n\t */",
        "description": "Returns the current form key.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetFormKey",
        "longname": "ApiFormBase#GetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18934,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a key to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sKey - Form key.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetFormKey.js\n\t */",
        "description": "Sets a key to the current form.",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sKey",
                "description": "Form key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetFormKey",
        "longname": "ApiFormBase#SetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tip text of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTipText.js\n\t */",
        "description": "Returns the tip text of the current form.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetTipText",
        "longname": "ApiFormBase#GetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18983,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tip text to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sText - Tip text.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTipText.js\n\t */",
        "description": "Sets the tip text to the current form.",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "Tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTipText",
        "longname": "ApiFormBase#SetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19000,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsRequired.js\n\t */",
        "description": "Checks if the current form is required.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsRequired",
        "longname": "ApiFormBase#IsRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current form should be required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {boolean} bRequired - Defines if the current form is required (true) or not (false).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetRequired.js\n\t */",
        "description": "Specifies if the current form should be required.",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bRequired",
                "description": "Defines if the current form is required (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetRequired",
        "longname": "ApiFormBase#SetRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19032,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is fixed size.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsFixed.js\n\t */",
        "description": "Checks if the current form is fixed size.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsFixed",
        "longname": "ApiFormBase#IsFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to a fixed size form.\n\t * @memberof ApiFormBase\n\t * @param {twips} nWidth - The wrapper shape width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The wrapper shape height measured in twentieths of a point (1/1440 of an inch).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToFixed.js\n\t */",
        "description": "Converts the current form to a fixed size form.",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nWidth",
                "description": "The wrapper shape width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "twips"
                    }
                },
                "name": "nHeight",
                "description": "The wrapper shape height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ToFixed",
        "longname": "ApiFormBase#ToFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to an inline form.\n\t *Picture form can't be converted to an inline form, it's always a fixed size object.*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToInline.js\n\t */",
        "description": "Converts the current form to an inline form.\nPicture form can't be converted to an inline form, it's always a fixed size object.*",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "ToInline",
        "longname": "ApiFormBase#ToInline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19085,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToInline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that border color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBorderColor.js\n\t */",
        "description": "Sets the border color to the current form.",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that border color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetBorderColor",
        "longname": "ApiFormBase#SetBorderColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBorderColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current form.",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "byte"
                    }
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiFormBase#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text from the current form.\n\t *Returns the value as a string if possible for the given form type*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetText.js\n\t */",
        "description": "Returns the text from the current form.\nReturns the value as a string if possible for the given form type*",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiFormBase#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Clear.js\n\t */",
        "description": "Clears the current form.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiFormBase#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19191,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\n\t * The null value will be returned for the inline forms.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiShape} - returns the shape in which the form is placed.\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetWrapperShape.js\n\t */",
        "description": "Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\nThe null value will be returned for the inline forms.",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiShape",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetWrapperShape",
        "longname": "ApiFormBase#GetWrapperShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19205,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetWrapperShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current form.\n\t *Can't be set to checkbox or radio button.*\n\t * @memberof ApiFormBase\n\t * @param {string} sText - The text that will be set to the current form.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current form.\nCan't be set to checkbox or radio button.*",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The text that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiFormBase#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19223,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current form.\n\t * @return {boolean}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiFormBase#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19244,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties from the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties from the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiFormBase#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current form.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current form.",
        "memberof": "ApiFormBase",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean",
                        "nullable": true
                    }
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current form.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiFormBase#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19274,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current form (copies with the shape if it exists).\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiForm}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Copy.js\n\t */",
        "description": "Copies the current form (copies with the shape if it exists).",
        "memberof": "ApiFormBase",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiForm"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiForm",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiFormBase#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19285,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the text field content is autofit, i.e. whether the font size adjusts to the size of the fixed size form.\n\t * @memberof ApiTextForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/IsAutoFit.js\n\t */",
        "description": "Checks if the text field content is autofit, i.e. whether the font size adjusts to the size of the fixed size form.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsAutoFit",
        "longname": "ApiTextForm#IsAutoFit",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19334,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/IsAutoFit.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the text field content should be autofit, i.e. whether the font size adjusts to the size of the fixed size form.\n\t * @memberof ApiTextForm\n\t * @param {boolean} bAutoFit - Defines if the text field content is autofit (true) or not (false).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/SetAutoFit.js\n\t */",
        "description": "Specifies if the text field content should be autofit, i.e. whether the font size adjusts to the size of the fixed size form.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bAutoFit",
                "description": "Defines if the text field content is autofit (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetAutoFit",
        "longname": "ApiTextForm#SetAutoFit",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19346,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/SetAutoFit.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current text field is multiline.\n\t * @memberof ApiTextForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/IsMultiline.js\n\t */",
        "description": "Checks if the current text field is multiline.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsMultiline",
        "longname": "ApiTextForm#IsMultiline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19368,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/IsMultiline.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current text field should be miltiline.\n\t * @memberof ApiTextForm\n\t * @param {boolean} bMultiline - Defines if the current text field is multiline (true) or not (false).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean} - return false, if the text field is not fixed size.\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/SetMultiline.js\n\t */",
        "description": "Specifies if the current text field should be miltiline.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bMultiline",
                "description": "Defines if the current text field is multiline (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetMultiline",
        "longname": "ApiTextForm#SetMultiline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19380,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/SetMultiline.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a limit of the text field characters.\n\t * @memberof ApiTextForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {number} - if this method returns -1 -> the form has no limit for characters\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/GetCharactersLimit.js\n\t */",
        "description": "Returns a limit of the text field characters.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetCharactersLimit",
        "longname": "ApiTextForm#GetCharactersLimit",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19404,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/GetCharactersLimit.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a limit to the text field characters.\n\t * @memberof ApiTextForm\n\t * @param {number} nChars - The maximum number of characters in the text field. If this parameter is equal to -1, no limit will be set.\n\t * A limit is required to be set if a comb of characters is applied.\n\t * Maximum value for this parameter is 1000000.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/SetCharactersLimit.js\n\t */",
        "description": "Sets a limit to the text field characters.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nChars",
                "description": "The maximum number of characters in the text field. If this parameter is equal to -1, no limit will be set.\nA limit is required to be set if a comb of characters is applied.\nMaximum value for this parameter is 1000000.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetCharactersLimit",
        "longname": "ApiTextForm#SetCharactersLimit",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19422,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/SetCharactersLimit.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the text field is a comb of characters with the same cell width.\n\t * @memberof ApiTextForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/IsComb.js\n\t */",
        "description": "Checks if the text field is a comb of characters with the same cell width.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsComb",
        "longname": "ApiTextForm#IsComb",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19452,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/IsComb.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the text field should be a comb of characters with the same cell width.\n\t * The maximum number of characters must be set to a positive value.\n\t * @memberof ApiTextForm\n\t * @param {boolean} bComb - Defines if the text field is a comb of characters (true) or not (false).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/SetComb.js\n\t */",
        "description": "Specifies if the text field should be a comb of characters with the same cell width.\nThe maximum number of characters must be set to a positive value.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bComb",
                "description": "Defines if the text field is a comb of characters (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetComb",
        "longname": "ApiTextForm#SetComb",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19466,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/SetComb.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the cell width to the applied comb of characters.\n\t * @memberof ApiTextForm\n\t * @param {mm} [nCellWidth=0] - The cell width measured in millimeters.\n\t * If this parameter is not specified or equal to 0 or less, then the width will be set automatically. Must be >= 1 and <= 558.8.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/SetCellWidth.js\n\t */",
        "description": "Sets the cell width to the applied comb of characters.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "mm"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "mm"
                    }
                },
                "name": "nCellWidth",
                "description": "The cell width measured in millimeters.\nIf this parameter is not specified or equal to 0 or less, then the width will be set automatically. Must be >= 1 and <= 558.8.",
                "optional": true,
                "defaultvalue": 0
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetCellWidth",
        "longname": "ApiTextForm#SetCellWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19498,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/SetCellWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text to the current text field.\n\t * @memberof ApiTextForm\n\t * @param {string} sText - The text that will be set to the current text field.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTextForm/Methods/SetText.js\n\t */",
        "description": "Sets the text to the current text field.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The text that will be set to the current text field.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetText",
        "longname": "ApiTextForm#SetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19523,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextForm/Methods/SetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current scaling condition of the picture form.\n\t * @memberof ApiPictureForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {ScaleFlag}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/GetScaleFlag.js\n\t */",
        "description": "Returns the current scaling condition of the picture form.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ScaleFlag"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ScaleFlag"
                    }
                }
            }
        ],
        "name": "GetScaleFlag",
        "longname": "ApiPictureForm#GetScaleFlag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19549,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/GetScaleFlag.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the scaling condition to the current picture form.\n\t * @memberof ApiPictureForm\n\t * @param {ScaleFlag} sScaleFlag - Picture scaling condition: \"always\", \"never\", \"tooBig\" or \"tooSmall\".\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/SetScaleFlag.js\n\t */",
        "description": "Sets the scaling condition to the current picture form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "ScaleFlag"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ScaleFlag"
                    }
                },
                "name": "sScaleFlag",
                "description": "Picture scaling condition: \"always\", \"never\", \"tooBig\" or \"tooSmall\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetScaleFlag",
        "longname": "ApiPictureForm#SetScaleFlag",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19579,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/SetScaleFlag.js"
        ]
    },
    {
        "comment": "/**\n\t * Locks the aspect ratio of the current picture form.\n\t * @memberof ApiPictureForm\n\t * @param {boolean} [isLock=true] - Specifies if the aspect ratio of the current picture form will be locked (true) or not (false).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/SetLockAspectRatio.js\n\t */",
        "description": "Locks the aspect ratio of the current picture form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isLock",
                "description": "Specifies if the aspect ratio of the current picture form will be locked (true) or not (false).",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetLockAspectRatio",
        "longname": "ApiPictureForm#SetLockAspectRatio",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19616,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/SetLockAspectRatio.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the aspect ratio of the current picture form is locked or not.\n\t * @memberof ApiPictureForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/IsLockAspectRatio.js\n\t */",
        "description": "Checks if the aspect ratio of the current picture form is locked or not.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsLockAspectRatio",
        "longname": "ApiPictureForm#IsLockAspectRatio",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19633,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/IsLockAspectRatio.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the picture position inside the current form:\n\t * <b>0</b> - the picture is placed on the left/top;\n\t * <b>50</b> - the picture is placed in the center;\n\t * <b>100</b> - the picture is placed on the right/bottom.\n\t * @memberof ApiPictureForm\n\t * @param {percentage} nShiftX - Horizontal position measured in percent.\n\t * @param {percentage} nShiftY - Vertical position measured in percent.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/SetPicturePosition.js\n\t */",
        "description": "Sets the picture position inside the current form:\n<b>0</b> - the picture is placed on the left/top;\n<b>50</b> - the picture is placed in the center;\n<b>100</b> - the picture is placed on the right/bottom.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "percentage"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "percentage"
                    }
                },
                "name": "nShiftX",
                "description": "Horizontal position measured in percent.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "percentage"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "percentage"
                    }
                },
                "name": "nShiftY",
                "description": "Vertical position measured in percent.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetPicturePosition",
        "longname": "ApiPictureForm#SetPicturePosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19649,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/SetPicturePosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the picture position inside the current form.\n\t * @memberof ApiPictureForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {Array.<percentage>} Array of two numbers [shiftX, shiftY]\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/GetPicturePosition.js\n\t */",
        "description": "Returns the picture position inside the current form.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<percentage>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "type": "NameExpression",
                                "name": "percentage"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetPicturePosition",
        "longname": "ApiPictureForm#GetPicturePosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19667,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/GetPicturePosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Respects the form border width when scaling the image.\n\t * @memberof ApiPictureForm\n\t * @param {boolean} [isRespect=true] - Specifies if the form border width will be respected (true) or not (false).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/SetRespectBorders.js\n\t */",
        "description": "Respects the form border width when scaling the image.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isRespect",
                "description": "Specifies if the form border width will be respected (true) or not (false).",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetRespectBorders",
        "longname": "ApiPictureForm#SetRespectBorders",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19680,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/SetRespectBorders.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the form border width is respected or not.\n\t * @memberof ApiPictureForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/IsRespectBorders.js\n\t */",
        "description": "Checks if the form border width is respected or not.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsRespectBorders",
        "longname": "ApiPictureForm#IsRespectBorders",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19697,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/IsRespectBorders.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an image in the base64 format from the current picture form.\n\t * @memberof ApiPictureForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {base64img}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/GetImage.js\n\t */",
        "description": "Returns an image in the base64 format from the current picture form.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "base64img"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "base64img"
                    }
                }
            }
        ],
        "name": "GetImage",
        "longname": "ApiPictureForm#GetImage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19708,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/GetImage.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets an image to the current picture form.\n\t * @memberof ApiPictureForm\n\t * @param {string} sImageSrc - The image source where the image to be inserted should be taken from (currently, only internet URL or base64 encoded images are supported).\n\t * @param {EMU} nWidth - The image width in English measure units.\n\t * @param {EMU} nHeight - The image height in English measure units.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiPictureForm/Methods/SetImage.js\n\t */",
        "description": "Sets an image to the current picture form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sImageSrc",
                "description": "The image source where the image to be inserted should be taken from (currently, only internet URL or base64 encoded images are supported).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The image width in English measure units.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The image height in English measure units.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetImage",
        "longname": "ApiPictureForm#SetImage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19735,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiPictureForm/Methods/SetImage.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the list values from the current combo box.\n\t * @memberof ApiComboBoxForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string[]}\n\t * @see office-js-api/Examples/{Editor}/ApiComboBoxForm/Methods/GetListValues.js\n\t */",
        "description": "Returns the list values from the current combo box.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "string",
                                "type": "NameExpression"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetListValues",
        "longname": "ApiComboBoxForm#GetListValues",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19813,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComboBoxForm/Methods/GetListValues.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the list values to the current combo box.\n\t * @memberof ApiComboBoxForm\n\t * @param {string[]} aListString - The combo box list values.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiComboBoxForm/Methods/SetListValues.js\n\t */",
        "description": "Sets the list values to the current combo box.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ],
                    "parsedType": {
                        "type": "TypeApplication",
                        "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                        },
                        "applications": [
                            {
                                "name": "string",
                                "type": "NameExpression"
                            }
                        ]
                    }
                },
                "name": "aListString",
                "description": "The combo box list values.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetListValues",
        "longname": "ApiComboBoxForm#SetListValues",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19834,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComboBoxForm/Methods/SetListValues.js"
        ]
    },
    {
        "comment": "/**\n\t * Selects the specified value from the combo box list values. \n\t * @memberof ApiComboBoxForm\n\t * @param {string} sValue - The combo box list value that will be selected.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiComboBoxForm/Methods/SelectListValue.js\n\t */",
        "description": "Selects the specified value from the combo box list values.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sValue",
                "description": "The combo box list value that will be selected.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SelectListValue",
        "longname": "ApiComboBoxForm#SelectListValue",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19869,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComboBoxForm/Methods/SelectListValue.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text to the current combo box.\n\t *Available only for editable combo box forms.*\n\t * @memberof ApiComboBoxForm\n\t * @param {string} sText - The combo box text.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiComboBoxForm/Methods/SetText.js\n\t */",
        "description": "Sets the text to the current combo box.\nAvailable only for editable combo box forms.*",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The combo box text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetText",
        "longname": "ApiComboBoxForm#SetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19896,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComboBoxForm/Methods/SetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the combo box text can be edited. If it is not editable, then this form is a dropdown list.\n\t * @memberof ApiComboBoxForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiComboBoxForm/Methods/IsEditable.js\n\t */",
        "description": "Checks if the combo box text can be edited. If it is not editable, then this form is a dropdown list.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsEditable",
        "longname": "ApiComboBoxForm#IsEditable",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19923,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComboBoxForm/Methods/IsEditable.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks the current checkbox.\n\t * @memberof ApiCheckBoxForm\n\t * @param {boolean} isChecked - Specifies if the current checkbox will be checked (true) or not (false).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiCheckBoxForm/Methods/SetChecked.js\n\t */",
        "description": "Checks the current checkbox.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "isChecked",
                "description": "Specifies if the current checkbox will be checked (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetChecked",
        "longname": "ApiCheckBoxForm#SetChecked",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19942,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCheckBoxForm/Methods/SetChecked.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the state of the current checkbox (checked or not).\n\t * @memberof ApiCheckBoxForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiCheckBoxForm/Methods/IsChecked.js\n\t */",
        "description": "Returns the state of the current checkbox (checked or not).",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsChecked",
        "longname": "ApiCheckBoxForm#IsChecked",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19960,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCheckBoxForm/Methods/IsChecked.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current checkbox is a radio button. \n\t * @memberof ApiCheckBoxForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiCheckBoxForm/Methods/IsRadioButton.js\n\t */",
        "description": "Checks if the current checkbox is a radio button.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsRadioButton",
        "longname": "ApiCheckBoxForm#IsRadioButton",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19971,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCheckBoxForm/Methods/IsRadioButton.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the radio group key if the current checkbox is a radio button.\n\t * @memberof ApiCheckBoxForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiCheckBoxForm/Methods/GetRadioGroup.js\n\t */",
        "description": "Returns the radio group key if the current checkbox is a radio button.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetRadioGroup",
        "longname": "ApiCheckBoxForm#GetRadioGroup",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19982,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCheckBoxForm/Methods/GetRadioGroup.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the radio group key to the current radio button.\n\t * @memberof ApiCheckBoxForm\n\t * @param {string} sKey - Radio group key.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiCheckBoxForm/Methods/SetRadioGroup.js\n\t */",
        "description": "Sets the radio group key to the current radio button.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sKey",
                "description": "Radio group key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetRadioGroup",
        "longname": "ApiCheckBoxForm#SetRadioGroup",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19994,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCheckBoxForm/Methods/SetRadioGroup.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the date format of the current form.\n\t * @memberof ApiDateForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiDateForm/Methods/GetFormat.js\n\t */",
        "description": "Gets the date format of the current form.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetFormat",
        "longname": "ApiDateForm#GetFormat",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20021,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDateForm/Methods/GetFormat.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the date format to the current form.\n\t * @memberof ApiDateForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sFormat - The date format. For example, mm.dd.yyyy\n\t * @returns {boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiDateForm/Methods/SetFormat.js\n\t */",
        "description": "Sets the date format to the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sFormat",
                "description": "The date format. For example, mm.dd.yyyy",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetFormat",
        "longname": "ApiDateForm#SetFormat",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20035,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDateForm/Methods/SetFormat.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the used date language of the current form.\n\t * @memberof ApiDateForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiDateForm/Methods/GetLanguage.js\n\t */",
        "description": "Gets the used date language of the current form.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetLanguage",
        "longname": "ApiDateForm#GetLanguage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20057,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDateForm/Methods/GetLanguage.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the date language to the current form.\n\t * @memberof ApiDateForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sLangId - The date language. The possible value for this parameter is a language identifier as defined in\n\t * RFC 4646/BCP 47. Example: \"en-CA\".\n\t * @returns {boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiDateForm/Methods/SetLanguage.js\n\t */",
        "description": "Sets the date language to the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sLangId",
                "description": "The date language. The possible value for this parameter is a language identifier as defined in\nRFC 4646/BCP 47. Example: \"en-CA\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetLanguage",
        "longname": "ApiDateForm#SetLanguage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20077,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDateForm/Methods/SetLanguage.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the timestamp of the current form.\n\t * @memberof ApiDateForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {number}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiDateForm/Methods/GetTime.js\n\t */",
        "description": "Returns the timestamp of the current form.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetTime",
        "longname": "ApiDateForm#GetTime",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20100,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDateForm/Methods/GetTime.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the timestamp to the current form.\n\t * @memberof ApiDateForm\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {number} nTimeStamp The timestamp that will be set to the current date form.\n\t * @returns {boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiDateForm/Methods/SetTime.js\n\t */",
        "description": "Sets the timestamp to the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nTimeStamp",
                "description": "The timestamp that will be set to the current date form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "SetTime",
        "longname": "ApiDateForm#SetTime",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20117,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDateForm/Methods/SetTime.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiBlockLvlSdt object into the JSON object.\n\t * @memberof ApiBlockLvlSdt\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @return {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiBlockLvlSdt/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiBlockLvlSdt object into the JSON object.",
        "memberof": "ApiBlockLvlSdt",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "JSON"
                    }
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiBlockLvlSdt#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20141,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiBlockLvlSdt/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Replaces each paragraph (or text in cell) in the select with the corresponding text from an array of strings.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {Array} arrString - An array of replacement strings.\n\t * @param {string} [sParaTab=\" \"] - A character which is used to specify the tab in the source text.\n\t * @param {string} [sParaNewLine=\" \"] - A character which is used to specify the line break character in the source text.\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/ReplaceTextSmart.js\n\t */",
        "description": "Replaces each paragraph (or text in cell) in the select with the corresponding text from an array of strings.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Array"
                    }
                },
                "name": "arrString",
                "description": "An array of replacement strings.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sParaTab",
                "description": "A character which is used to specify the tab in the source text.",
                "optional": true,
                "defaultvalue": "\" \""
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sParaNewLine",
                "description": "A character which is used to specify the line break character in the source text.",
                "optional": true,
                "defaultvalue": "\" \""
            }
        ],
        "returns": null,
        "name": "ReplaceTextSmart",
        "longname": "Api#ReplaceTextSmart",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20161,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/ReplaceTextSmart.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts a document to Markdown or HTML text.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {\"markdown\" | \"html\"} [sConvertType=\"markdown\"] - Conversion type.\n\t * @param {boolean} [bHtmlHeadings=false] - Defines if the HTML headings and IDs will be generated when the Markdown renderer of your target platform does not handle Markdown-style IDs.\n\t * @param {boolean} [bBase64img=false] - Defines if the images will be created in the base64 format.\n\t * @param {boolean} [bDemoteHeadings=false] - Defines if all heading levels in your document will be demoted to conform with the following standard: single H1 as title, H2 as top-level heading in the text body.\n\t * @param {boolean} [bRenderHTMLTags=false] - Defines if HTML tags will be preserved in your Markdown. If you just want to use an occasional HTML tag, you can avoid using the opening angle bracket\n\t * in the following way: \\<tag&gt;text\\</tag&gt;. By default, the opening angle brackets will be replaced with the special characters.\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/ConvertDocument.js\n\t */",
        "description": "Converts a document to Markdown or HTML text.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "\"markdown\"",
                        "\"html\""
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "\"markdown\""
                            },
                            {
                                "type": "NameExpression",
                                "name": "\"html\""
                            }
                        ]
                    }
                },
                "name": "sConvertType",
                "description": "Conversion type.",
                "optional": true,
                "defaultvalue": "\"markdown\""
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bHtmlHeadings",
                "description": "Defines if the HTML headings and IDs will be generated when the Markdown renderer of your target platform does not handle Markdown-style IDs.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bBase64img",
                "description": "Defines if the images will be created in the base64 format.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bDemoteHeadings",
                "description": "Defines if all heading levels in your document will be demoted to conform with the following standard: single H1 as title, H2 as top-level heading in the text body.",
                "optional": true,
                "defaultvalue": false
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bRenderHTMLTags",
                "description": "Defines if HTML tags will be preserved in your Markdown. If you just want to use an occasional HTML tag, you can avoid using the opening angle bracket\nin the following way: \\<tag&gt;text\\</tag&gt;. By default, the opening angle brackets will be replaced with the special characters.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "ConvertDocument",
        "longname": "Api#ConvertDocument",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20595,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/ConvertDocument.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates the empty text properties.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateTextPr.js\n\t */",
        "description": "Creates the empty text properties.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "CreateTextPr",
        "longname": "Api#CreateTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20614,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Creates a Text Art object with the parameters specified.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} [oTextPr=Api.CreateTextPr()] - The text properties.\n\t * @param {string} [sText=\"Your text here\"] - The text for the Text Art object.\n\t * @param {TextTransform} [sTransform=\"textNoShape\"] - Text transform type.\n\t * @param {ApiFill}   [oFill=Api.CreateNoFill()] - The color or pattern used to fill the Text Art object.\n\t * @param {ApiStroke} [oStroke=Api.CreateStroke(0, Api.CreateNoFill())] - The stroke used to create the Text Art object shadow.\n\t * @param {number} [nRotAngle=0] - Rotation angle.\n\t * @param {EMU} [nWidth=1828800] - The Text Art width measured in English measure units.\n\t * @param {EMU} [nHeight=1828800] - The Text Art heigth measured in English measure units.\n\t * @returns {ApiDrawing}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/CreateWordArt.js\n\t */",
        "description": "Creates a Text Art object with the parameters specified.",
        "memberof": "Api",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The text properties.",
                "optional": true,
                "defaultvalue": "Api.CreateTextPr()"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The text for the Text Art object.",
                "optional": true,
                "defaultvalue": "\"Your text here\""
            },
            {
                "type": {
                    "names": [
                        "TextTransform"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "TextTransform"
                    }
                },
                "name": "sTransform",
                "description": "Text transform type.",
                "optional": true,
                "defaultvalue": "\"textNoShape\""
            },
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiFill"
                    }
                },
                "name": "oFill",
                "description": "The color or pattern used to fill the Text Art object.",
                "optional": true,
                "defaultvalue": "Api.CreateNoFill()"
            },
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiStroke"
                    }
                },
                "name": "oStroke",
                "description": "The stroke used to create the Text Art object shadow.",
                "optional": true,
                "defaultvalue": "Api.CreateStroke(0, Api.CreateNoFill())"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nRotAngle",
                "description": "Rotation angle.",
                "optional": true,
                "defaultvalue": 0
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The Text Art width measured in English measure units.",
                "optional": true,
                "defaultvalue": 1828800
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The Text Art heigth measured in English measure units.",
                "optional": true,
                "defaultvalue": 1828800
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiDrawing"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiDrawing"
                    }
                }
            }
        ],
        "name": "CreateWordArt",
        "longname": "Api#CreateWordArt",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20633,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/CreateWordArt.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the full name of the currently opened file.\n\t * @memberof Api\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/Api/Methods/GetFullName.js\n\t */",
        "description": "Returns the full name of the currently opened file.",
        "memberof": "Api",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetFullName",
        "longname": "Api#GetFullName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20657,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/Api/Methods/GetFullName.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiComment class.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {\"comment\"}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiComment class.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"comment\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"comment\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiComment#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20679,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current comment ID. If the comment doesn't have an ID, null is returned.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?string}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetId.js\n\t */",
        "description": "Returns the current comment ID. If the comment doesn't have an ID, null is returned.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetId",
        "longname": "ApiComment#GetId",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20691,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetId.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the comment text.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetText.js\n\t */",
        "description": "Returns the comment text.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiComment#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20707,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the comment text.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sText - The comment text.\n\t * @returns {ApiComment} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/SetText.js\n\t */",
        "description": "Sets the comment text.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment"
                    }
                }
            }
        ],
        "name": "SetText",
        "longname": "ApiComment#SetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20719,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/SetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the comment author's name.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetAuthorName.js\n\t */",
        "description": "Returns the comment author's name.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetAuthorName",
        "longname": "ApiComment#GetAuthorName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20732,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetAuthorName.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the comment author's name.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sAuthorName - The comment author's name.\n\t * @returns {ApiComment} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/SetAuthorName.js\n\t */",
        "description": "Sets the comment author's name.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthorName",
                "description": "The comment author's name.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment"
                    }
                }
            }
        ],
        "name": "SetAuthorName",
        "longname": "ApiComment#SetAuthorName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20744,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/SetAuthorName.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the user ID of the comment author.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetUserId.js\n\t */",
        "description": "Returns the user ID of the comment author.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetUserId",
        "longname": "ApiComment#GetUserId",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20757,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetUserId.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the user ID to the comment author.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sUserId - The user ID of the comment author.\n\t * @returns {ApiComment} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/SetUserId.js\n\t */",
        "description": "Sets the user ID to the comment author.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment author.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment"
                    }
                }
            }
        ],
        "name": "SetUserId",
        "longname": "ApiComment#SetUserId",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20769,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/SetUserId.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if a comment is solved or not.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/IsSolved.js\n\t */",
        "description": "Checks if a comment is solved or not.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "IsSolved",
        "longname": "ApiComment#IsSolved",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20782,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/IsSolved.js"
        ]
    },
    {
        "comment": "/**\n\t * Marks a comment as solved.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {boolean} bSolved - Specifies if a comment is solved or not.\n\t * @returns {ApiComment} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/SetSolved.js\n\t */",
        "description": "Marks a comment as solved.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bSolved",
                "description": "Specifies if a comment is solved or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment"
                    }
                }
            }
        ],
        "name": "SetSolved",
        "longname": "ApiComment#SetSolved",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20794,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/SetSolved.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the timestamp of the comment creation in UTC format.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {Number}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetTimeUTC.js\n\t */",
        "description": "Returns the timestamp of the comment creation in UTC format.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetTimeUTC",
        "longname": "ApiComment#GetTimeUTC",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20807,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetTimeUTC.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the timestamp of the comment creation in UTC format.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {Number | String} nTimeStamp - The timestamp of the comment creation in UTC format.\n\t * @returns {ApiComment} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/SetTimeUTC.js\n\t */",
        "description": "Sets the timestamp of the comment creation in UTC format.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "Number",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "Number"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "nTimeStamp",
                "description": "The timestamp of the comment creation in UTC format.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment"
                    }
                }
            }
        ],
        "name": "SetTimeUTC",
        "longname": "ApiComment#SetTimeUTC",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20822,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/SetTimeUTC.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the timestamp of the comment creation in the current time zone format.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {Number}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetTime.js\n\t */",
        "description": "Returns the timestamp of the comment creation in the current time zone format.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                }
            }
        ],
        "name": "GetTime",
        "longname": "ApiComment#GetTime",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20840,
            "columnno": 2
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetTime.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the timestamp of the comment creation in the current time zone format.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {Number | String} nTimeStamp - The timestamp of the comment creation in the current time zone format.\n\t * @returns {ApiComment} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/SetTime.js\n\t */",
        "description": "Sets the timestamp of the comment creation in the current time zone format.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "Number",
                        "String"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "Number"
                            },
                            {
                                "type": "NameExpression",
                                "name": "String"
                            }
                        ]
                    }
                },
                "name": "nTimeStamp",
                "description": "The timestamp of the comment creation in the current time zone format.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment"
                    }
                }
            }
        ],
        "name": "SetTime",
        "longname": "ApiComment#SetTime",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20852,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/SetTime.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the quote text of the current comment.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {Number?}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetQuoteText.js\n\t */",
        "description": "Returns the quote text of the current comment.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetQuoteText",
        "longname": "ApiComment#GetQuoteText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20870,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetQuoteText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of the comment replies.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {Number?}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetRepliesCount.js\n\t */",
        "description": "Returns a number of the comment replies.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetRepliesCount",
        "longname": "ApiComment#GetRepliesCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20881,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetRepliesCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the specified comment reply.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} [nIndex = 0] - The comment reply index.\n\t * @returns {ApiCommentReply?}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/GetReply.js\n\t */",
        "description": "Returns the specified comment reply.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nIndex",
                "description": "The comment reply index.",
                "optional": true,
                "defaultvalue": 0
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiCommentReply"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiCommentReply",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetReply",
        "longname": "ApiComment#GetReply",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20893,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/GetReply.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a reply to a comment.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {String} sText - The comment reply text (required).\n\t * @param {String} sAuthorName - The name of the comment reply author (optional).\n\t * @param {String} sUserId - The user ID of the comment reply author (optional).\n\t * @param {Number} [nPos=this.GetRepliesCount()] - The comment reply position.\n\t * @returns {ApiComment?} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/AddReply.js\n\t */",
        "description": "Adds a reply to a comment.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sText",
                "description": "The comment reply text (required).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sAuthorName",
                "description": "The name of the comment reply author (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "String"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "String"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment reply author (optional).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nPos",
                "description": "The comment reply position.",
                "optional": true,
                "defaultvalue": "this.GetRepliesCount()"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "AddReply",
        "longname": "ApiComment#AddReply",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20915,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/AddReply.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes the specified comment replies.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {Number} [nPos = 0] - The position of the first comment reply to remove.\n\t * @param {Number} [nCount = 1] - A number of comment replies to remove.\n\t * @param {boolean} [bRemoveAll = false] - Specifies whether to remove all comment replies or not.\n\t * @returns {ApiComment?} - this\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/RemoveReplies.js\n\t */",
        "description": "Removes the specified comment replies.",
        "memberof": "ApiComment",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nPos",
                "description": "The position of the first comment reply to remove.",
                "optional": true,
                "defaultvalue": 0
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "Number"
                    }
                },
                "name": "nCount",
                "description": "A number of comment replies to remove.",
                "optional": true,
                "defaultvalue": 1
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                },
                "name": "bRemoveAll",
                "description": "Specifies whether to remove all comment replies or not.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiComment"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiComment",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "RemoveReplies",
        "longname": "ApiComment#RemoveReplies",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20943,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/RemoveReplies.js"
        ]
    },
    {
        "comment": "/**\n\t * Deletes the current comment from the document.\n\t * @memberof ApiComment\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiComment/Methods/Delete.js\n\t */",
        "description": "Deletes the current comment from the document.",
        "memberof": "ApiComment",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "boolean"
                    }
                }
            }
        ],
        "name": "Delete",
        "longname": "ApiComment#Delete",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20966,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiComment/Methods/Delete.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiCommentReply class.\n\t * @memberof ApiCommentReply\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {\"commentReply\"}\n\t * @see office-js-api/Examples/{Editor}/ApiCommentReply/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiCommentReply class.",
        "memberof": "ApiCommentReply",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"commentReply\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"commentReply\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiCommentReply#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20982,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCommentReply/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the comment reply text.\n\t * @memberof ApiCommentReply\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiCommentReply/Methods/GetText.js\n\t */",
        "description": "Returns the comment reply text.",
        "memberof": "ApiCommentReply",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiCommentReply#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 20993,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCommentReply/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the comment reply text.\n\t * @memberof ApiCommentReply\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sText - The comment reply text.\n\t * @returns {ApiCommentReply} - this\n\t * @see office-js-api/Examples/{Editor}/ApiCommentReply/Methods/SetText.js\n\t */",
        "description": "Sets the comment reply text.",
        "memberof": "ApiCommentReply",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The comment reply text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiCommentReply"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiCommentReply"
                    }
                }
            }
        ],
        "name": "SetText",
        "longname": "ApiCommentReply#SetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21005,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCommentReply/Methods/SetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the comment reply author's name.\n\t * @memberof ApiCommentReply\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiCommentReply/Methods/GetAuthorName.js\n\t */",
        "description": "Returns the comment reply author's name.",
        "memberof": "ApiCommentReply",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetAuthorName",
        "longname": "ApiCommentReply#GetAuthorName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21018,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCommentReply/Methods/GetAuthorName.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the comment reply author's name.\n\t * @memberof ApiCommentReply\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sAuthorName - The comment reply author's name.\n\t * @returns {ApiCommentReply} - this\n\t * @see office-js-api/Examples/{Editor}/ApiCommentReply/Methods/SetAuthorName.js\n\t */",
        "description": "Sets the comment reply author's name.",
        "memberof": "ApiCommentReply",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sAuthorName",
                "description": "The comment reply author's name.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiCommentReply"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiCommentReply"
                    }
                }
            }
        ],
        "name": "SetAuthorName",
        "longname": "ApiCommentReply#SetAuthorName",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21030,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCommentReply/Methods/SetAuthorName.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the user ID of the comment reply author.\n\t * @memberof ApiCommentReply\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiCommentReply/Methods/GetUserId.js\n\t */",
        "description": "Returns the user ID of the comment reply author.",
        "memberof": "ApiCommentReply",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                }
            }
        ],
        "name": "GetUserId",
        "longname": "ApiCommentReply#GetUserId",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21043,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCommentReply/Methods/GetUserId.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the user ID to the comment reply author.\n\t * @memberof ApiCommentReply\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {string} sUserId - The user ID of the comment reply author.\n\t * @returns {ApiCommentReply} - this\n\t * @see office-js-api/Examples/{Editor}/ApiCommentReply/Methods/SetUserId.js\n\t */",
        "description": "Sets the user ID to the comment reply author.",
        "memberof": "ApiCommentReply",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sUserId",
                "description": "The user ID of the comment reply author.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiCommentReply"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiCommentReply"
                    }
                }
            }
        ],
        "name": "SetUserId",
        "longname": "ApiCommentReply#SetUserId",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21055,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiCommentReply/Methods/SetUserId.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiWatermarkSettings class.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"watermarkSettings\"}\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiWatermarkSettings class.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"watermarkSettings\""
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "\"watermarkSettings\""
                    }
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiWatermarkSettings#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21069,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the type of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @param {WatermarkType} sType - The watermark type.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/SetType.js\n\t */",
        "description": "Sets the type of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": [
            {
                "type": {
                    "names": [
                        "WatermarkType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "WatermarkType"
                    }
                },
                "name": "sType",
                "description": "The watermark type.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetType",
        "longname": "ApiWatermarkSettings#SetType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21081,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/SetType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the type of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {WatermarkType}\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetType.js\n\t */",
        "description": "Returns the type of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "WatermarkType"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "WatermarkType"
                    }
                }
            }
        ],
        "name": "GetType",
        "longname": "ApiWatermarkSettings#GetType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetType.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sText - The watermark text.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/SetText.js\n\t */",
        "description": "Sets the text of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sText",
                "description": "The watermark text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetText",
        "longname": "ApiWatermarkSettings#SetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21127,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/SetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string | null}\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetText.js\n\t */",
        "description": "Returns the text of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "string"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiWatermarkSettings#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21139,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiTextPr} oTextPr - The watermark text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                },
                "name": "oTextPr",
                "description": "The watermark text properties.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTextPr",
        "longname": "ApiWatermarkSettings#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21151,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "ApiTextPr"
                    }
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiWatermarkSettings#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21163,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the opacity of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nOpacity - The watermark opacity. This value must be from 0 to 255.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/SetOpacity.js\n\t */",
        "description": "Sets the opacity of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                },
                "name": "nOpacity",
                "description": "The watermark opacity. This value must be from 0 to 255.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetOpacity",
        "longname": "ApiWatermarkSettings#SetOpacity",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21185,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/SetOpacity.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the opacity of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {number} - The watermark opacity. This value must be from 0 to 255.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetOpacity.js\n\t */",
        "description": "Returns the opacity of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "number"
                    }
                }
            }
        ],
        "name": "GetOpacity",
        "longname": "ApiWatermarkSettings#GetOpacity",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21198,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetOpacity.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the direction of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @param {WatermarkDirection} sDirection - The watermark direction.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/SetDirection.js\n\t */",
        "description": "Sets the direction of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": [
            {
                "type": {
                    "names": [
                        "WatermarkDirection"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "WatermarkDirection"
                    }
                },
                "name": "sDirection",
                "description": "The watermark direction.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetDirection",
        "longname": "ApiWatermarkSettings#SetDirection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21212,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/SetDirection.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the direction of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?WatermarkDirection} - The watermark direction.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetDirection.js\n\t */",
        "description": "Returns the direction of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "WatermarkDirection"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "WatermarkDirection",
                        "nullable": true
                    }
                }
            }
        ],
        "name": "GetDirection",
        "longname": "ApiWatermarkSettings#GetDirection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21240,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetDirection.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the image URL of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sURL - The watermark image URL.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/SetImageURL.js\n\t */",
        "description": "Sets the image URL of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "string"
                    }
                },
                "name": "sURL",
                "description": "The watermark image URL.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetImageURL",
        "longname": "ApiWatermarkSettings#SetImageURL",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21265,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/SetImageURL.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the image URL of the watermark in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {string | null} - The watermark image URL.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetImageURL.js\n\t */",
        "description": "Returns the image URL of the watermark in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "string"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetImageURL",
        "longname": "ApiWatermarkSettings#GetImageURL",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21277,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetImageURL.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the width of the watermark image in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {EMU | null} - The watermark image width in EMU.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetImageWidth.js\n\t */",
        "description": "Returns the width of the watermark image in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "EMU",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "EMU"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetImageWidth",
        "longname": "ApiWatermarkSettings#GetImageWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21289,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetImageWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the height of the watermark image in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {EMU | null} - The watermark image height in EMU.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/GetImageHeight.js\n\t */",
        "description": "Returns the height of the watermark image in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "EMU",
                        "null"
                    ],
                    "parsedType": {
                        "type": "TypeUnion",
                        "elements": [
                            {
                                "type": "NameExpression",
                                "name": "EMU"
                            },
                            {
                                "type": "NullLiteral"
                            }
                        ]
                    }
                }
            }
        ],
        "name": "GetImageHeight",
        "longname": "ApiWatermarkSettings#GetImageHeight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21300,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/GetImageHeight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the size (width and height) of the watermark image in the document.\n\t * @memberof ApiWatermarkSettings\n\t * @typeofeditors [\"CDE\"]\n\t * @param {EMU} nWidth - The watermark image width.\n\t * @param {EMU} nHeight - The watermark image height.\n\t * @see office-js-api/Examples/{Editor}/ApiWatermarkSettings/Methods/SetImageSize.js\n\t */",
        "description": "Sets the size (width and height) of the watermark image in the document.",
        "memberof": "ApiWatermarkSettings",
        "params": [
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nWidth",
                "description": "The watermark image width.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "EMU"
                    ],
                    "parsedType": {
                        "type": "NameExpression",
                        "name": "EMU"
                    }
                },
                "name": "nHeight",
                "description": "The watermark image height.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetImageSize",
        "longname": "ApiWatermarkSettings#SetImageSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 21314,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiWatermarkSettings/Methods/SetImageSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiDocumentContent class. \n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"documentContent\"}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiDocumentContent class.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"documentContent\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiDocument#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5397,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a number of elements in the current document.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {number}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetElementsCount.js\n\t */",
        "description": "Returns a number of elements in the current document.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetElementsCount",
        "longname": "ApiDocument#GetElementsCount",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5408,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetElementsCount.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an element by its position in the document.\n\t * @memberof ApiDocumentContent\n\t * @param {number} nPos - The element position that will be taken from the document.\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {?DocumentElement}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetElement.js\n\t */",
        "description": "Returns an element by its position in the document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nPos",
                "description": "The element position that will be taken from the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetElement",
        "longname": "ApiDocument#GetElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5420,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Adds a paragraph or a table or a blockLvl content control using its position in the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {number} nPos - The position where the current element will be added.\n\t * @param {DocumentElement} oElement - The document element which will be added at the current position.\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/AddElement.js\n\t */",
        "description": "Adds a paragraph or a table or a blockLvl content control using its position in the document content.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nPos",
                "description": "The position where the current element will be added.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": null
                },
                "name": "oElement",
                "description": "The document element which will be added at the current position.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "AddElement",
        "longname": "ApiDocument#AddElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5443,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/AddElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Pushes a paragraph or a table to actually add it to the document.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {DocumentElement} oElement - The element type which will be pushed to the document.\n\t * @returns {boolean} - returns false if oElement is unsupported.\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/Push.js\n\t */",
        "description": "Pushes a paragraph or a table to actually add it to the document.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "DocumentElement"
                    ],
                    "parsedType": null
                },
                "name": "oElement",
                "description": "The element type which will be pushed to the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "Push",
        "longname": "ApiDocument#Push",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5461,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/Push.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes all the elements from the current document or from the current document element.\n\t * <note>When all elements are removed, a new empty paragraph is automatically created. If you want to add\n\t * content to this paragraph, use the {@link ApiDocumentContent#GetElement} method.</note>\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/RemoveAllElements.js\n\t */",
        "description": "Removes all the elements from the current document or from the current document element.\n<note>When all elements are removed, a new empty paragraph is automatically created. If you want to add\ncontent to this paragraph, use the {@link ApiDocumentContent#GetElement} method.</note>",
        "memberof": "ApiDocument",
        "params": null,
        "returns": null,
        "name": "RemoveAllElements",
        "longname": "ApiDocument#RemoveAllElements",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5483,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/RemoveAllElements.js"
        ]
    },
    {
        "comment": "/**\n\t * Removes an element using the position specified.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {number} nPos - The element number (position) in the document or inside other element.\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/RemoveElement.js\n\t */",
        "description": "Removes an element using the position specified.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nPos",
                "description": "The element number (position) in the document or inside other element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "RemoveElement",
        "longname": "ApiDocument#RemoveElement",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5494,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/RemoveElement.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a Range object that represents the part of the document contained in the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @param {Number} Start - Start character in the current element.\n\t * @param {Number} End - End character in the current element.\n\t * @returns {ApiRange} \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetRange.js\n\t */",
        "description": "Returns a Range object that represents the part of the document contained in the document content.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": null
                },
                "name": "Start",
                "description": "Start character in the current element.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": null
                },
                "name": "End",
                "description": "End character in the current element.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRange"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetRange",
        "longname": "ApiDocument#GetRange",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5510,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetRange.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiDocumentContent object into the JSON object.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteNumberings - Specifies if the used numberings will be written to the JSON object or not.\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiDocumentContent object into the JSON object.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bWriteNumberings",
                "description": "Specifies if the used numberings will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiDocument#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5523,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an array of document elements from the current ApiDocumentContent object.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bGetCopies - Specifies if the copies of the document elements will be returned or not.\n\t * @returns {Array}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetContent.js\n\t */",
        "description": "Returns an array of document elements from the current ApiDocumentContent object.",
        "memberof": "ApiDocument",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bGetCopies",
                "description": "Specifies if the copies of the document elements will be returned or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetContent",
        "longname": "ApiDocument#GetContent",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5542,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetContent.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of drawing objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiDrawing[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllDrawingObjects.js\n\t */",
        "description": "Returns a collection of drawing objects from the document content.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiDrawing>"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetAllDrawingObjects",
        "longname": "ApiDocument#GetAllDrawingObjects",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5571,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllDrawingObjects.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of shape objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiShape[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllShapes.js\n\t */",
        "description": "Returns a collection of shape objects from the document content.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiShape>"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetAllShapes",
        "longname": "ApiDocument#GetAllShapes",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5588,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllShapes.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of image objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiImage[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllImages.js\n\t */",
        "description": "Returns a collection of image objects from the document content.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiImage>"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetAllImages",
        "longname": "ApiDocument#GetAllImages",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5601,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllImages.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of chart objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiChart[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllCharts.js\n\t */",
        "description": "Returns a collection of chart objects from the document content.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiChart>"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetAllCharts",
        "longname": "ApiDocument#GetAllCharts",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5614,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllCharts.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a collection of OLE objects from the document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiOleObject[]}  \n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllOleObjects.js\n\t */",
        "description": "Returns a collection of OLE objects from the document content.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiOleObject>"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetAllOleObjects",
        "longname": "ApiDocument#GetAllOleObjects",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5627,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllOleObjects.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an array of all paragraphs from the current document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllParagraphs.js\n\t */",
        "description": "Returns an array of all paragraphs from the current document content.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetAllParagraphs",
        "longname": "ApiDocument#GetAllParagraphs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5640,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllParagraphs.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns an array of all tables from the current document content.\n\t * @memberof ApiDocumentContent\n\t * @typeofeditors [\"CDE\"]\n\t * @return {ApiParagraph[]}\n\t * @see office-js-api/Examples/{Editor}/ApiDocumentContent/Methods/GetAllTables.js\n\t */",
        "description": "Returns an array of all tables from the current document content.",
        "memberof": "ApiDocument",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<ApiParagraph>"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetAllTables",
        "longname": "ApiDocument#GetAllTables",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 5656,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiDocumentContent/Methods/GetAllTables.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiParaPr class.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"paraPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiParaPr class.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"paraPr\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiParagraph#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13373,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * The paragraph style base method.\n\t * <note>This method is not used by itself, as it only forms the basis for the {@link ApiParagraph#SetStyle} method which sets the selected or created style for the paragraph.</note>\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStyle} oStyle - The style of the paragraph to be set.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetStyle.js\n\t */",
        "description": "The paragraph style base method.\n<note>This method is not used by itself, as it only forms the basis for the {@link ApiParagraph#SetStyle} method which sets the selected or created style for the paragraph.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": null
                },
                "name": "oStyle",
                "description": "The style of the paragraph to be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetStyle",
        "longname": "ApiParagraph#SetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13385,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph style method.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiStyle} - The style of the paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetStyle.js\n\t */",
        "description": "Returns the paragraph style method.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetStyle",
        "longname": "ApiParagraph#GetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13400,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that any space before or after this paragraph set using the \n\t * {@link ApiParaPr#SetSpacingBefore} or {@link ApiParaPr#SetSpacingAfter} spacing element, should not be applied when the preceding and \n\t * following paragraphs are of the same paragraph style, affecting the top and bottom spacing respectively.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isContextualSpacing - The true value will enable the paragraph contextual spacing.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetContextualSpacing.js\n\t */",
        "description": "Specifies that any space before or after this paragraph set using the \n{@link ApiParaPr#SetSpacingBefore} or {@link ApiParaPr#SetSpacingAfter} spacing element, should not be applied when the preceding and \nfollowing paragraphs are of the same paragraph style, affecting the top and bottom spacing respectively.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isContextualSpacing",
                "description": "The true value will enable the paragraph contextual spacing.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetContextualSpacing",
        "longname": "ApiParagraph#SetContextualSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13430,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetContextualSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph left side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nValue - The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetIndLeft.js\n\t */",
        "description": "Sets the paragraph left side indentation.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetIndLeft",
        "longname": "ApiParagraph#SetIndLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13442,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetIndLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph left side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | undefined} - The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetIndLeft.js\n\t */",
        "description": "Returns the paragraph left side indentation.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "undefined"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetIndLeft",
        "longname": "ApiParagraph#GetIndLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13454,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetIndLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph right side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nValue - The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetIndRight.js\n\t */",
        "description": "Sets the paragraph right side indentation.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetIndRight",
        "longname": "ApiParagraph#SetIndRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13471,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetIndRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph right side indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | undefined} - The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetIndRight.js\n\t */",
        "description": "Returns the paragraph right side indentation.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "undefined"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetIndRight",
        "longname": "ApiParagraph#GetIndRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13483,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetIndRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph first line indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nValue - The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetIndFirstLine.js\n\t */",
        "description": "Sets the paragraph first line indentation.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetIndFirstLine",
        "longname": "ApiParagraph#SetIndFirstLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13501,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetIndFirstLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph first line indentation.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | undefined} - The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetIndFirstLine.js\n\t */",
        "description": "Returns the paragraph first line indentation.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "undefined"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetIndFirstLine",
        "longname": "ApiParagraph#GetIndFirstLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13513,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetIndFirstLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph contents justification.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {(\"left\" | \"right\" | \"both\" | \"center\")} sJc - The justification type that\n\t * will be applied to the paragraph contents.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetJc.js\n\t */",
        "description": "Sets the paragraph contents justification.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"both\"",
                        "\"center\""
                    ],
                    "parsedType": null
                },
                "name": "sJc",
                "description": "The justification type that\nwill be applied to the paragraph contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetJc",
        "longname": "ApiParagraph#SetJc",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13533,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetJc.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph contents justification.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {(\"left\" | \"right\" | \"both\" | \"center\" | undefined)} \n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetJc.js\n\t */",
        "description": "Returns the paragraph contents justification.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"both\"",
                        "\"center\"",
                        "undefined"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetJc",
        "longname": "ApiParagraph#GetJc",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13545,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetJc.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that when rendering the document using a page view, all lines of the current paragraph are maintained on a single page whenever possible.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isKeepLines - The true value enables the option to keep lines of the paragraph on a single page.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetKeepLines.js\n\t */",
        "description": "Specifies that when rendering the document using a page view, all lines of the current paragraph are maintained on a single page whenever possible.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isKeepLines",
                "description": "The true value enables the option to keep lines of the paragraph on a single page.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetKeepLines",
        "longname": "ApiParagraph#SetKeepLines",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13581,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetKeepLines.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that when rendering the document using a paginated view, the contents of the current paragraph are at least\n\t * partly rendered on the same page as the following paragraph whenever possible.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isKeepNext - The true value enables the option to keep lines of the paragraph on the same\n\t * page as the following paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetKeepNext.js\n\t */",
        "description": "Specifies that when rendering the document using a paginated view, the contents of the current paragraph are at least\npartly rendered on the same page as the following paragraph whenever possible.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isKeepNext",
                "description": "The true value enables the option to keep lines of the paragraph on the same\npage as the following paragraph.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetKeepNext",
        "longname": "ApiParagraph#SetKeepNext",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13595,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetKeepNext.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that when rendering the document using a paginated view, the contents of the current paragraph are rendered at\n\t * the beginning of a new page in the document.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isPageBreakBefore - The true value enables the option to render the contents of the paragraph\n\t * at the beginning of a new page in the document.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetPageBreakBefore.js\n\t */",
        "description": "Specifies that when rendering the document using a paginated view, the contents of the current paragraph are rendered at\nthe beginning of a new page in the document.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isPageBreakBefore",
                "description": "The true value enables the option to render the contents of the paragraph\nat the beginning of a new page in the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetPageBreakBefore",
        "longname": "ApiParagraph#SetPageBreakBefore",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13609,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetPageBreakBefore.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the paragraph line spacing. If the value of the sLineRule parameter is either \n\t * \"atLeast\" or \"exact\", then the value of nLine will be interpreted as twentieths of a point. If \n\t * the value of the sLineRule parameter is \"auto\", then the value of the \n\t * nLine parameter will be interpreted as 240ths of a line.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {(twips | line240)} nLine - The line spacing value measured either in twentieths of a point (1/1440 of an inch) or in 240ths of a line.\n\t * @param {(\"auto\" | \"atLeast\" | \"exact\")} sLineRule - The rule that determines the measuring units of the line spacing.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetSpacingLine.js\n\t */",
        "description": "Sets the paragraph line spacing. If the value of the sLineRule parameter is either \n\"atLeast\" or \"exact\", then the value of nLine will be interpreted as twentieths of a point. If \nthe value of the sLineRule parameter is \"auto\", then the value of the \nnLine parameter will be interpreted as 240ths of a line.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "twips",
                        "line240"
                    ],
                    "parsedType": null
                },
                "name": "nLine",
                "description": "The line spacing value measured either in twentieths of a point (1/1440 of an inch) or in 240ths of a line.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "\"auto\"",
                        "\"atLeast\"",
                        "\"exact\""
                    ],
                    "parsedType": null
                },
                "name": "sLineRule",
                "description": "The rule that determines the measuring units of the line spacing.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetSpacingLine",
        "longname": "ApiParagraph#SetSpacingLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13625,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetSpacingLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph line spacing value.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips | line240 | undefined} - to know is twips or line240 use ApiParaPr.prototype.GetSpacingLineRule().\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingLineValue.js\n\t */",
        "description": "Returns the paragraph line spacing value.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips",
                        "line240",
                        "undefined"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetSpacingLineValue",
        "longname": "ApiParagraph#GetSpacingLineValue",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13656,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingLineValue.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the paragraph line spacing rule.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"auto\" | \"atLeast\" | \"exact\" | undefined} \n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingLineRule.js\n\t */",
        "description": "Returns the paragraph line spacing rule.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"auto\"",
                        "\"atLeast\"",
                        "\"exact\"",
                        "undefined"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetSpacingLineRule",
        "longname": "ApiParagraph#GetSpacingLineRule",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13689,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingLineRule.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the spacing before the current paragraph. If the value of the isBeforeAuto parameter is true, then \n\t * any value of the nBefore is ignored. If isBeforeAuto parameter is not specified, then \n\t * it will be interpreted as false.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nBefore - The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @param {boolean} [isBeforeAuto=false] - The true value disables the spacing before the current paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetSpacingBefore.js\n\t */",
        "description": "Sets the spacing before the current paragraph. If the value of the isBeforeAuto parameter is true, then \nany value of the nBefore is ignored. If isBeforeAuto parameter is not specified, then \nit will be interpreted as false.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nBefore",
                "description": "The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isBeforeAuto",
                "description": "The true value disables the spacing before the current paragraph.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetSpacingBefore",
        "longname": "ApiParagraph#SetSpacingBefore",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13727,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetSpacingBefore.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the spacing before value of the current paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips} - The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingBefore.js\n\t */",
        "description": "Returns the spacing before value of the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetSpacingBefore",
        "longname": "ApiParagraph#GetSpacingBefore",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13744,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingBefore.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the spacing after the current paragraph. If the value of the isAfterAuto parameter is true, then \n\t * any value of the nAfter is ignored. If isAfterAuto parameter is not specified, then it \n\t * will be interpreted as false.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nAfter - The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @param {boolean} [isAfterAuto=false] - The true value disables the spacing after the current paragraph.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetSpacingAfter.js\n\t */",
        "description": "Sets the spacing after the current paragraph. If the value of the isAfterAuto parameter is true, then \nany value of the nAfter is ignored. If isAfterAuto parameter is not specified, then it \nwill be interpreted as false.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nAfter",
                "description": "The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAfterAuto",
                "description": "The true value disables the spacing after the current paragraph.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetSpacingAfter",
        "longname": "ApiParagraph#SetSpacingAfter",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13766,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetSpacingAfter.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the spacing after value of the current paragraph. \n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {twips} - The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetSpacingAfter.js\n\t */",
        "description": "Returns the spacing after value of the current paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetSpacingAfter",
        "longname": "ApiParagraph#GetSpacingAfter",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13783,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetSpacingAfter.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type which will be applied to the contents of the current paragraph.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - The true value disables paragraph contents shading.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The shading type which will be applied to the contents of the current paragraph.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAuto",
                "description": "The true value disables paragraph contents shading.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetShd",
        "longname": "ApiParagraph#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13806,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the shading applied to the contents of the paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {?ApiRGBColor}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetShd.js\n\t */",
        "description": "Returns the shading applied to the contents of the paragraph.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRGBColor"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetShd",
        "longname": "ApiParagraph#GetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13818,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed below a set of paragraphs which have the same paragraph border settings.\n\t * <note>The paragraphs of the same style going one by one are considered as a single block, so the border is added\n\t * to the whole block rather than to every paragraph in this block.</note>\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current bottom border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset below the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetBottomBorder.js\n\t */",
        "description": "Specifies the border which will be displayed below a set of paragraphs which have the same paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added\nto the whole block rather than to every paragraph in this block.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current bottom border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset below the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetBottomBorder",
        "longname": "ApiParagraph#SetBottomBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13859,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetBottomBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed at the left side of the page around the specified paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current left border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset to the left of the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetLeftBorder.js\n\t */",
        "description": "Specifies the border which will be displayed at the left side of the page around the specified paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current left border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset to the left of the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetLeftBorder",
        "longname": "ApiParagraph#SetLeftBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13876,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetLeftBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed at the right side of the page around the specified paragraph.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current right border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset to the right of the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetRightBorder.js\n\t */",
        "description": "Specifies the border which will be displayed at the right side of the page around the specified paragraph.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current right border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset to the right of the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetRightBorder",
        "longname": "ApiParagraph#SetRightBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13893,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetRightBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed above a set of paragraphs which have the same set of paragraph border settings.\n\t * <note>The paragraphs of the same style going one by one are considered as a single block, so the border is added to the whole block rather than to every paragraph in this block.</note>\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current top border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset above the paragraph measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetTopBorder.js\n\t */",
        "description": "Specifies the border which will be displayed above a set of paragraphs which have the same set of paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added to the whole block rather than to every paragraph in this block.</note>",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current top border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset above the paragraph measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTopBorder",
        "longname": "ApiParagraph#SetTopBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13911,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetTopBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The border style.\n\t * @param {pt_8} nSize - The width of the current border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset between the paragraphs measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetBetweenBorder.js\n\t */",
        "description": "Specifies the border which will be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset between the paragraphs measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetBetweenBorder",
        "longname": "ApiParagraph#SetBetweenBorder",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13928,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetBetweenBorder.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isWidowControl - The true value means that a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetWidowControl.js\n\t */",
        "description": "Specifies whether a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isWidowControl",
                "description": "The true value means that a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetWidowControl",
        "longname": "ApiParagraph#SetWidowControl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13940,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetWidowControl.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a sequence of custom tab stops which will be used for any tab characters in the current paragraph.\n\t * <b>Warning</b>: The lengths of aPos array and aVal array <b>MUST BE</b> equal to each other.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips[]} aPos - An array of the positions of custom tab stops with respect to the current page margins\n\t * measured in twentieths of a point (1/1440 of an inch).\n\t * @param {TabJc[]} aVal - An array of the styles of custom tab stops, which determines the behavior of the tab\n\t * stop and the alignment which will be applied to text entered at the current custom tab stop.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetTabs.js\n\t */",
        "description": "Specifies a sequence of custom tab stops which will be used for any tab characters in the current paragraph.\n<b>Warning</b>: The lengths of aPos array and aVal array <b>MUST BE</b> equal to each other.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<twips>"
                    ],
                    "parsedType": null
                },
                "name": "aPos",
                "description": "An array of the positions of custom tab stops with respect to the current page margins\nmeasured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "Array.<TabJc>"
                    ],
                    "parsedType": null
                },
                "name": "aVal",
                "description": "An array of the styles of custom tab stops, which determines the behavior of the tab\nstop and the alignment which will be applied to text entered at the current custom tab stop.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTabs",
        "longname": "ApiParagraph#SetTabs",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13956,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetTabs.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the current paragraph references a numbering definition instance in the current document.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiNumbering} oNumPr - Specifies a numbering definition.\n\t * @param {number} [nLvl=0] - Specifies a numbering level reference. If the current instance of the ApiParaPr class is direct\n\t * formatting of a paragraph, then this parameter MUST BE specified. Otherwise, if the current instance of the ApiParaPr class\n\t * is the part of ApiStyle properties, this parameter will be ignored.\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetNumPr.js\n\t */",
        "description": "Specifies that the current paragraph references a numbering definition instance in the current document.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiNumbering"
                    ],
                    "parsedType": null
                },
                "name": "oNumPr",
                "description": "Specifies a numbering definition.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nLvl",
                "description": "Specifies a numbering level reference. If the current instance of the ApiParaPr class is direct\nformatting of a paragraph, then this parameter MUST BE specified. Otherwise, if the current instance of the ApiParaPr class\nis the part of ApiStyle properties, this parameter will be ignored.",
                "optional": true,
                "defaultvalue": 0
            }
        ],
        "returns": null,
        "name": "SetNumPr",
        "longname": "ApiParagraph#SetNumPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13979,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetNumPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the outline level for the specified properties.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {Number?} [nLvl=undefined] - 0 - based outline level. Possible values are: 0-8.\n\t * Note: to set no outline level use this method without parameter.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/SetOutlineLvl.js\n\t */",
        "description": "Sets the outline level for the specified properties.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": null
                },
                "name": "nLvl",
                "description": "0 - based outline level. Possible values are: 0-8.\nNote: to set no outline level use this method without parameter.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetOutlineLvl",
        "longname": "ApiParagraph#SetOutlineLvl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14019,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/SetOutlineLvl.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the outline level of the specified properties.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {Number?}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/GetOutlineLvl.js\n\t */",
        "description": "Gets the outline level of the specified properties.",
        "memberof": "ApiParagraph",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetOutlineLvl",
        "longname": "ApiParagraph#GetOutlineLvl",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14042,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/GetOutlineLvl.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiParaPr object into the JSON object.\n\t * @memberof ApiParaPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiParaPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiParaPr object into the JSON object.",
        "memberof": "ApiParagraph",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiParagraph#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14055,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiParaPr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTablePr class.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tablePr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTablePr class.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tablePr\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTable#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14304,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a number of columns which will comprise each table column band for this table style.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nCount - The number of columns measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetStyleColBandSize.js\n\t */",
        "description": "Specifies a number of columns which will comprise each table column band for this table style.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nCount",
                "description": "The number of columns measured in positive integers.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetStyleColBandSize",
        "longname": "ApiTable#SetStyleColBandSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14315,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetStyleColBandSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a number of rows which will comprise each table row band for this table style.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {number} nCount - The number of rows measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetStyleRowBandSize.js\n\t */",
        "description": "Specifies a number of rows which will comprise each table row band for this table style.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nCount",
                "description": "The number of rows measured in positive integers.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetStyleRowBandSize",
        "longname": "ApiTable#SetStyleRowBandSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14327,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetStyleRowBandSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the alignment of the current table with respect to the text margins in the current section.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"left\" | \"right\" | \"center\")} sJcType - The alignment type used for the current table placement.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetJc.js\n\t */",
        "description": "Specifies the alignment of the current table with respect to the text margins in the current section.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "\"left\"",
                        "\"right\"",
                        "\"center\""
                    ],
                    "parsedType": null
                },
                "name": "sJcType",
                "description": "The alignment type used for the current table placement.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetJc",
        "longname": "ApiTable#SetJc",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14339,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetJc.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading which is applied to the extents of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type applied to the extents of the current table.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - The true value disables the SetShd method use.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading which is applied to the extents of the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The shading type applied to the extents of the current table.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAuto",
                "description": "The true value disables the SetShd method use.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetShd",
        "longname": "ApiTable#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14360,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the top of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The top border style.\n\t * @param {pt_8} nSize - The width of the current top border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the top part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderTop.js\n\t */",
        "description": "Sets the border which will be displayed at the top of the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The top border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current top border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the top part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderTop",
        "longname": "ApiTable#SetTableBorderTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14377,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the bottom of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The bottom border style.\n\t * @param {pt_8} nSize - The width of the current bottom border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the bottom part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderBottom.js\n\t */",
        "description": "Sets the border which will be displayed at the bottom of the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The bottom border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current bottom border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the bottom part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderBottom",
        "longname": "ApiTable#SetTableBorderBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14394,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed on the left of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The left border style.\n\t * @param {pt_8} nSize - The width of the current left border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the left part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderLeft.js\n\t */",
        "description": "Sets the border which will be displayed on the left of the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The left border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current left border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the left part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderLeft",
        "longname": "ApiTable#SetTableBorderLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14411,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed on the right of the current table.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The right border style.\n\t * @param {pt_8} nSize - The width of the current right border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the right part of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderRight.js\n\t */",
        "description": "Sets the border which will be displayed on the right of the current table.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The right border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current right border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the right part of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderRight",
        "longname": "ApiTable#SetTableBorderRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14428,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed on all horizontal table cell borders which are not on the outmost edge\n\t * of the parent table (all horizontal borders which are not the topmost or bottommost borders).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The horizontal table cell border style.\n\t * @param {pt_8} nSize - The width of the current border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the horizontal table cells of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderInsideH.js\n\t */",
        "description": "Specifies the border which will be displayed on all horizontal table cell borders which are not on the outmost edge\nof the parent table (all horizontal borders which are not the topmost or bottommost borders).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The horizontal table cell border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the horizontal table cells of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderInsideH",
        "longname": "ApiTable#SetTableBorderInsideH",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14446,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderInsideH.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the border which will be displayed on all vertical table cell borders which are not on the outmost edge\n\t * of the parent table (all vertical borders which are not the leftmost or rightmost borders).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The vertical table cell border style.\n\t * @param {pt_8} nSize - The width of the current border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the vertical table cells of the table measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableBorderInsideV.js\n\t */",
        "description": "Specifies the border which will be displayed on all vertical table cell borders which are not on the outmost edge\nof the parent table (all vertical borders which are not the leftmost or rightmost borders).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The vertical table cell border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the vertical table cells of the table measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableBorderInsideV",
        "longname": "ApiTable#SetTableBorderInsideV",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14464,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableBorderInsideV.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\n\t * of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space below the bottom extent of the cell measured in\n\t * twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginBottom.js\n\t */",
        "description": "Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\nof all table cells within the parent table (or table row).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space below the bottom extent of the cell measured in\ntwentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginBottom",
        "longname": "ApiTable#SetTableCellMarginBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14479,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the left extent of the cell contents and the left\n\t * border of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space to the left extent of the cell measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginLeft.js\n\t */",
        "description": "Specifies an amount of space which will be left between the left extent of the cell contents and the left\nborder of all table cells within the parent table (or table row).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space to the left extent of the cell measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginLeft",
        "longname": "ApiTable#SetTableCellMarginLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14492,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the right extent of the cell contents and the right\n\t * border of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space to the right extent of the cell measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginRight.js\n\t */",
        "description": "Specifies an amount of space which will be left between the right extent of the cell contents and the right\nborder of all table cells within the parent table (or table row).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space to the right extent of the cell measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginRight",
        "longname": "ApiTable#SetTableCellMarginRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14505,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the top extent of the cell contents and the top border\n\t * of all table cells within the parent table (or table row).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The value for the amount of space above the top extent of the cell measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableCellMarginTop.js\n\t */",
        "description": "Specifies an amount of space which will be left between the top extent of the cell contents and the top border\nof all table cells within the parent table (or table row).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space above the top extent of the cell measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableCellMarginTop",
        "longname": "ApiTable#SetTableCellMarginTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14518,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableCellMarginTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the default table cell spacing (the spacing between adjacent cells and the edges of the table).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - Spacing value measured in twentieths of a point (1/1440 of an inch). <code>\"Null\"</code> means that no spacing will be applied.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetCellSpacing.js\n\t */",
        "description": "Specifies the default table cell spacing (the spacing between adjacent cells and the edges of the table).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "Spacing value measured in twentieths of a point (1/1440 of an inch). <code>\"Null\"</code> means that no spacing will be applied.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellSpacing",
        "longname": "ApiTable#SetCellSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14530,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetCellSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the indentation which will be added before the leading edge of the current table in the document\n\t * (the left edge in the left-to-right table, and the right edge in the right-to-left table).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {twips} nValue - The indentation value measured in twentieths of a point (1/1440 of an inch).\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableInd.js\n\t */",
        "description": "Specifies the indentation which will be added before the leading edge of the current table in the document\n(the left edge in the left-to-right table, and the right edge in the right-to-left table).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The indentation value measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableInd",
        "longname": "ApiTable#SetTableInd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14546,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableInd.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the preferred width to the current table.\n\t * <note>Tables are created with the {@link ApiTable#SetWidth} method properties set by default, which always override the {@link ApiTablePr#SetWidth} method properties. That is why there is no use to try and apply {@link ApiTablePr#SetWidth}. We recommend you to use the  {@link ApiTablePr#SetWidth} method instead.</note>\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {TableWidth} sType - Type of the width value from one of the available width values types.\n\t * @param {number} [nValue] - The table width value measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetWidth.js\n\t */",
        "description": "Sets the preferred width to the current table.\n<note>Tables are created with the {@link ApiTable#SetWidth} method properties set by default, which always override the {@link ApiTablePr#SetWidth} method properties. That is why there is no use to try and apply {@link ApiTablePr#SetWidth}. We recommend you to use the  {@link ApiTablePr#SetWidth} method instead.</note>",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "TableWidth"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "Type of the width value from one of the available width values types.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The table width value measured in positive integers.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetWidth",
        "longname": "ApiTable#SetWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14560,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the algorithm which will be used to lay out the contents of the current table within the document.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"autofit\" | \"fixed\")} sType - The type of the table layout in the document.\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableLayout.js\n\t */",
        "description": "Specifies the algorithm which will be used to lay out the contents of the current table within the document.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "\"autofit\"",
                        "\"fixed\""
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The type of the table layout in the document.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableLayout",
        "longname": "ApiTable#SetTableLayout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14572,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableLayout.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the table title (caption).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sTitle - The table title to be set.\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableTitle.js\n\t */",
        "description": "Sets the table title (caption).",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sTitle",
                "description": "The table title to be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTableTitle",
        "longname": "ApiTable#SetTableTitle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14589,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableTitle.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the table title (caption).\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {string}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/GetTableTitle.js\n\t */",
        "description": "Returns the table title (caption).",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTableTitle",
        "longname": "ApiTable#GetTableTitle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14605,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/GetTableTitle.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the table description.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sDescr - The table description to be set.\n\t * @return {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/SetTableDescription.js\n\t */",
        "description": "Sets the table description.",
        "memberof": "ApiTable",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sDescr",
                "description": "The table description to be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTableDescription",
        "longname": "ApiTable#SetTableDescription",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14620,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/SetTableDescription.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the table description.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {string}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/GetTableDescription.js\n\t */",
        "description": "Returns the table description.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTableDescription",
        "longname": "ApiTable#GetTableDescription",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14636,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/GetTableDescription.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTablePr object into the JSON object.\n\t * @memberof ApiTablePr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTablePr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTablePr object into the JSON object.",
        "memberof": "ApiTable",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTable#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14650,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTablePr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTextPr class.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @returns {\"textPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTextPr class.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"textPr\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiRun#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12652,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * The text style base method.\n\t * <note>This method is not used by itself, as it only forms the basis for the {@link ApiRun#SetStyle} method which sets\n\t * the selected or created style to the text.</note>\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ApiStyle} oStyle - The style which must be applied to the text character.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetStyle.js\n\t */",
        "description": "The text style base method.\n<note>This method is not used by itself, as it only forms the basis for the {@link ApiRun#SetStyle} method which sets\nthe selected or created style to the text.</note>",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": null
                },
                "name": "oStyle",
                "description": "The style which must be applied to the text character.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetStyle",
        "longname": "ApiRun#SetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12666,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the style of the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiStyle} - The used style.\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetStyle.js\n\t */",
        "description": "Gets the style of the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStyle"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetStyle",
        "longname": "ApiRun#GetStyle",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12684,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetStyle.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the bold property to the text character.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isBold - Specifies that the contents of the run are displayed bold.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetBold.js\n\t */",
        "description": "Sets the bold property to the text character.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isBold",
                "description": "Specifies that the contents of the run are displayed bold.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBold",
        "longname": "ApiRun#SetBold",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12705,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetBold.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the bold property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetBold.js\n\t */",
        "description": "Gets the bold property from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetBold",
        "longname": "ApiRun#GetBold",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12720,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetBold.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the italic property to the text character.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isItalic - Specifies that the contents of the current run are displayed italicized.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetItalic.js\n\t */",
        "description": "Sets the italic property to the text character.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isItalic",
                "description": "Specifies that the contents of the current run are displayed italicized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetItalic",
        "longname": "ApiRun#SetItalic",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12733,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetItalic.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the italic property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetItalic.js\n\t */",
        "description": "Gets the italic property from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetItalic",
        "longname": "ApiRun#GetItalic",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12748,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetItalic.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the run are displayed with a single horizontal line through the center of the line.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isStrikeout - Specifies that the contents of the current run are displayed struck through.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetStrikeout.js\n\t */",
        "description": "Specifies that the contents of the run are displayed with a single horizontal line through the center of the line.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isStrikeout",
                "description": "Specifies that the contents of the current run are displayed struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetStrikeout",
        "longname": "ApiRun#SetStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12761,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the strikeout property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetStrikeout.js\n\t */",
        "description": "Gets the strikeout property from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetStrikeout",
        "longname": "ApiRun#GetStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12776,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the run are displayed along with a line appearing directly below the character\n\t * (less than all the spacing above and below the characters on the line).\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isUnderline - Specifies that the contents of the current run are displayed underlined.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetUnderline.js\n\t */",
        "description": "Specifies that the contents of the run are displayed along with a line appearing directly below the character\n(less than all the spacing above and below the characters on the line).",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isUnderline",
                "description": "Specifies that the contents of the current run are displayed underlined.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetUnderline",
        "longname": "ApiRun#SetUnderline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12790,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetUnderline.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the underline property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetUnderline.js\n\t */",
        "description": "Gets the underline property from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetUnderline",
        "longname": "ApiRun#GetUnderline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12805,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetUnderline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets all 4 font slots with the specified font family.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {string} sFontFamily - The font family or families used for the current text run.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetFontFamily.js\n\t */",
        "description": "Sets all 4 font slots with the specified font family.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sFontFamily",
                "description": "The font family or families used for the current text run.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFontFamily",
        "longname": "ApiRun#SetFontFamily",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12818,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetFontFamily.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the font family from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetFontFamily.js\n\t */",
        "description": "Gets the font family from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFontFamily",
        "longname": "ApiRun#GetFontFamily",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12833,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetFontFamily.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the font size to the characters of the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {hps} nSize - The text size value measured in half-points (1/144 of an inch).\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetFontSize.js\n\t */",
        "description": "Sets the font size to the characters of the current text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The text size value measured in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFontSize",
        "longname": "ApiRun#SetFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12846,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the font size from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?hps}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetFontSize.js\n\t */",
        "description": "Gets the font size from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFontSize",
        "longname": "ApiRun#GetFontSize",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12861,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetFontSize.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text color to the current text run in the RGB format.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - If this parameter is set to \"true\", then r,g,b parameters will be ignored.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetColor.js\n\t */",
        "description": "Sets the text color to the current text run in the RGB format.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAuto",
                "description": "If this parameter is set to \"true\", then r,g,b parameters will be ignored.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetColor",
        "longname": "ApiRun#SetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12881,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the RGB color from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiRGBColor}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetColor.js\n\t */",
        "description": "Gets the RGB color from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRGBColor"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetColor",
        "longname": "ApiRun#GetColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12896,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the alignment which will be applied to the contents of the run in relation to the default appearance of the run text:\n\t * <b>\"baseline\"</b> - the characters in the current text run will be aligned by the default text baseline.\n\t * <b>\"subscript\"</b> - the characters in the current text run will be aligned below the default text baseline.\n\t * <b>\"superscript\"</b> - the characters in the current text run will be aligned above the default text baseline.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {(\"baseline\" | \"subscript\" | \"superscript\")} sType - The vertical alignment type applied to the text contents.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetVertAlign.js\n\t */",
        "description": "Specifies the alignment which will be applied to the contents of the run in relation to the default appearance of the run text:\n<b>\"baseline\"</b> - the characters in the current text run will be aligned by the default text baseline.\n<b>\"subscript\"</b> - the characters in the current text run will be aligned below the default text baseline.\n<b>\"superscript\"</b> - the characters in the current text run will be aligned above the default text baseline.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "\"baseline\"",
                        "\"subscript\"",
                        "\"superscript\""
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The vertical alignment type applied to the text contents.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetVertAlign",
        "longname": "ApiRun#SetVertAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12917,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetVertAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the vertical alignment type from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetVertAlign.js\n\t */",
        "description": "Gets the vertical alignment type from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetVertAlign",
        "longname": "ApiRun#GetVertAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12938,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetVertAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies a highlighting color which is added to the text properties and applied as a background to the contents of the current run/range/paragraph.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @param {highlightColor} sColor - Available highlight color.\n\t * @returns {ApiTextPr}\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetHighlight.js\n\t */",
        "description": "Specifies a highlighting color which is added to the text properties and applied as a background to the contents of the current run/range/paragraph.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "highlightColor"
                    ],
                    "parsedType": null
                },
                "name": "sColor",
                "description": "Available highlight color.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetHighlight",
        "longname": "ApiRun#SetHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12961,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the highlight property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetHighlight.js\n\t */",
        "description": "Gets the highlight property from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetHighlight",
        "longname": "ApiRun#GetHighlight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 12994,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetHighlight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text spacing measured in twentieths of a point.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {twips} nSpacing - The value of the text spacing measured in twentieths of a point (1/1440 of an inch).\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetSpacing.js\n\t */",
        "description": "Sets the text spacing measured in twentieths of a point.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nSpacing",
                "description": "The value of the text spacing measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetSpacing",
        "longname": "ApiRun#SetSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13013,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text spacing from the current text properties measured in twentieths of a point.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?twips}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetSpacing.js\n\t */",
        "description": "Gets the text spacing from the current text properties measured in twentieths of a point.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetSpacing",
        "longname": "ApiRun#GetSpacing",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13028,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetSpacing.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the contents of the run are displayed with two horizontal lines through each character displayed on the line.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isDoubleStrikeout - Specifies that the contents of the current run are displayed double struck through.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetDoubleStrikeout.js\n\t */",
        "description": "Specifies that the contents of the run are displayed with two horizontal lines through each character displayed on the line.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isDoubleStrikeout",
                "description": "Specifies that the contents of the current run are displayed double struck through.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetDoubleStrikeout",
        "longname": "ApiRun#SetDoubleStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13046,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetDoubleStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the double strikeout property from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetDoubleStrikeout.js\n\t */",
        "description": "Gets the double strikeout property from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetDoubleStrikeout",
        "longname": "ApiRun#GetDoubleStrikeout",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13061,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetDoubleStrikeout.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that any lowercase characters in the text run are formatted for display only as their capital letter character equivalents.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isCaps - Specifies that the contents of the current run are displayed capitalized.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetCaps.js\n\t */",
        "description": "Specifies that any lowercase characters in the text run are formatted for display only as their capital letter character equivalents.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isCaps",
                "description": "Specifies that the contents of the current run are displayed capitalized.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetCaps",
        "longname": "ApiRun#SetCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13074,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether the text with the current text properties are capitalized.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetCaps.js\n\t */",
        "description": "Specifies whether the text with the current text properties are capitalized.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetCaps",
        "longname": "ApiRun#GetCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13089,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that all the small letter characters in the text run are formatted for display only as their capital\n\t * letter character equivalents which are two points smaller than the actual font size specified for this text.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @param {boolean} isSmallCaps - Specifies if the contents of the current run are displayed capitalized two points smaller or not.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetSmallCaps.js\n\t */",
        "description": "Specifies that all the small letter characters in the text run are formatted for display only as their capital\nletter character equivalents which are two points smaller than the actual font size specified for this text.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isSmallCaps",
                "description": "Specifies if the contents of the current run are displayed capitalized two points smaller or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetSmallCaps",
        "longname": "ApiRun#SetSmallCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13103,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetSmallCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies whether the text with the current text properties are displayed capitalized two points smaller than the actual font size.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {?boolean}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetSmallCaps.js\n\t */",
        "description": "Specifies whether the text with the current text properties are displayed capitalized two points smaller than the actual font size.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetSmallCaps",
        "longname": "ApiRun#GetSmallCaps",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13118,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetSmallCaps.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount by which text is raised or lowered for this run in relation to the default\n\t * baseline of the surrounding non-positioned text.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {hps} nPosition - Specifies a positive (raised text) or negative (lowered text)\n\t * measurement in half-points (1/144 of an inch).\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetPosition.js\n\t */",
        "description": "Specifies an amount by which text is raised or lowered for this run in relation to the default\nbaseline of the surrounding non-positioned text.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": null
                },
                "name": "nPosition",
                "description": "Specifies a positive (raised text) or negative (lowered text)\nmeasurement in half-points (1/144 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetPosition",
        "longname": "ApiRun#SetPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13133,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text position from the current text properties measured in half-points (1/144 of an inch).\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?hps}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetPosition.js\n\t */",
        "description": "Gets the text position from the current text properties measured in half-points (1/144 of an inch).",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "hps"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetPosition",
        "longname": "ApiRun#GetPosition",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13148,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetPosition.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the languages which will be used to check spelling and grammar (if requested) when processing\n\t * the contents of the text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {string} sLangId - The possible value for this parameter is a language identifier as defined by\n\t * RFC 4646/BCP 47. Example: \"en-CA\".\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetLanguage.js\n\t */",
        "description": "Specifies the languages which will be used to check spelling and grammar (if requested) when processing\nthe contents of the text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sLangId",
                "description": "The possible value for this parameter is a language identifier as defined by\nRFC 4646/BCP 47. Example: \"en-CA\".",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetLanguage",
        "longname": "ApiRun#SetLanguage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13169,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetLanguage.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the language from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?string}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetLanguage.js\n\t */",
        "description": "Gets the language from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetLanguage",
        "longname": "ApiRun#GetLanguage",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13188,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetLanguage.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type applied to the contents of the current text run.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the current text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The shading type applied to the contents of the current text run.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetShd",
        "longname": "ApiRun#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13211,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text shading from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @return {?ApiRGBColor}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetShd.js\n\t */",
        "description": "Gets the text shading from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiRGBColor"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetShd",
        "longname": "ApiRun#GetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13226,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text fill to the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiFill} oApiFill - The color or pattern used to fill the text color.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetTextFill.js\n\t */",
        "description": "Sets the text fill to the current text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": null
                },
                "name": "oApiFill",
                "description": "The color or pattern used to fill the text color.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTextFill",
        "longname": "ApiRun#SetTextFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13277,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetTextFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text fill from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {ApiFill}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetTextFill.js\n\t */",
        "description": "Gets the text fill from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiFill"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTextFill",
        "longname": "ApiRun#GetTextFill",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13292,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetTextFill.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text outline to the current text run.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CPE\", \"CSE\"]\n\t * @param {ApiStroke} oStroke - The stroke used to create the text outline.\n\t * @return {ApiTextPr} - this text properties.\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/SetOutLine.js\n\t */",
        "description": "Sets the text outline to the current text run.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": null
                },
                "name": "oStroke",
                "description": "The stroke used to create the text outline.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetOutLine",
        "longname": "ApiRun#SetOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13310,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/SetOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Gets the text outline from the current text properties.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\", \"CSE\", \"CPE\"]\n\t * @return {ApiStroke}\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/GetOutLine.js\n\t */",
        "description": "Gets the text outline from the current text properties.",
        "memberof": "ApiRun",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiStroke"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetOutLine",
        "longname": "ApiRun#GetOutLine",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13325,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/GetOutLine.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTextPr object into the JSON object.\n\t * @memberof ApiTextPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} bWriteStyles - Specifies if the used styles will be written to the JSON object or not.\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTextPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTextPr object into the JSON object.",
        "memberof": "ApiRun",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bWriteStyles",
                "description": "Specifies if the used styles will be written to the JSON object or not.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiRun#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 13343,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTextPr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFormBase class.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {\"form\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFormBase class.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"form\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTextForm#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {FormType}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormType.js\n\t */",
        "description": "Returns a type of the current form.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "FormType"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormType",
        "longname": "ApiTextForm#GetFormType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18910,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current form key.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormKey.js\n\t */",
        "description": "Returns the current form key.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormKey",
        "longname": "ApiTextForm#GetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18934,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a key to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sKey - Form key.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetFormKey.js\n\t */",
        "description": "Sets a key to the current form.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sKey",
                "description": "Form key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFormKey",
        "longname": "ApiTextForm#SetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tip text of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTipText.js\n\t */",
        "description": "Returns the tip text of the current form.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTipText",
        "longname": "ApiTextForm#GetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18983,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tip text to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sText - Tip text.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTipText.js\n\t */",
        "description": "Sets the tip text to the current form.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "Tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTipText",
        "longname": "ApiTextForm#SetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19000,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsRequired.js\n\t */",
        "description": "Checks if the current form is required.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsRequired",
        "longname": "ApiTextForm#IsRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current form should be required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {boolean} bRequired - Defines if the current form is required (true) or not (false).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetRequired.js\n\t */",
        "description": "Specifies if the current form should be required.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bRequired",
                "description": "Defines if the current form is required (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetRequired",
        "longname": "ApiTextForm#SetRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19032,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is fixed size.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsFixed.js\n\t */",
        "description": "Checks if the current form is fixed size.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsFixed",
        "longname": "ApiTextForm#IsFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to a fixed size form.\n\t * @memberof ApiFormBase\n\t * @param {twips} nWidth - The wrapper shape width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The wrapper shape height measured in twentieths of a point (1/1440 of an inch).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToFixed.js\n\t */",
        "description": "Converts the current form to a fixed size form.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nWidth",
                "description": "The wrapper shape width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nHeight",
                "description": "The wrapper shape height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToFixed",
        "longname": "ApiTextForm#ToFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to an inline form.\n\t *Picture form can't be converted to an inline form, it's always a fixed size object.*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToInline.js\n\t */",
        "description": "Converts the current form to an inline form.\nPicture form can't be converted to an inline form, it's always a fixed size object.*",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToInline",
        "longname": "ApiTextForm#ToInline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19085,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToInline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that border color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBorderColor.js\n\t */",
        "description": "Sets the border color to the current form.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that border color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBorderColor",
        "longname": "ApiTextForm#SetBorderColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBorderColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current form.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiTextForm#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text from the current form.\n\t *Returns the value as a string if possible for the given form type*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetText.js\n\t */",
        "description": "Returns the text from the current form.\nReturns the value as a string if possible for the given form type*",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiTextForm#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Clear.js\n\t */",
        "description": "Clears the current form.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiTextForm#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19191,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\n\t * The null value will be returned for the inline forms.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiShape} - returns the shape in which the form is placed.\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetWrapperShape.js\n\t */",
        "description": "Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\nThe null value will be returned for the inline forms.",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetWrapperShape",
        "longname": "ApiTextForm#GetWrapperShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19205,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetWrapperShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current form.\n\t *Can't be set to checkbox or radio button.*\n\t * @memberof ApiFormBase\n\t * @param {string} sText - The text that will be set to the current form.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current form.\nCan't be set to checkbox or radio button.*",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "The text that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiTextForm#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19223,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current form.\n\t * @return {boolean}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiTextForm#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19244,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties from the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties from the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiTextForm#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current form.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current form.",
        "memberof": "ApiTextForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current form.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiTextForm#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19274,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current form (copies with the shape if it exists).\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiForm}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Copy.js\n\t */",
        "description": "Copies the current form (copies with the shape if it exists).",
        "memberof": "ApiTextForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiForm"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiTextForm#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19285,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFormBase class.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {\"form\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFormBase class.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"form\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiComboBoxForm#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {FormType}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormType.js\n\t */",
        "description": "Returns a type of the current form.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "FormType"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormType",
        "longname": "ApiComboBoxForm#GetFormType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18910,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current form key.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormKey.js\n\t */",
        "description": "Returns the current form key.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormKey",
        "longname": "ApiComboBoxForm#GetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18934,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a key to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sKey - Form key.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetFormKey.js\n\t */",
        "description": "Sets a key to the current form.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sKey",
                "description": "Form key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFormKey",
        "longname": "ApiComboBoxForm#SetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tip text of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTipText.js\n\t */",
        "description": "Returns the tip text of the current form.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTipText",
        "longname": "ApiComboBoxForm#GetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18983,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tip text to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sText - Tip text.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTipText.js\n\t */",
        "description": "Sets the tip text to the current form.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "Tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTipText",
        "longname": "ApiComboBoxForm#SetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19000,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsRequired.js\n\t */",
        "description": "Checks if the current form is required.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsRequired",
        "longname": "ApiComboBoxForm#IsRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current form should be required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {boolean} bRequired - Defines if the current form is required (true) or not (false).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetRequired.js\n\t */",
        "description": "Specifies if the current form should be required.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bRequired",
                "description": "Defines if the current form is required (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetRequired",
        "longname": "ApiComboBoxForm#SetRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19032,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is fixed size.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsFixed.js\n\t */",
        "description": "Checks if the current form is fixed size.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsFixed",
        "longname": "ApiComboBoxForm#IsFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to a fixed size form.\n\t * @memberof ApiFormBase\n\t * @param {twips} nWidth - The wrapper shape width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The wrapper shape height measured in twentieths of a point (1/1440 of an inch).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToFixed.js\n\t */",
        "description": "Converts the current form to a fixed size form.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nWidth",
                "description": "The wrapper shape width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nHeight",
                "description": "The wrapper shape height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToFixed",
        "longname": "ApiComboBoxForm#ToFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to an inline form.\n\t *Picture form can't be converted to an inline form, it's always a fixed size object.*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToInline.js\n\t */",
        "description": "Converts the current form to an inline form.\nPicture form can't be converted to an inline form, it's always a fixed size object.*",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToInline",
        "longname": "ApiComboBoxForm#ToInline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19085,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToInline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that border color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBorderColor.js\n\t */",
        "description": "Sets the border color to the current form.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that border color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBorderColor",
        "longname": "ApiComboBoxForm#SetBorderColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBorderColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current form.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiComboBoxForm#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text from the current form.\n\t *Returns the value as a string if possible for the given form type*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetText.js\n\t */",
        "description": "Returns the text from the current form.\nReturns the value as a string if possible for the given form type*",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiComboBoxForm#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Clear.js\n\t */",
        "description": "Clears the current form.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiComboBoxForm#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19191,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\n\t * The null value will be returned for the inline forms.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiShape} - returns the shape in which the form is placed.\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetWrapperShape.js\n\t */",
        "description": "Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\nThe null value will be returned for the inline forms.",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetWrapperShape",
        "longname": "ApiComboBoxForm#GetWrapperShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19205,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetWrapperShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current form.\n\t *Can't be set to checkbox or radio button.*\n\t * @memberof ApiFormBase\n\t * @param {string} sText - The text that will be set to the current form.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current form.\nCan't be set to checkbox or radio button.*",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "The text that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiComboBoxForm#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19223,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current form.\n\t * @return {boolean}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiComboBoxForm#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19244,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties from the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties from the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiComboBoxForm#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current form.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current form.",
        "memberof": "ApiComboBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current form.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiComboBoxForm#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19274,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current form (copies with the shape if it exists).\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiForm}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Copy.js\n\t */",
        "description": "Copies the current form (copies with the shape if it exists).",
        "memberof": "ApiComboBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiForm"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiComboBoxForm#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19285,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFormBase class.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {\"form\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFormBase class.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"form\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiCheckBoxForm#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {FormType}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormType.js\n\t */",
        "description": "Returns a type of the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "FormType"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormType",
        "longname": "ApiCheckBoxForm#GetFormType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18910,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current form key.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormKey.js\n\t */",
        "description": "Returns the current form key.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormKey",
        "longname": "ApiCheckBoxForm#GetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18934,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a key to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sKey - Form key.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetFormKey.js\n\t */",
        "description": "Sets a key to the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sKey",
                "description": "Form key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFormKey",
        "longname": "ApiCheckBoxForm#SetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tip text of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTipText.js\n\t */",
        "description": "Returns the tip text of the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTipText",
        "longname": "ApiCheckBoxForm#GetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18983,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tip text to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sText - Tip text.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTipText.js\n\t */",
        "description": "Sets the tip text to the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "Tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTipText",
        "longname": "ApiCheckBoxForm#SetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19000,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsRequired.js\n\t */",
        "description": "Checks if the current form is required.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsRequired",
        "longname": "ApiCheckBoxForm#IsRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current form should be required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {boolean} bRequired - Defines if the current form is required (true) or not (false).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetRequired.js\n\t */",
        "description": "Specifies if the current form should be required.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bRequired",
                "description": "Defines if the current form is required (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetRequired",
        "longname": "ApiCheckBoxForm#SetRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19032,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is fixed size.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsFixed.js\n\t */",
        "description": "Checks if the current form is fixed size.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsFixed",
        "longname": "ApiCheckBoxForm#IsFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to a fixed size form.\n\t * @memberof ApiFormBase\n\t * @param {twips} nWidth - The wrapper shape width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The wrapper shape height measured in twentieths of a point (1/1440 of an inch).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToFixed.js\n\t */",
        "description": "Converts the current form to a fixed size form.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nWidth",
                "description": "The wrapper shape width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nHeight",
                "description": "The wrapper shape height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToFixed",
        "longname": "ApiCheckBoxForm#ToFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to an inline form.\n\t *Picture form can't be converted to an inline form, it's always a fixed size object.*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToInline.js\n\t */",
        "description": "Converts the current form to an inline form.\nPicture form can't be converted to an inline form, it's always a fixed size object.*",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToInline",
        "longname": "ApiCheckBoxForm#ToInline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19085,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToInline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that border color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBorderColor.js\n\t */",
        "description": "Sets the border color to the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that border color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBorderColor",
        "longname": "ApiCheckBoxForm#SetBorderColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBorderColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiCheckBoxForm#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text from the current form.\n\t *Returns the value as a string if possible for the given form type*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetText.js\n\t */",
        "description": "Returns the text from the current form.\nReturns the value as a string if possible for the given form type*",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiCheckBoxForm#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Clear.js\n\t */",
        "description": "Clears the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiCheckBoxForm#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19191,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\n\t * The null value will be returned for the inline forms.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiShape} - returns the shape in which the form is placed.\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetWrapperShape.js\n\t */",
        "description": "Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\nThe null value will be returned for the inline forms.",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetWrapperShape",
        "longname": "ApiCheckBoxForm#GetWrapperShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19205,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetWrapperShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current form.\n\t *Can't be set to checkbox or radio button.*\n\t * @memberof ApiFormBase\n\t * @param {string} sText - The text that will be set to the current form.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current form.\nCan't be set to checkbox or radio button.*",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "The text that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiCheckBoxForm#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19223,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current form.\n\t * @return {boolean}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiCheckBoxForm#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19244,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties from the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties from the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiCheckBoxForm#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current form.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current form.",
        "memberof": "ApiCheckBoxForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current form.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiCheckBoxForm#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19274,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current form (copies with the shape if it exists).\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiForm}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Copy.js\n\t */",
        "description": "Copies the current form (copies with the shape if it exists).",
        "memberof": "ApiCheckBoxForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiForm"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiCheckBoxForm#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19285,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFormBase class.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {\"form\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFormBase class.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"form\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiPictureForm#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {FormType}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormType.js\n\t */",
        "description": "Returns a type of the current form.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "FormType"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormType",
        "longname": "ApiPictureForm#GetFormType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18910,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current form key.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormKey.js\n\t */",
        "description": "Returns the current form key.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormKey",
        "longname": "ApiPictureForm#GetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18934,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a key to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sKey - Form key.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetFormKey.js\n\t */",
        "description": "Sets a key to the current form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sKey",
                "description": "Form key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFormKey",
        "longname": "ApiPictureForm#SetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tip text of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTipText.js\n\t */",
        "description": "Returns the tip text of the current form.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTipText",
        "longname": "ApiPictureForm#GetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18983,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tip text to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sText - Tip text.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTipText.js\n\t */",
        "description": "Sets the tip text to the current form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "Tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTipText",
        "longname": "ApiPictureForm#SetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19000,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsRequired.js\n\t */",
        "description": "Checks if the current form is required.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsRequired",
        "longname": "ApiPictureForm#IsRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current form should be required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {boolean} bRequired - Defines if the current form is required (true) or not (false).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetRequired.js\n\t */",
        "description": "Specifies if the current form should be required.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bRequired",
                "description": "Defines if the current form is required (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetRequired",
        "longname": "ApiPictureForm#SetRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19032,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is fixed size.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsFixed.js\n\t */",
        "description": "Checks if the current form is fixed size.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsFixed",
        "longname": "ApiPictureForm#IsFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to a fixed size form.\n\t * @memberof ApiFormBase\n\t * @param {twips} nWidth - The wrapper shape width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The wrapper shape height measured in twentieths of a point (1/1440 of an inch).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToFixed.js\n\t */",
        "description": "Converts the current form to a fixed size form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nWidth",
                "description": "The wrapper shape width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nHeight",
                "description": "The wrapper shape height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToFixed",
        "longname": "ApiPictureForm#ToFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to an inline form.\n\t *Picture form can't be converted to an inline form, it's always a fixed size object.*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToInline.js\n\t */",
        "description": "Converts the current form to an inline form.\nPicture form can't be converted to an inline form, it's always a fixed size object.*",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToInline",
        "longname": "ApiPictureForm#ToInline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19085,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToInline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that border color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBorderColor.js\n\t */",
        "description": "Sets the border color to the current form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that border color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBorderColor",
        "longname": "ApiPictureForm#SetBorderColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBorderColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiPictureForm#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text from the current form.\n\t *Returns the value as a string if possible for the given form type*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetText.js\n\t */",
        "description": "Returns the text from the current form.\nReturns the value as a string if possible for the given form type*",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiPictureForm#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Clear.js\n\t */",
        "description": "Clears the current form.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiPictureForm#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19191,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\n\t * The null value will be returned for the inline forms.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiShape} - returns the shape in which the form is placed.\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetWrapperShape.js\n\t */",
        "description": "Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\nThe null value will be returned for the inline forms.",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetWrapperShape",
        "longname": "ApiPictureForm#GetWrapperShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19205,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetWrapperShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current form.\n\t *Can't be set to checkbox or radio button.*\n\t * @memberof ApiFormBase\n\t * @param {string} sText - The text that will be set to the current form.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current form.\nCan't be set to checkbox or radio button.*",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "The text that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiPictureForm#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19223,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current form.\n\t * @return {boolean}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiPictureForm#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19244,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties from the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties from the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiPictureForm#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current form.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current form.",
        "memberof": "ApiPictureForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current form.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiPictureForm#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19274,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current form (copies with the shape if it exists).\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiForm}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Copy.js\n\t */",
        "description": "Copies the current form (copies with the shape if it exists).",
        "memberof": "ApiPictureForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiForm"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiPictureForm#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19285,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFormBase class.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {\"form\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFormBase class.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"form\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiDateForm#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {FormType}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormType.js\n\t */",
        "description": "Returns a type of the current form.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "FormType"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormType",
        "longname": "ApiDateForm#GetFormType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18910,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current form key.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormKey.js\n\t */",
        "description": "Returns the current form key.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormKey",
        "longname": "ApiDateForm#GetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18934,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a key to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sKey - Form key.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetFormKey.js\n\t */",
        "description": "Sets a key to the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sKey",
                "description": "Form key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFormKey",
        "longname": "ApiDateForm#SetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tip text of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTipText.js\n\t */",
        "description": "Returns the tip text of the current form.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTipText",
        "longname": "ApiDateForm#GetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18983,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tip text to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sText - Tip text.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTipText.js\n\t */",
        "description": "Sets the tip text to the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "Tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTipText",
        "longname": "ApiDateForm#SetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19000,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsRequired.js\n\t */",
        "description": "Checks if the current form is required.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsRequired",
        "longname": "ApiDateForm#IsRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current form should be required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {boolean} bRequired - Defines if the current form is required (true) or not (false).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetRequired.js\n\t */",
        "description": "Specifies if the current form should be required.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bRequired",
                "description": "Defines if the current form is required (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetRequired",
        "longname": "ApiDateForm#SetRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19032,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is fixed size.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsFixed.js\n\t */",
        "description": "Checks if the current form is fixed size.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsFixed",
        "longname": "ApiDateForm#IsFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to a fixed size form.\n\t * @memberof ApiFormBase\n\t * @param {twips} nWidth - The wrapper shape width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The wrapper shape height measured in twentieths of a point (1/1440 of an inch).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToFixed.js\n\t */",
        "description": "Converts the current form to a fixed size form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nWidth",
                "description": "The wrapper shape width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nHeight",
                "description": "The wrapper shape height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToFixed",
        "longname": "ApiDateForm#ToFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to an inline form.\n\t *Picture form can't be converted to an inline form, it's always a fixed size object.*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToInline.js\n\t */",
        "description": "Converts the current form to an inline form.\nPicture form can't be converted to an inline form, it's always a fixed size object.*",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToInline",
        "longname": "ApiDateForm#ToInline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19085,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToInline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that border color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBorderColor.js\n\t */",
        "description": "Sets the border color to the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that border color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBorderColor",
        "longname": "ApiDateForm#SetBorderColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBorderColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiDateForm#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text from the current form.\n\t *Returns the value as a string if possible for the given form type*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetText.js\n\t */",
        "description": "Returns the text from the current form.\nReturns the value as a string if possible for the given form type*",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiDateForm#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Clear.js\n\t */",
        "description": "Clears the current form.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiDateForm#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19191,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\n\t * The null value will be returned for the inline forms.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiShape} - returns the shape in which the form is placed.\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetWrapperShape.js\n\t */",
        "description": "Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\nThe null value will be returned for the inline forms.",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetWrapperShape",
        "longname": "ApiDateForm#GetWrapperShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19205,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetWrapperShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current form.\n\t *Can't be set to checkbox or radio button.*\n\t * @memberof ApiFormBase\n\t * @param {string} sText - The text that will be set to the current form.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current form.\nCan't be set to checkbox or radio button.*",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "The text that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiDateForm#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19223,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current form.\n\t * @return {boolean}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiDateForm#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19244,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties from the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties from the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiDateForm#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current form.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current form.",
        "memberof": "ApiDateForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current form.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiDateForm#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19274,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current form (copies with the shape if it exists).\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiForm}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Copy.js\n\t */",
        "description": "Copies the current form (copies with the shape if it exists).",
        "memberof": "ApiDateForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiForm"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiDateForm#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19285,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiFormBase class.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {\"form\"}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiFormBase class.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"form\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiComplexForm#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18899,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {FormType}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormType.js\n\t */",
        "description": "Returns a type of the current form.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "FormType"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormType",
        "longname": "ApiComplexForm#GetFormType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18910,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormType.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the current form key.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetFormKey.js\n\t */",
        "description": "Returns the current form key.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetFormKey",
        "longname": "ApiComplexForm#GetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18934,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets a key to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sKey - Form key.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetFormKey.js\n\t */",
        "description": "Sets a key to the current form.",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sKey",
                "description": "Form key.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetFormKey",
        "longname": "ApiComplexForm#SetFormKey",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetFormKey.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the tip text of the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTipText.js\n\t */",
        "description": "Returns the tip text of the current form.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTipText",
        "longname": "ApiComplexForm#GetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 18983,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the tip text to the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {string} sText - Tip text.\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTipText.js\n\t */",
        "description": "Sets the tip text to the current form.",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "Tip text.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTipText",
        "longname": "ApiComplexForm#SetTipText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19000,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTipText.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsRequired.js\n\t */",
        "description": "Checks if the current form is required.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsRequired",
        "longname": "ApiComplexForm#IsRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19020,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies if the current form should be required.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {boolean} bRequired - Defines if the current form is required (true) or not (false).\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetRequired.js\n\t */",
        "description": "Specifies if the current form should be required.",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bRequired",
                "description": "Defines if the current form is required (true) or not (false).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetRequired",
        "longname": "ApiComplexForm#SetRequired",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19032,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetRequired.js"
        ]
    },
    {
        "comment": "/**\n\t * Checks if the current form is fixed size.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/IsFixed.js\n\t */",
        "description": "Checks if the current form is fixed size.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "IsFixed",
        "longname": "ApiComplexForm#IsFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19054,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/IsFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to a fixed size form.\n\t * @memberof ApiFormBase\n\t * @param {twips} nWidth - The wrapper shape width measured in twentieths of a point (1/1440 of an inch).\n\t * @param {twips} nHeight - The wrapper shape height measured in twentieths of a point (1/1440 of an inch).\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToFixed.js\n\t */",
        "description": "Converts the current form to a fixed size form.",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nWidth",
                "description": "The wrapper shape width measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nHeight",
                "description": "The wrapper shape height measured in twentieths of a point (1/1440 of an inch).",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToFixed",
        "longname": "ApiComplexForm#ToFixed",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19067,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToFixed.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the current form to an inline form.\n\t *Picture form can't be converted to an inline form, it's always a fixed size object.*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/ToInline.js\n\t */",
        "description": "Converts the current form to an inline form.\nPicture form can't be converted to an inline form, it's always a fixed size object.*",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToInline",
        "longname": "ApiComplexForm#ToInline",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19085,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/ToInline.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that border color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBorderColor.js\n\t */",
        "description": "Sets the border color to the current form.",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that border color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBorderColor",
        "longname": "ApiComplexForm#SetBorderColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19106,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBorderColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the background color to the current form.\n\t * @memberof ApiFormBase\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} bNone - Defines that background color will not be set.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetBackgroundColor.js\n\t */",
        "description": "Sets the background color to the current form.",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "bNone",
                "description": "Defines that background color will not be set.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetBackgroundColor",
        "longname": "ApiComplexForm#SetBackgroundColor",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19138,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetBackgroundColor.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text from the current form.\n\t *Returns the value as a string if possible for the given form type*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {string}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetText.js\n\t */",
        "description": "Returns the text from the current form.\nReturns the value as a string if possible for the given form type*",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetText",
        "longname": "ApiComplexForm#GetText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19181,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetText.js"
        ]
    },
    {
        "comment": "/**\n\t * Clears the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Clear.js\n\t */",
        "description": "Clears the current form.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": null,
        "name": "Clear",
        "longname": "ApiComplexForm#Clear",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19191,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Clear.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\n\t * The null value will be returned for the inline forms.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiShape} - returns the shape in which the form is placed.\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetWrapperShape.js\n\t */",
        "description": "Returns a shape in which the form is placed to control the position and size of the fixed size form frame.\nThe null value will be returned for the inline forms.",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiShape"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetWrapperShape",
        "longname": "ApiComplexForm#GetWrapperShape",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19205,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetWrapperShape.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the placeholder text to the current form.\n\t *Can't be set to checkbox or radio button.*\n\t * @memberof ApiFormBase\n\t * @param {string} sText - The text that will be set to the current form.\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {boolean}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetPlaceholderText.js\n\t */",
        "description": "Sets the placeholder text to the current form.\nCan't be set to checkbox or radio button.*",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ],
                    "parsedType": null
                },
                "name": "sText",
                "description": "The text that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetPlaceholderText",
        "longname": "ApiComplexForm#SetPlaceholderText",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19223,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetPlaceholderText.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the text properties to the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @param {ApiTextPr} oTextPr - The text properties that will be set to the current form.\n\t * @return {boolean}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/SetTextPr.js\n\t */",
        "description": "Sets the text properties to the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                },
                "name": "oTextPr",
                "description": "The text properties that will be set to the current form.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "SetTextPr",
        "longname": "ApiComplexForm#SetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19244,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/SetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns the text properties from the current form.\n\t *Used if possible for this type of form*\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @return {ApiTextPr}  \n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/GetTextPr.js\n\t */",
        "description": "Returns the text properties from the current form.\nUsed if possible for this type of form*",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiTextPr"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetTextPr",
        "longname": "ApiComplexForm#GetTextPr",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19262,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/GetTextPr.js"
        ]
    },
    {
        "comment": "/**\n\t * Places a cursor before/after the current form.\n\t * @param {boolean?} [isAfter=true] - Specifies whether a cursor will be placed before (false) or after (true) the current form.\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @since 8.1.0\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/MoveCursorOutside.js\n\t */",
        "description": "Places a cursor before/after the current form.",
        "memberof": "ApiComplexForm",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAfter",
                "description": "Specifies whether a cursor will be placed before (false) or after (true) the current form.",
                "optional": true,
                "defaultvalue": true
            }
        ],
        "returns": null,
        "name": "MoveCursorOutside",
        "longname": "ApiComplexForm#MoveCursorOutside",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19274,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/MoveCursorOutside.js"
        ]
    },
    {
        "comment": "/**\n\t * Copies the current form (copies with the shape if it exists).\n\t * @memberof ApiFormBase\n\t * @typeofeditors [\"CDE\", \"CFE\"]\n\t * @returns {?ApiForm}\n\t * @see office-js-api/Examples/{Editor}/ApiFormBase/Methods/Copy.js\n\t */",
        "description": "Copies the current form (copies with the shape if it exists).",
        "memberof": "ApiComplexForm",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "ApiForm"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "Copy",
        "longname": "ApiComplexForm#Copy",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 19285,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiFormBase/Methods/Copy.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTableRowPr class.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tableRowPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTableRowPr class.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tableRowPr\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTableRow#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14669,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n     * Sets the height to the current table row within the current table.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"auto\" | \"atLeast\")} sHRule - The rule to apply the height value to the current table row or ignore it. Use the <code>\"atLeast\"</code> value to enable the <code>SetHeight</code> method use.\n\t * @param {twips} [nValue] - The height for the current table row measured in twentieths of a point (1/1440 of an inch). This value will be ignored if <code>sHRule=\"auto\"<code>.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/SetHeight.js\n\t */",
        "description": "Sets the height to the current table row within the current table.",
        "memberof": "ApiTableRow",
        "params": [
            {
                "type": {
                    "names": [
                        "\"auto\"",
                        "\"atLeast\""
                    ],
                    "parsedType": null
                },
                "name": "sHRule",
                "description": "The rule to apply the height value to the current table row or ignore it. Use the <code>\"atLeast\"</code> value to enable the <code>SetHeight</code> method use.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The height for the current table row measured in twentieths of a point (1/1440 of an inch). This value will be ignored if <code>sHRule=\"auto\"<code>.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetHeight",
        "longname": "ApiTableRow#SetHeight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14681,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/SetHeight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies that the current table row will be repeated at the top of each new page \n     * wherever this table is displayed. This gives this table row the behavior of a 'header' row on \n     * each of these pages. This element can be applied to any number of rows at the top of the \n     * table structure in order to generate multi-row table headers.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isHeader - The true value means that the current table row will be repeated at the top of each new page.\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/SetTableHeader.js\n\t */",
        "description": "Specifies that the current table row will be repeated at the top of each new page \nwherever this table is displayed. This gives this table row the behavior of a 'header' row on \neach of these pages. This element can be applied to any number of rows at the top of the \ntable structure in order to generate multi-row table headers.",
        "memberof": "ApiTableRow",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isHeader",
                "description": "The true value means that the current table row will be repeated at the top of each new page.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTableHeader",
        "longname": "ApiTableRow#SetTableHeader",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14700,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/SetTableHeader.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTableRowPr object into the JSON object.\n\t * @memberof ApiTableRowPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTableRowPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTableRowPr object into the JSON object.",
        "memberof": "ApiTableRow",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTableRow#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14712,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableRowPr/Methods/ToJSON.js"
        ]
    },
    {
        "comment": "/**\n\t * Returns a type of the ApiTableCellPr class.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {\"tableCellPr\"}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/GetClassType.js\n\t */",
        "description": "Returns a type of the ApiTableCellPr class.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "\"tableCellPr\""
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "GetClassType",
        "longname": "ApiTableCell#GetClassType",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14731,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/GetClassType.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the shading applied to the contents of the table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {ShdType} sType - The shading type which will be applied to the contents of the current table cell.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @param {boolean} [isAuto=false] - The true value disables the table cell contents shading.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetShd.js\n\t */",
        "description": "Specifies the shading applied to the contents of the table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "ShdType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The shading type which will be applied to the contents of the current table cell.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isAuto",
                "description": "The true value disables the table cell contents shading.",
                "optional": true,
                "defaultvalue": false
            }
        ],
        "returns": null,
        "name": "SetShd",
        "longname": "ApiTableCell#SetShd",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14746,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetShd.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\n\t * of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space below the bottom extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell bottom margin will be used, otherwise\n\t * the table cell bottom margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginBottom.js\n\t */",
        "description": "Specifies an amount of space which will be left between the bottom extent of the cell contents and the border\nof a specific table cell within a table.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space below the bottom extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell bottom margin will be used, otherwise\nthe table cell bottom margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginBottom",
        "longname": "ApiTableCell#SetCellMarginBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14761,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the left extent of the cell contents and \n\t * the border of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space to the left extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell left margin will be used, otherwise\n\t * the table cell left margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginLeft.js\n\t */",
        "description": "Specifies an amount of space which will be left between the left extent of the cell contents and \nthe border of a specific table cell within a table.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space to the left extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell left margin will be used, otherwise\nthe table cell left margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginLeft",
        "longname": "ApiTableCell#SetCellMarginLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14790,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the right extent of the cell contents and the border of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space to the right extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell right margin will be used, otherwise\n\t * the table cell right margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginRight.js\n\t */",
        "description": "Specifies an amount of space which will be left between the right extent of the cell contents and the border of a specific table cell within a table.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space to the right extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell right margin will be used, otherwise\nthe table cell right margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginRight",
        "longname": "ApiTableCell#SetCellMarginRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14818,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies an amount of space which will be left between the upper extent of the cell contents\n\t * and the border of a specific table cell within a table.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {?twips} nValue - The value for the amount of space above the upper extent of the cell measured in twentieths\n\t * of a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell top margin will be used, otherwise\n\t * the table cell top margin will be overridden with the specified value for the current cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellMarginTop.js\n\t */",
        "description": "Specifies an amount of space which will be left between the upper extent of the cell contents\nand the border of a specific table cell within a table.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "twips"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The value for the amount of space above the upper extent of the cell measured in twentieths\nof a point (1/1440 of an inch). If this value is <code>null</code>, then default table cell top margin will be used, otherwise\nthe table cell top margin will be overridden with the specified value for the current cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellMarginTop",
        "longname": "ApiTableCell#SetCellMarginTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14847,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellMarginTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the bottom of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell bottom border style.\n\t * @param {pt_8} nSize - The width of the current cell bottom border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the bottom part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderBottom.js\n\t */",
        "description": "Sets the border which will be displayed at the bottom of the current table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The cell bottom border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current cell bottom border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the bottom part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderBottom",
        "longname": "ApiTableCell#SetCellBorderBottom",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14878,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderBottom.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed to the left of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell left border style.\n\t * @param {pt_8} nSize - The width of the current cell left border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the left part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderLeft.js\n\t */",
        "description": "Sets the border which will be displayed to the left of the current table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The cell left border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current cell left border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the left part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderLeft",
        "longname": "ApiTableCell#SetCellBorderLeft",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14895,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderLeft.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed to the right of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell right border style.\n\t * @param {pt_8} nSize - The width of the current cell right border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the right part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderRight.js\n\t */",
        "description": "Sets the border which will be displayed to the right of the current table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The cell right border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current cell right border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the right part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderRight",
        "longname": "ApiTableCell#SetCellBorderRight",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14912,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderRight.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the border which will be displayed at the top of the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {BorderType} sType - The cell top border style.\n\t * @param {pt_8} nSize - The width of the current cell top border measured in eighths of a point.\n\t * @param {pt} nSpace - The spacing offset in the top part of the table cell measured in points used to place this border.\n\t * @param {byte} r - Red color component value.\n\t * @param {byte} g - Green color component value.\n\t * @param {byte} b - Blue color component value.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetCellBorderTop.js\n\t */",
        "description": "Sets the border which will be displayed at the top of the current table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "BorderType"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The cell top border style.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt_8"
                    ],
                    "parsedType": null
                },
                "name": "nSize",
                "description": "The width of the current cell top border measured in eighths of a point.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "pt"
                    ],
                    "parsedType": null
                },
                "name": "nSpace",
                "description": "The spacing offset in the top part of the table cell measured in points used to place this border.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "r",
                "description": "Red color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "g",
                "description": "Green color component value.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "byte"
                    ],
                    "parsedType": null
                },
                "name": "b",
                "description": "Blue color component value.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetCellBorderTop",
        "longname": "ApiTableCell#SetCellBorderTop",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14929,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetCellBorderTop.js"
        ]
    },
    {
        "comment": "/**\n\t * Sets the preferred width to the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {TableWidth} sType - Type of the width value from one of the available width values types.\n\t * @param {number} [nValue] - The table cell width value measured in positive integers.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetWidth.js\n\t */",
        "description": "Sets the preferred width to the current table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "TableWidth"
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "Type of the width value from one of the available width values types.",
                "optional": null,
                "defaultvalue": null
            },
            {
                "type": {
                    "names": [
                        "number"
                    ],
                    "parsedType": null
                },
                "name": "nValue",
                "description": "The table cell width value measured in positive integers.",
                "optional": true,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetWidth",
        "longname": "ApiTableCell#SetWidth",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14942,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetWidth.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the vertical alignment for the text contents within the current table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"top\" | \"center\" | \"bottom\")} sType - The available types of the vertical alignment for the text contents of the current table cell.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetVerticalAlign.js\n\t */",
        "description": "Specifies the vertical alignment for the text contents within the current table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "\"top\"",
                        "\"center\"",
                        "\"bottom\""
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The available types of the vertical alignment for the text contents of the current table cell.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetVerticalAlign",
        "longname": "ApiTableCell#SetVerticalAlign",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14954,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetVerticalAlign.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies the direction of the text flow for this table cell.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {(\"lrtb\" | \"tbrl\" | \"btlr\")} sType - The available types of the text direction in the table cell: <code>\"lrtb\"</code>\n\t * - text direction left-to-right moving from top to bottom, <code>\"tbrl\"</code> - text direction top-to-bottom moving from right\n\t * to left, <code>\"btlr\"</code> - text direction bottom-to-top moving from left to right.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetTextDirection.js\n\t */",
        "description": "Specifies the direction of the text flow for this table cell.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "\"lrtb\"",
                        "\"tbrl\"",
                        "\"btlr\""
                    ],
                    "parsedType": null
                },
                "name": "sType",
                "description": "The available types of the text direction in the table cell: <code>\"lrtb\"</code>\n- text direction left-to-right moving from top to bottom, <code>\"tbrl\"</code> - text direction top-to-bottom moving from right\nto left, <code>\"btlr\"</code> - text direction bottom-to-top moving from left to right.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetTextDirection",
        "longname": "ApiTableCell#SetTextDirection",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14974,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetTextDirection.js"
        ]
    },
    {
        "comment": "/**\n\t * Specifies how the current table cell is laid out when the parent table is displayed in a document. This setting\n\t * only affects the behavior of the cell when the {@link ApiTablePr#SetTableLayout} table layout for this table is set to use the <code>\"autofit\"</code> algorithm.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @param {boolean} isNoWrap - The true value means that the current table cell will not be wrapped in the parent table.\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/SetNoWrap.js\n\t */",
        "description": "Specifies how the current table cell is laid out when the parent table is displayed in a document. This setting\nonly affects the behavior of the cell when the {@link ApiTablePr#SetTableLayout} table layout for this table is set to use the <code>\"autofit\"</code> algorithm.",
        "memberof": "ApiTableCell",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ],
                    "parsedType": null
                },
                "name": "isNoWrap",
                "description": "The true value means that the current table cell will not be wrapped in the parent table.",
                "optional": null,
                "defaultvalue": null
            }
        ],
        "returns": null,
        "name": "SetNoWrap",
        "longname": "ApiTableCell#SetNoWrap",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 14993,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/SetNoWrap.js"
        ]
    },
    {
        "comment": "/**\n\t * Converts the ApiTableCellPr object into the JSON object.\n\t * @memberof ApiTableCellPr\n\t * @typeofeditors [\"CDE\"]\n\t * @returns {JSON}\n\t * @see office-js-api/Examples/{Editor}/ApiTableCellPr/Methods/ToJSON.js\n\t */",
        "description": "Converts the ApiTableCellPr object into the JSON object.",
        "memberof": "ApiTableCell",
        "params": null,
        "returns": [
            {
                "type": {
                    "names": [
                        "JSON"
                    ],
                    "parsedType": null
                }
            }
        ],
        "name": "ToJSON",
        "longname": "ApiTableCell#ToJSON",
        "kind": "function",
        "scope": "instance",
        "type": null,
        "properties": null,
        "meta": {
            "lineno": 15005,
            "columnno": 1
        },
        "see": [
            "office-js-api/Examples/Word/ApiTableCellPr/Methods/ToJSON.js"
        ]
    }
]